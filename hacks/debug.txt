allocated mappingtable: 0x402a6000 -> 0x40aa6000unmanaged code trampoline is at 0x3eca5000
indirect jump trampoline is at 0x3eca5068
indirect jump trampoline is at 0x3eca516b
indirect jump trampoline is at 0x3eca5242
watchpoint code trampoline is at 0x3eca5319
int80 trampoline is at 0x3eca531a
Bootstrap threads trampo is at 0x3eca53b8
... for tld=0x40cb4000
INITIALIZING DATA SHARED BETWEEN THREADS
guest mmap
result = 040000000
Marking 040000000 as allocated
THE 1 ENTRIES:
 (040000000,070000000)TOTAL USED 805 MB

guest mmap
result = 080000000
Marking 080000000 as allocated
THE 2 ENTRIES:
 (040000000,070000000) (080000000,081000000)TOTAL USED 822 MB

guest mmap
result = 078000000
Marking 078000000 as allocated
THE 3 ENTRIES:
 (040000000,070000000) (078000000,078010000) (080000000,081000000)TOTAL USED 822 MB

end fun: 
guest mmap
result = 0a000000
Marking 0a000000 as allocated
THE 4 ENTRIES:
 (0a000000,0a020cc8) (040000000,070000000) (078000000,078010000) (080000000,081000000)TOTAL USED 822 MB

guest mmap
result = 056555000
Marking 056555000 as allocated
THE 5 ENTRIES:
 (0a000000,0a020cc8) (040000000,070000000) (056555000,056574628) (078000000,078010000) (080000000,081000000)address space overlaps at 2
TOTAL USED 822 MB

guest mmap
result = 056575000
Marking 056575000 as allocated
THE 6 ENTRIES:
 (0a000000,0a020cc8) (040000000,070000000) (056555000,056574628) (056575000,056576918) (078000000,078010000) (080000000,081000000)address space overlaps at 2
TOTAL USED 822 MB

guest mmap
result = 090000000
Marking 090000000 as allocated
THE 7 ENTRIES:
 (0a000000,0a020cc8) (040000000,070000000) (056555000,056574628) (056575000,056576918) (078000000,078010000) (080000000,081000000) (090000000,0b0000000)address space overlaps at 2
TOTAL USED 1359 MB

ff = 0
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565561d0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca542astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565561d0, *transl_address=0x3eca542a)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISdddadddddddEND FLAG ANALYSIS: (orig=0x0565561d0)0x89e0                    mov %esp, %eax                  
: (orig=0x0565561d2)0xe8d93a0000              call +0x00003ad9                
action_call
start fun: action_call(*addr=0x565561d2, *transl_addr=0x3eca542c, length=5)
original call_target: 0x56559cb0return_address = 0565561d7
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559cb0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x056559cb0)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x056559cb1)0x89e5                    mov %esp, %ebp                  
: (orig=0x056559cb3)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x056559cb4)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x056559cb5)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056559cb6)0x83ec5c                  sub $0x5c, %esp                 
: (orig=0x056559cb9)0xe88d430100              call +0x0001438d                
action_call
start fun: action_call(*addr=0x56559cb9, *transl_addr=0x3eca548a, length=5)
original call_target: 0x5656e04breturn_address = 056559cbe
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca54ab, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca542a,   next_tu=0x5656e04f (len: 143)
ff = 1
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559cbe)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca54c0start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559cbe, *transl_address=0x3eca54c0)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISAdadadddddddaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x056559cbe)0x81c336c30100            add $0x0001c336, %ebx           
: (orig=0x056559cc4)0x8945b8                  mov %eax, 0xb8(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559cc7)0x0f31                    rdtsc                           
: (orig=0x056559cc9)0x898384feffff            mov %eax, 0xfffffe84(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559ccf)0x8b8328ffffff            mov 0xffffff28(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056559cd5)0x8db328ffffff            lea 0xffffff28(%ebx), %esi      
: (orig=0x056559cdb)0x899388feffff            mov %edx, 0xfffffe88(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559ce1)0x89f2                    mov %esi, %edx                  
: (orig=0x056559ce3)0x2b9300000000            sub 0x00000000(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x056559ce9)0x89b350050000            mov %esi, 0x00000550(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559cef)0x85c0                    test %eax, %eax                 
PATCHING TST REG REG
: (orig=0x056559cf1)0x899348050000            mov %edx, 0x00000548(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559cf7)0x745d                    jz +0x5d                        
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x56559cf7, *transl_addr=0x3eca558c, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d56)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97000, target: 0x56559d56, origin: 0x3eca558estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559cf9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97038, target: 0x56559cf9, origin: 0x3eca5593end fun: -> close, transl_length=11
end fun: -> 0x3eca54c0,   next_tu=0x56559cf9 (len: 215)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559cf9)
end fun: -> 0x00000000
ff = 2
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559cf9)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca559estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559cf9, *transl_address=0x3eca559e)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 021 with reg 0

BEGIN FLAG ANALYSISCAdddEND FLAG ANALYSIS: (orig=0x056559cf9)0x89f2                    mov %esi, %edx                  
: (orig=0x056559cfb)0x8dbb30ffffff            lea 0xffffff30(%ebx), %edi      
: (orig=0x056559d01)0xeb32                    jmp +0x32                       
original_addr=056559d01 / addr=056559d01
start fun: action_jmp(*addr=0x56559d01, *transl_addr=0x3eca55a7, length=2)
action_jmp
original jmp_target: 0x56559d35start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d35)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056559d35)0x83f821                  cmp $0x21, %eax                 
: (orig=0x056559d38)0x77ce                    ja +0xce                        
action_jcc
start fun: action_jcc(*addr=0x56559d38, *transl_addr=0x3eca55aa, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d08)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97070, target: 0x56559d08, origin: 0x3eca55acstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d3a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec970a8, target: 0x56559d3a, origin: 0x3eca55b1end fun: -> close, transl_length=11
end fun: -> 0x3eca559e,   next_tu=0x56559d3a (len: 23)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d3a)
end fun: -> 0x00000000
ff = 3
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d3a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca55bcstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559d3a, *transl_address=0x3eca55bc)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdadadEND FLAG ANALYSIS: (orig=0x056559d3a)0x89948368050000          mov %edx, 0x00000568(%ebx, %eax*4) 
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056559d41)0x83c208                  add $0x08, %edx                 
: (orig=0x056559d44)0x89d0                    mov %edx, %eax                  
: (orig=0x056559d46)0x29f0                    sub %esi, %eax                  
: (orig=0x056559d48)0x8b4407f8                mov 0xf8(%edi, %eax), %eax      
leal-based check (opsize = 4)
: (orig=0x056559d4c)0x85c0                    test %eax, %eax                 
: (orig=0x056559d4e)0x75e5                    jnz +0xe5                       
action_jcc
start fun: action_jcc(*addr=0x56559d4e, *transl_addr=0x3eca55f7, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d35)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97038, target: 0x56559d35, origin: 0x3eca55f9start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d50)
end fun: -> 0x00000000
allocated trampoline: 0x3ec970e0, target: 0x56559d50, origin: 0x3eca55feend fun: -> close, transl_length=11
end fun: -> 0x3eca55bc,   next_tu=0x56559d50 (len: 70)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d35)
end fun: -> 0x00000000
ff = 4
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d35)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5609start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559d35, *transl_address=0x3eca5609)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 021 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056559d35)0x83f821                  cmp $0x21, %eax                 
: (orig=0x056559d38)0x77ce                    ja +0xce                        
action_jcc
start fun: action_jcc(*addr=0x56559d38, *transl_addr=0x3eca560c, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d08)
end fun: -> 0x00000000
allocated trampoline: 0x3ec970a8, target: 0x56559d08, origin: 0x3eca560estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d3a)
end fun: -> 0x3eca55bc
end fun: -> close, transl_length=11
end fun: -> 0x3eca5609,   next_tu=0x56559d3a (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d08)
end fun: -> 0x00000000
ff = 5
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d08)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca561estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559d08, *transl_address=0x3eca561e)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 0f with reg 1

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x056559d08)0xb9ffffff6f              mov $0x6fffffff, %ecx           
: (orig=0x056559d0d)0x29c1                    sub %eax, %ecx                  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056559d0f)0x83f90f                  cmp $0x0f, %ecx                 
opcode escape found: 0f: (orig=0x056559d12)0x0f8740020000            ja +0x00000240                  
action_jcc
start fun: action_jcc(*addr=0x56559d12, *transl_addr=0x3eca5628, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559f58)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97038, target: 0x56559f58, origin: 0x3eca562astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d18)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97118, target: 0x56559d18, origin: 0x3eca562fend fun: -> close, transl_length=11
end fun: -> 0x3eca561e,   next_tu=0x56559d18 (len: 21)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559f58)
end fun: -> 0x00000000
ff = 6
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559f58)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca563astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559f58, *transl_address=0x3eca563a)
end fun:  
opcode table: 0x00244ba8 -> 0x00216b40 (0x00216c58)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 0fffffffc with reg 1

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x056559f58)0x8d0c00                  lea (%eax, %eax), %ecx          
opcode table: 0x00244ba8 -> 0x00216b40 (0x00216c58)
: (orig=0x056559f5b)0xd1f9                    sar $1, %ecx                    
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056559f5d)0x83f9fc                  cmp $0xfc, %ecx                 
: (orig=0x056559f60)0x760e                    jbe +0x0e                       
action_jcc
start fun: action_jcc(*addr=0x56559f60, *transl_addr=0x3eca5643, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559f70)
end fun: -> 0x00000000
allocated trampoline: 0x3ec970a8, target: 0x56559f70, origin: 0x3eca5645start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559f62)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97150, target: 0x56559f62, origin: 0x3eca564aend fun: -> close, transl_length=11
end fun: -> 0x3eca563a,   next_tu=0x56559f62 (len: 20)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559f70)
end fun: -> 0x00000000
ff = 7
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559f70)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5655start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559f70, *transl_address=0x3eca5655)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 0b with reg 1

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x056559f70)0xb9fffdff6f              mov $0x6ffffdff, %ecx           
: (orig=0x056559f75)0x29c1                    sub %eax, %ecx                  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056559f77)0x83f90b                  cmp $0x0b, %ecx                 
opcode escape found: 0f: (orig=0x056559f7a)0x0f87d8010000            ja +0x000001d8                  
action_jcc
start fun: action_jcc(*addr=0x56559f7a, *transl_addr=0x3eca565f, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a158)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97038, target: 0x5655a158, origin: 0x3eca5661start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559f80)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97188, target: 0x56559f80, origin: 0x3eca5666end fun: -> close, transl_length=11
end fun: -> 0x3eca5655,   next_tu=0x56559f80 (len: 21)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a158)
end fun: -> 0x00000000
ff = 8
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a158)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5671start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a158, *transl_address=0x3eca5671)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 0a with reg 1

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05655a158)0xb9fffeff6f              mov $0x6ffffeff, %ecx           
: (orig=0x05655a15d)0x29c1                    sub %eax, %ecx                  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655a15f)0x83f90a                  cmp $0x0a, %ecx                 
opcode escape found: 0f: (orig=0x05655a162)0x0f87befbffff            ja +0xfffffbbe                  
action_jcc
start fun: action_jcc(*addr=0x5655a162, *transl_addr=0x3eca567b, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d26)
end fun: -> 0x00000000
allocated trampoline: 0x3ec970a8, target: 0x56559d26, origin: 0x3eca567dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a168)
end fun: -> 0x00000000
allocated trampoline: 0x3ec971c0, target: 0x5655a168, origin: 0x3eca5682end fun: -> close, transl_length=11
end fun: -> 0x3eca5671,   next_tu=0x5655a168 (len: 21)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a168)
end fun: -> 0x00000000
ff = 9
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a168)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca568dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a168, *transl_address=0x3eca568d)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdadaddaaEND FLAG ANALYSIS: (orig=0x05655a168)0x05c0000010              add $0x100000c0, %eax           
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
: (orig=0x05655a16d)0xf7d8                    neg %eax                        
: (orig=0x05655a16f)0x89948368050000          mov %edx, 0x00000568(%ebx, %eax*4) 
leal-based check (opsize = 4)
: (orig=0x05655a176)0xe9c6fbffff              jmp +0xfffffbc6                 
original_addr=05655a176 / addr=05655a176
start fun: action_jmp(*addr=0x5655a176, *transl_addr=0x3eca56b0, length=5)
action_jmp
jump_target = 0fffffbc6 + 05655a176 + 05original jmp_target: 0x56559d41start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d41)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056559d41)0x83c208                  add $0x08, %edx                 
: (orig=0x056559d44)0x89d0                    mov %edx, %eax                  
: (orig=0x056559d46)0x29f0                    sub %esi, %eax                  
: (orig=0x056559d48)0x8b4407f8                mov 0xf8(%edi, %eax), %eax      
leal-based check (opsize = 4)
: (orig=0x056559d4c)0x85c0                    test %eax, %eax                 
: (orig=0x056559d4e)0x75e5                    jnz +0xe5                       
action_jcc
start fun: action_jcc(*addr=0x56559d4e, *transl_addr=0x3eca56cf, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d35)
end fun: -> 0x3eca5609
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d50)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97038, target: 0x56559d50, origin: 0x3eca56d6end fun: -> close, transl_length=11
end fun: -> 0x3eca568d,   next_tu=0x56559d50 (len: 77)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d18)
end fun: -> 0x00000000
ff = 10
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d18)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca56e1start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559d18, *transl_address=0x3eca56e1)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdadadadEND FLAG ANALYSIS: (orig=0x056559d18)0xb96d010070              mov $0x7000016d, %ecx           
: (orig=0x056559d1d)0x29c1                    sub %eax, %ecx                  
: (orig=0x056559d1f)0x89948b38000000          mov %edx, 0x00000038(%ebx, %ecx*4) 
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056559d26)0x83c208                  add $0x08, %edx                 
: (orig=0x056559d29)0x89d0                    mov %edx, %eax                  
: (orig=0x056559d2b)0x29f0                    sub %esi, %eax                  
: (orig=0x056559d2d)0x8b4407f8                mov 0xf8(%edi, %eax), %eax      
leal-based check (opsize = 4)
: (orig=0x056559d31)0x85c0                    test %eax, %eax                 
: (orig=0x056559d33)0x741b                    jz +0x1b                        
action_jcc
start fun: action_jcc(*addr=0x56559d33, *transl_addr=0x3eca5723, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d50)
end fun: -> 0x00000000
allocated trampoline: 0x3ec971c0, target: 0x56559d50, origin: 0x3eca5725start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d35)
end fun: -> 0x3eca5609
end fun: -> close, transl_length=11
end fun: -> 0x3eca56e1,   next_tu=0x56559d35 (len: 77)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d50)
end fun: -> 0x00000000
ff = 11
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d50)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5735start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559d50, *transl_address=0x3eca5735)
end fun:  


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056559d50)0x8b9348050000            mov 0x00000548(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x056559d56)0x85d2                    test %edx, %edx                 
: (orig=0x056559d58)0x7468                    jz +0x68                        
action_jcc
start fun: action_jcc(*addr=0x56559d58, *transl_addr=0x3eca5751, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dc2)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97118, target: 0x56559dc2, origin: 0x3eca5753start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d5a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec971f8, target: 0x56559d5a, origin: 0x3eca5758end fun: -> close, transl_length=11
end fun: -> 0x3eca5735,   next_tu=0x56559d5a (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d5a)
end fun: -> 0x00000000
ff = 12
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d5a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5763start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559d5a, *transl_address=0x3eca5763)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056559d5a)0x8b8378050000            mov 0x00000578(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056559d60)0x85c0                    test %eax, %eax                 
: (orig=0x056559d62)0x7403                    jz +0x03                        
action_jcc
start fun: action_jcc(*addr=0x56559d62, *transl_addr=0x3eca577f, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d67)
end fun: -> 0x00000000
allocated trampoline: 0x3ec971c0, target: 0x56559d67, origin: 0x3eca5781start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d64)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97230, target: 0x56559d64, origin: 0x3eca5786end fun: -> close, transl_length=11
end fun: -> 0x3eca5763,   next_tu=0x56559d64 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d64)
end fun: -> 0x00000000
ff = 13
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d64)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5791start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559d64, *transl_address=0x3eca5791)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSIS: (orig=0x056559d64)0x015004                  add %edx, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x056559d67)0x8b8374050000            mov 0x00000574(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056559d6d)0x85c0                    test %eax, %eax                 
: (orig=0x056559d6f)0x7403                    jz +0x03                        
action_jcc
start fun: action_jcc(*addr=0x56559d6f, *transl_addr=0x3eca57c1, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d74)
end fun: -> 0x00000000
allocated trampoline: 0x3ec971f8, target: 0x56559d74, origin: 0x3eca57c3start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d71)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97268, target: 0x56559d71, origin: 0x3eca57c8end fun: -> close, transl_length=11
end fun: -> 0x3eca5791,   next_tu=0x56559d71 (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d71)
end fun: -> 0x00000000
ff = 14
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d71)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca57d3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559d71, *transl_address=0x3eca57d3)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSIS: (orig=0x056559d71)0x015004                  add %edx, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x056559d74)0x8b837c050000            mov 0x0000057c(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056559d7a)0x85c0                    test %eax, %eax                 
: (orig=0x056559d7c)0x7403                    jz +0x03                        
action_jcc
start fun: action_jcc(*addr=0x56559d7c, *transl_addr=0x3eca5803, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d81)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97230, target: 0x56559d81, origin: 0x3eca5805start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d7e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec972a0, target: 0x56559d7e, origin: 0x3eca580aend fun: -> close, transl_length=11
end fun: -> 0x3eca57d3,   next_tu=0x56559d7e (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d7e)
end fun: -> 0x00000000
ff = 15
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d7e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5815start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559d7e, *transl_address=0x3eca5815)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSIS: (orig=0x056559d7e)0x015004                  add %edx, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x056559d81)0x8b8380050000            mov 0x00000580(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056559d87)0x85c0                    test %eax, %eax                 
: (orig=0x056559d89)0x7403                    jz +0x03                        
action_jcc
start fun: action_jcc(*addr=0x56559d89, *transl_addr=0x3eca5845, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d8e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97268, target: 0x56559d8e, origin: 0x3eca5847start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d8b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec972d8, target: 0x56559d8b, origin: 0x3eca584cend fun: -> close, transl_length=11
end fun: -> 0x3eca5815,   next_tu=0x56559d8b (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d8b)
end fun: -> 0x00000000
ff = 16
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d8b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5857start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559d8b, *transl_address=0x3eca5857)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSIS: (orig=0x056559d8b)0x015004                  add %edx, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x056559d8e)0x8b83ac050000            mov 0x000005ac(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056559d94)0x85c0                    test %eax, %eax                 
: (orig=0x056559d96)0x7403                    jz +0x03                        
action_jcc
start fun: action_jcc(*addr=0x56559d96, *transl_addr=0x3eca5887, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d9b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec972a0, target: 0x56559d9b, origin: 0x3eca5889start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d98)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97310, target: 0x56559d98, origin: 0x3eca588eend fun: -> close, transl_length=11
end fun: -> 0x3eca5857,   next_tu=0x56559d98 (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d98)
end fun: -> 0x00000000
ff = 17
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559d98)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5899start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559d98, *transl_address=0x3eca5899)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSIS: (orig=0x056559d98)0x015004                  add %edx, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x056559d9b)0x8b83c4050000            mov 0x000005c4(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056559da1)0x85c0                    test %eax, %eax                 
: (orig=0x056559da3)0x7403                    jz +0x03                        
action_jcc
start fun: action_jcc(*addr=0x56559da3, *transl_addr=0x3eca58c9, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559da8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec972d8, target: 0x56559da8, origin: 0x3eca58cbstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559da5)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97348, target: 0x56559da5, origin: 0x3eca58d0end fun: -> close, transl_length=11
end fun: -> 0x3eca5899,   next_tu=0x56559da5 (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559da5)
end fun: -> 0x00000000
ff = 18
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559da5)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca58dbstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559da5, *transl_address=0x3eca58db)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSIS: (orig=0x056559da5)0x015004                  add %edx, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x056559da8)0x8b832c060000            mov 0x0000062c(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056559dae)0x85c0                    test %eax, %eax                 
: (orig=0x056559db0)0x7403                    jz +0x03                        
action_jcc
start fun: action_jcc(*addr=0x56559db0, *transl_addr=0x3eca590b, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559db5)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97310, target: 0x56559db5, origin: 0x3eca590dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559db2)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97380, target: 0x56559db2, origin: 0x3eca5912end fun: -> close, transl_length=11
end fun: -> 0x3eca58db,   next_tu=0x56559db2 (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559db2)
end fun: -> 0x00000000
ff = 19
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559db2)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca591dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559db2, *transl_address=0x3eca591d)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSIS: (orig=0x056559db2)0x015004                  add %edx, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x056559db5)0x8b8394060000            mov 0x00000694(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056559dbb)0x85c0                    test %eax, %eax                 
: (orig=0x056559dbd)0x7403                    jz +0x03                        
action_jcc
start fun: action_jcc(*addr=0x56559dbd, *transl_addr=0x3eca594d, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dc2)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97348, target: 0x56559dc2, origin: 0x3eca594fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dbf)
end fun: -> 0x00000000
allocated trampoline: 0x3ec973b8, target: 0x56559dbf, origin: 0x3eca5954end fun: -> close, transl_length=11
end fun: -> 0x3eca591d,   next_tu=0x56559dbf (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dbf)
end fun: -> 0x00000000
ff = 20
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dbf)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca595fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559dbf, *transl_address=0x3eca595f)
end fun:  


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSIS: (orig=0x056559dbf)0x015004                  add %edx, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x056559dc2)0x8b93b8050000            mov 0x000005b8(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x056559dc8)0x85d2                    test %edx, %edx                 
: (orig=0x056559dca)0x740a                    jz +0x0a                        
action_jcc
start fun: action_jcc(*addr=0x56559dca, *transl_addr=0x3eca598f, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dd6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97380, target: 0x56559dd6, origin: 0x3eca5991start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dcc)
end fun: -> 0x00000000
allocated trampoline: 0x3ec973f0, target: 0x56559dcc, origin: 0x3eca5996end fun: -> close, transl_length=11
end fun: -> 0x3eca595f,   next_tu=0x56559dcc (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dcc)
end fun: -> 0x00000000
ff = 21
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dcc)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca59a1start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559dcc, *transl_address=0x3eca59a1)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056559dcc)0x837a0411                cmp $0x11, 0x04(%edx)           
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559dd0)0x0f85e7050000            jnz +0x000005e7                 
action_jcc
start fun: action_jcc(*addr=0x56559dd0, *transl_addr=0x3eca59b6, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a3bd)
end fun: -> 0x00000000
allocated trampoline: 0x3ec973b8, target: 0x5655a3bd, origin: 0x3eca59b8start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dd6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97428, target: 0x56559dd6, origin: 0x3eca59bdend fun: -> close, transl_length=11
end fun: -> 0x3eca59a1,   next_tu=0x56559dd6 (len: 32)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dd6)
end fun: -> 0x00000000
ff = 22
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dd6)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca59c8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559dd6, *transl_address=0x3eca59c8)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056559dd6)0x8b83ac050000            mov 0x000005ac(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056559ddc)0x85c0                    test %eax, %eax                 
: (orig=0x056559dde)0x7410                    jz +0x10                        
action_jcc
start fun: action_jcc(*addr=0x56559dde, *transl_addr=0x3eca59e4, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559df0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec973f0, target: 0x56559df0, origin: 0x3eca59e6start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559de0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97460, target: 0x56559de0, origin: 0x3eca59ebend fun: -> close, transl_length=11
end fun: -> 0x3eca59c8,   next_tu=0x56559de0 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559de0)
end fun: -> 0x00000000
ff = 23
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559de0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca59f6start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559de0, *transl_address=0x3eca59f6)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056559de0)0x8b8bb4050000            mov 0x000005b4(%ebx), %ecx      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056559de6)0x83790408                cmp $0x08, 0x04(%ecx)           
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559dea)0x0f8525050000            jnz +0x00000525                 
action_jcc
start fun: action_jcc(*addr=0x56559dea, *transl_addr=0x3eca5a25, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a315)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97428, target: 0x5655a315, origin: 0x3eca5a27start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559df0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97498, target: 0x56559df0, origin: 0x3eca5a2cend fun: -> close, transl_length=11
end fun: -> 0x3eca59f6,   next_tu=0x56559df0 (len: 58)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559df0)
end fun: -> 0x00000000
ff = 24
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559df0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5a37start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559df0, *transl_address=0x3eca5a37)
end fun:  


 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056559df0)0x8b8b00060000            mov 0x00000600(%ebx), %ecx      
leal-based check (opsize = 4)
: (orig=0x056559df6)0x85c9                    test %ecx, %ecx                 
: (orig=0x056559df8)0x740d                    jz +0x0d                        
action_jcc
start fun: action_jcc(*addr=0x56559df8, *transl_addr=0x3eca5a53, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e07)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97460, target: 0x56559e07, origin: 0x3eca5a55start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559dfa)
end fun: -> 0x00000000
allocated trampoline: 0x3ec974d0, target: 0x56559dfa, origin: 0x3eca5a5aend fun: -> close, transl_length=11
end fun: -> 0x3eca5a37,   next_tu=0x56559dfa (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e07)
end fun: -> 0x00000000
ff = 25
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e07)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5a65start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559e07, *transl_address=0x3eca5a65)
end fun:  


 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056559e07)0x8b8be0050000            mov 0x000005e0(%ebx), %ecx      
leal-based check (opsize = 4)
: (orig=0x056559e0d)0x85c9                    test %ecx, %ecx                 
: (orig=0x056559e0f)0x740d                    jz +0x0d                        
action_jcc
start fun: action_jcc(*addr=0x56559e0f, *transl_addr=0x3eca5a81, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e1e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97498, target: 0x56559e1e, origin: 0x3eca5a83start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e11)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97508, target: 0x56559e11, origin: 0x3eca5a88end fun: -> close, transl_length=11
end fun: -> 0x3eca5a65,   next_tu=0x56559e11 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e1e)
end fun: -> 0x00000000
ff = 26
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e1e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5a93start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559e1e, *transl_address=0x3eca5a93)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 7 with reg 7

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056559e1e)0x8bbbdc050000            mov 0x000005dc(%ebx), %edi      
leal-based check (opsize = 4)
: (orig=0x056559e24)0x85ff                    test %edi, %edi                 
opcode escape found: 0f: (orig=0x056559e26)0x0f8513050000            jnz +0x00000513                 
action_jcc
start fun: action_jcc(*addr=0x56559e26, *transl_addr=0x3eca5aaf, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a33f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97460, target: 0x5655a33f, origin: 0x3eca5ab1start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e2c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97540, target: 0x56559e2c, origin: 0x3eca5ab6end fun: -> close, transl_length=11
end fun: -> 0x3eca5a93,   next_tu=0x56559e2c (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e2c)
end fun: -> 0x00000000
ff = 27
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e2c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5ac1start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559e2c, *transl_address=0x3eca5ac1)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056559e2c)0x8bb3a4050000            mov 0x000005a4(%ebx), %esi      
leal-based check (opsize = 4)
: (orig=0x056559e32)0x85f6                    test %esi, %esi                 
opcode escape found: 0f: (orig=0x056559e34)0x0f8587040000            jnz +0x00000487                 
action_jcc
start fun: action_jcc(*addr=0x56559e34, *transl_addr=0x3eca5add, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a2c1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97498, target: 0x5655a2c1, origin: 0x3eca5adfstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e3a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97578, target: 0x56559e3a, origin: 0x3eca5ae4end fun: -> close, transl_length=11
end fun: -> 0x3eca5ac1,   next_tu=0x56559e3a (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e3a)
end fun: -> 0x00000000
ff = 28
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e3a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5aefstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559e3a, *transl_address=0x3eca5aef)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 7 with reg 7

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056559e3a)0x8bbb48050000            mov 0x00000548(%ebx), %edi      
leal-based check (opsize = 4)
: (orig=0x056559e40)0x85ff                    test %edi, %edi                 
opcode escape found: 0f: (orig=0x056559e42)0x0f8550010000            jnz +0x00000150                 
action_jcc
start fun: action_jcc(*addr=0x56559e42, *transl_addr=0x3eca5b0b, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559f98)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97540, target: 0x56559f98, origin: 0x3eca5b0dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e48)
end fun: -> 0x00000000
allocated trampoline: 0x3ec975b0, target: 0x56559e48, origin: 0x3eca5b12end fun: -> close, transl_length=11
end fun: -> 0x3eca5aef,   next_tu=0x56559e48 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559f98)
end fun: -> 0x00000000
ff = 29
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559f98)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5b1dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559f98, *transl_address=0x3eca5b1d)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x056559f98)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056559f9a)0x0f847f020000            jz +0x0000027f                  
action_jcc
start fun: action_jcc(*addr=0x56559f9a, *transl_addr=0x3eca5b1f, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a21f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97578, target: 0x5655a21f, origin: 0x3eca5b21start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559fa0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec975e8, target: 0x56559fa0, origin: 0x3eca5b26end fun: -> close, transl_length=11
end fun: -> 0x3eca5b1d,   next_tu=0x56559fa0 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559fa0)
end fun: -> 0x00000000
ff = 30
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559fa0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5b31start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559fa0, *transl_address=0x3eca5b31)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISAddadddEND FLAG ANALYSIS: (orig=0x056559fa0)0x8bb304060000            mov 0x00000604(%ebx), %esi      
leal-based check (opsize = 4)
: (orig=0x056559fa6)0x8b8bb0050000            mov 0x000005b0(%ebx), %ecx      
leal-based check (opsize = 4)
: (orig=0x056559fac)0x8b4004                  mov 0x04(%eax), %eax            
leal-based check (opsize = 4)
: (orig=0x056559faf)0x85f6                    test %esi, %esi                 
PATCHING TST REG REG
: (orig=0x056559fb1)0x8b4904                  mov 0x04(%ecx), %ecx            
leal-based check (opsize = 4)
: (orig=0x056559fb4)0x8975c8                  mov %esi, 0xc8(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559fb7)0x0f8479020000            jz +0x00000279                  
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x56559fb7, *transl_addr=0x3eca5bac, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a236)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97540, target: 0x5655a236, origin: 0x3eca5baestart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559fbd)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97620, target: 0x56559fbd, origin: 0x3eca5bb3end fun: -> close, transl_length=11
end fun: -> 0x3eca5b31,   next_tu=0x56559fbd (len: 134)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559fbd)
end fun: -> 0x00000000
ff = 31
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559fbd)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5bbestart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559fbd, *transl_address=0x3eca5bbe)
end fun:  
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
opcode escape found: 0f

 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdddc1.dddadEND FLAG ANALYSIS: (orig=0x056559fbd)0x89ce                    mov %ecx, %esi                  
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
: (orig=0x056559fbf)0xc1ee03                  shr $0x03, %esi                 
: (orig=0x056559fc2)0x8975d0                  mov %esi, 0xd0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056559fc5)0x8b75c8                  mov 0xc8(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x056559fc8)0x8b7604                  mov 0x04(%esi), %esi            
leal-based check (opsize = 4)
: (orig=0x056559fcb)0x3975d0                  cmp %esi, 0xd0(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559fce)0x0f4675d0                cmovbe 0xd0(%ebp), %esi         
SAV
leal-based check (opsize = 4)
RST
: (orig=0x056559fd2)0x8975d0                  mov %esi, 0xd0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056559fd5)0x8d3401                  lea (%ecx, %eax), %esi          
: (orig=0x056559fd8)0x8975c8                  mov %esi, 0xc8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056559fdb)0x85d2                    test %edx, %edx                 
: (orig=0x056559fdd)0x7422                    jz +0x22                        
action_jcc
start fun: action_jcc(*addr=0x56559fdd, *transl_addr=0x3eca5c83, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a001)
end fun: -> 0x00000000
allocated trampoline: 0x3ec975e8, target: 0x5655a001, origin: 0x3eca5c85start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559fdf)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97658, target: 0x56559fdf, origin: 0x3eca5c8aend fun: -> close, transl_length=11
end fun: -> 0x3eca5bbe,   next_tu=0x56559fdf (len: 208)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559fdf)
end fun: -> 0x00000000
ff = 32
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559fdf)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5c95start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559fdf, *transl_address=0x3eca5c95)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x056559fdf)0x8b93c4050000            mov 0x000005c4(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x056559fe5)0x8b75c8                  mov 0xc8(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x056559fe8)0x3b7204                  cmp 0x04(%edx), %esi            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559feb)0x0f85a2030000            jnz +0x000003a2                 
action_jcc
start fun: action_jcc(*addr=0x56559feb, *transl_addr=0x3eca5cd7, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a393)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97620, target: 0x5655a393, origin: 0x3eca5cd9start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ff1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97690, target: 0x56559ff1, origin: 0x3eca5cdeend fun: -> close, transl_length=11
end fun: -> 0x3eca5c95,   next_tu=0x56559ff1 (len: 77)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ff1)
end fun: -> 0x00000000
ff = 33
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ff1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5ce9start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559ff1, *transl_address=0x3eca5ce9)
end fun:  


 opt flags pass 
... compares reg 6 with reg 0

BEGIN FLAG ANALYSISCAddddddadadEND FLAG ANALYSIS: (orig=0x056559ff1)0x8b9370050000            mov 0x00000570(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x056559ff7)0x01c1                    add %eax, %ecx                  
: (orig=0x056559ff9)0x8b7204                  mov 0x04(%edx), %esi            
leal-based check (opsize = 4)
: (orig=0x056559ffc)0x01f1                    add %esi, %ecx                  
: (orig=0x056559ffe)0x894dc8                  mov %ecx, 0xc8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655a001)0x8b9380050000            mov 0x00000580(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x05655a007)0x8b5204                  mov 0x04(%edx), %edx            
leal-based check (opsize = 4)
: (orig=0x05655a00a)0x8955c4                  mov %edx, 0xc4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655a00d)0x8b55d0                  mov 0xd0(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655a010)0x8d34d0                  lea (%eax, %edx*8), %esi        
: (orig=0x05655a013)0x39f0                    cmp %esi, %eax                  
: (orig=0x05655a015)0x7332                    jnc +0x32                       
action_jcc
start fun: action_jcc(*addr=0x5655a015, *transl_addr=0x3eca5d8b, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a049)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97658, target: 0x5655a049, origin: 0x3eca5d8dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a017)
end fun: -> 0x00000000
allocated trampoline: 0x3ec976c8, target: 0x5655a017, origin: 0x3eca5d92end fun: -> close, transl_length=11
end fun: -> 0x3eca5ce9,   next_tu=0x5655a017 (len: 173)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a017)
end fun: -> 0x00000000
ff = 34
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a017)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5d9dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a017, *transl_address=0x3eca5d9d)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCD1.END FLAG ANALYSISopcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05655a017)0x80780408                cmp $0x08, 0x04(%eax)           
leal-based check (opsize = 1)
: (orig=0x05655a01b)0x8b10                    mov (%eax), %edx                
SAV
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x05655a01d)0x0f8525020000            jnz +0x00000225                 
action_jcc
start fun: action_jcc(*addr=0x5655a01d, *transl_addr=0x3eca5df0, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a248)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97690, target: 0x5655a248, origin: 0x3eca5df2start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a023)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97700, target: 0x5655a023, origin: 0x3eca5df7end fun: -> close, transl_length=11
end fun: -> 0x3eca5d9d,   next_tu=0x5655a023 (len: 94)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a023)
end fun: -> 0x00000000
ff = 35
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a023)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5e02start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a023, *transl_address=0x3eca5e02)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... compares reg 0 with reg 6

BEGIN FLAG ANALYSISCAaaddaEND FLAG ANALYSIS: (orig=0x05655a023)0x01fa                    add %edi, %edx                  
: (orig=0x05655a025)0xb908000000              mov $0x00000008, %ecx           
: (orig=0x05655a02a)0xeb14                    jmp +0x14                       
original_addr=05655a02a / addr=05655a02a
start fun: action_jmp(*addr=0x5655a02a, *transl_addr=0x3eca5e09, length=2)
action_jmp
original jmp_target: 0x5655a040start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a040)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655a040)0x83c008                  add $0x08, %eax                 
: (orig=0x05655a043)0x013a                    add %edi, (%edx)                
leal-based check (opsize = 4)
: (orig=0x05655a045)0x39c6                    cmp %eax, %esi                  
: (orig=0x05655a047)0x77e7                    ja +0xe7                        
action_jcc
start fun: action_jcc(*addr=0x5655a047, *transl_addr=0x3eca5e20, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a030)
end fun: -> 0x00000000
allocated trampoline: 0x3ec976c8, target: 0x5655a030, origin: 0x3eca5e22start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a049)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97738, target: 0x5655a049, origin: 0x3eca5e27end fun: -> close, transl_length=11
end fun: -> 0x3eca5e02,   next_tu=0x5655a049 (len: 41)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a030)
end fun: -> 0x00000000
ff = 36
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a030)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5e32start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a030, *transl_address=0x3eca5e32)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05655a030)0x8b5408f8                mov 0xf8(%eax, %ecx), %edx      
leal-based check (opsize = 4)
: (orig=0x05655a034)0x01fa                    add %edi, %edx                  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05655a036)0x80780408                cmp $0x08, 0x04(%eax)           
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x05655a03a)0x0f8508020000            jnz +0x00000208                 
action_jcc
start fun: action_jcc(*addr=0x5655a03a, *transl_addr=0x3eca5e5e, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a248)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97700, target: 0x5655a248, origin: 0x3eca5e60start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a040)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97770, target: 0x5655a040, origin: 0x3eca5e65end fun: -> close, transl_length=11
end fun: -> 0x3eca5e32,   next_tu=0x5655a040 (len: 55)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a040)
end fun: -> 0x00000000
ff = 37
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a040)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5e70start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a040, *transl_address=0x3eca5e70)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... compares reg 0 with reg 6

BEGIN FLAG ANALYSISCAaaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655a040)0x83c008                  add $0x08, %eax                 
: (orig=0x05655a043)0x013a                    add %edi, (%edx)                
leal-based check (opsize = 4)
: (orig=0x05655a045)0x39c6                    cmp %eax, %esi                  
: (orig=0x05655a047)0x77e7                    ja +0xe7                        
action_jcc
start fun: action_jcc(*addr=0x5655a047, *transl_addr=0x3eca5e87, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a030)
end fun: -> 0x3eca5e32
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a049)
end fun: -> 0x00000000
allocated trampoline: 0x3ec976c8, target: 0x5655a049, origin: 0x3eca5e8eend fun: -> close, transl_length=11
end fun: -> 0x3eca5e70,   next_tu=0x5655a049 (len: 34)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a049)
end fun: -> 0x00000000
ff = 38
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a049)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5e99start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a049, *transl_address=0x3eca5e99)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655a049)0x8b832c060000            mov 0x0000062c(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05655a04f)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655a051)0x0f8433020000            jz +0x00000233                  
action_jcc
start fun: action_jcc(*addr=0x5655a051, *transl_addr=0x3eca5eb5, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a28a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97770, target: 0x5655a28a, origin: 0x3eca5eb7start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a057)
end fun: -> 0x00000000
allocated trampoline: 0x3ec977a8, target: 0x5655a057, origin: 0x3eca5ebcend fun: -> close, transl_length=11
end fun: -> 0x3eca5e99,   next_tu=0x5655a057 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a057)
end fun: -> 0x00000000
ff = 39
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a057)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5ec7start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a057, *transl_address=0x3eca5ec7)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCD4.4.4.1.END FLAG ANALYSIS: (orig=0x05655a057)0x3975c8                  cmp %esi, 0xc8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655a05a)0x8d0d48050000            lea 00000548, %ecx              
SAV
: (orig=0x05655a060)0x8d932c65ffff            lea 0xffff652c(%ebx), %edx      
: (orig=0x05655a066)0x894dc0                  mov %ecx, 0xc0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655a069)0x8955b4                  mov %edx, 0xb4(%ebp)            
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x05655a06c)0x0f86e4fdffff            jbe +0xfffffde4                 
action_jcc
start fun: action_jcc(*addr=0x5655a06c, *transl_addr=0x3eca5f3e, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e56)
end fun: -> 0x00000000
allocated trampoline: 0x3ec976c8, target: 0x56559e56, origin: 0x3eca5f40start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a072)
end fun: -> 0x00000000
allocated trampoline: 0x3ec977e0, target: 0x5655a072, origin: 0x3eca5f45end fun: -> close, transl_length=11
end fun: -> 0x3eca5ec7,   next_tu=0x5655a072 (len: 130)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a072)
end fun: -> 0x00000000
ff = 40
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a072)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca5f50start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a072, *transl_address=0x3eca5f50)
end fun:  
opcode escape found: 0fopcode table: 0x00244928 -> 0x002168c0 (0x00216988)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 0a with reg 1

BEGIN FLAG ANALYSISCAadadaddaaddaddddEND FLAG ANALYSIS: (orig=0x05655a072)0x897dbc                  mov %edi, 0xbc(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655a075)0x8d7600                  lea 0x00(%esi), %esi            
: (orig=0x05655a078)0x8b4604                  mov 0x04(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655a07b)0x8b4dbc                  mov 0xbc(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655a07e)0x030e                    add (%esi), %ecx                
leal-based check (opsize = 4)
: (orig=0x05655a080)0x89c7                    mov %eax, %edi                  
opcode escape found: 0f: (orig=0x05655a082)0x0fb6d0                  movzx %eax, %edx                
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
: (orig=0x05655a085)0xc1ef08                  shr $0x08, %edi                 
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655a088)0xc1e704                  shl $0x04, %edi                 
: (orig=0x05655a08b)0x894dac                  mov %ecx, 0xac(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655a08e)0x8b4dc0                  mov 0xc0(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655a091)0x037dc4                  add 0xc4(%ebp), %edi            
leal-based check (opsize = 4)
: (orig=0x05655a094)0x8b4704                  mov 0x04(%edi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655a097)0x030419                  add (%ecx, %ebx), %eax          
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655a09a)0x0fb64f0c                movzx 0x0c(%edi), %ecx          
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655a09e)0x83e10f                  and $0x0f, %ecx                 
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655a0a1)0x83f90a                  cmp $0x0a, %ecx                 
opcode escape found: 0f: (orig=0x05655a0a4)0x0f84c8010000            jz +0x000001c8                  
action_jcc
start fun: action_jcc(*addr=0x5655a0a4, *transl_addr=0x3eca602c, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a272)
end fun: -> 0x00000000
allocated trampoline: 0x3ec977a8, target: 0x5655a272, origin: 0x3eca602estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a0aa)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97818, target: 0x5655a0aa, origin: 0x3eca6033end fun: -> close, transl_length=11
end fun: -> 0x3eca5f50,   next_tu=0x5655a0aa (len: 231)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a0aa)
end fun: -> 0x00000000
ff = 41
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a0aa)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca603estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a0aa, *transl_address=0x3eca603e)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 023 with reg 2

BEGIN FLAG ANALYSISAdaaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655a0aa)0x83ea06                  sub $0x06, %edx                 
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655a0ad)0x83fa23                  cmp $0x23, %edx                 
PATCHING CMP IMM REG
: (orig=0x05655a0b0)0x8955d0                  mov %edx, 0xd0(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655a0b3)0x0f87cc000000            ja +0x000000cc                  
RESTORING VIA CMP
action_jcc
start fun: action_jcc(*addr=0x5655a0b3, *transl_addr=0x3eca6064, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a185)
end fun: -> 0x00000000
allocated trampoline: 0x3ec977e0, target: 0x5655a185, origin: 0x3eca6066start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a0b9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97850, target: 0x5655a0b9, origin: 0x3eca606bend fun: -> close, transl_length=11
end fun: -> 0x3eca603e,   next_tu=0x5655a0b9 (len: 49)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a0b9)
end fun: -> 0x00000000
ff = 42
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a0b9)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6076start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a0b9, *transl_address=0x3eca6076)
end fun:  
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 

BEGIN FLAG ANALYSIS4.1.dEND FLAG ANALYSIS: (orig=0x05655a0b9)0x89d9                    mov %ebx, %ecx                  
: (orig=0x05655a0bb)0x2b8c93d040feff          sub 0xfffe40d0(%ebx, %edx*4), %ecx 
leal-based check (opsize = 4)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x05655a0c2)0xffe1                    jmp %ecx                        
SAV
start fun: action_jmp_indirect(*addr=0x5655a0c2, *transl_addr=0x3eca60ab, length=2)
action jmp ind
end fun: -> close, transl_length=8
end fun: -> 0x3eca6076,   next_tu=0x5655a0c4 (len: 61)
ff = 43
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a180)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca60bastart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a180, *transl_address=0x3eca60ba)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAaddEND FLAG ANALYSIS: (orig=0x05655a180)0x8b55ac                  mov 0xac(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655a183)0x8902                    mov %eax, (%edx)                
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655a185)0x83c608                  add $0x08, %esi                 
: (orig=0x05655a188)0x3975c8                  cmp %esi, 0xc8(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655a18b)0x0f87e7feffff            ja +0xfffffee7                  
action_jcc
start fun: action_jcc(*addr=0x5655a18b, *transl_addr=0x3eca60f7, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a078)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97850, target: 0x5655a078, origin: 0x3eca60f9start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a191)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97818, target: 0x5655a191, origin: 0x3eca60feend fun: -> close, transl_length=11
end fun: -> 0x3eca60ba,   next_tu=0x5655a191 (len: 72)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a078)
end fun: -> 0x00000000
ff = 44
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a078)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6109start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a078, *transl_address=0x3eca6109)
end fun:  
opcode escape found: 0fopcode table: 0x00244928 -> 0x002168c0 (0x00216988)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 0a with reg 1

BEGIN FLAG ANALYSISCAadadaddaaddaddEND FLAG ANALYSIS: (orig=0x05655a078)0x8b4604                  mov 0x04(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655a07b)0x8b4dbc                  mov 0xbc(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655a07e)0x030e                    add (%esi), %ecx                
leal-based check (opsize = 4)
: (orig=0x05655a080)0x89c7                    mov %eax, %edi                  
opcode escape found: 0f: (orig=0x05655a082)0x0fb6d0                  movzx %eax, %edx                
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
: (orig=0x05655a085)0xc1ef08                  shr $0x08, %edi                 
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655a088)0xc1e704                  shl $0x04, %edi                 
: (orig=0x05655a08b)0x894dac                  mov %ecx, 0xac(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655a08e)0x8b4dc0                  mov 0xc0(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655a091)0x037dc4                  add 0xc4(%ebp), %edi            
leal-based check (opsize = 4)
: (orig=0x05655a094)0x8b4704                  mov 0x04(%edi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655a097)0x030419                  add (%ecx, %ebx), %eax          
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655a09a)0x0fb64f0c                movzx 0x0c(%edi), %ecx          
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655a09e)0x83e10f                  and $0x0f, %ecx                 
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655a0a1)0x83f90a                  cmp $0x0a, %ecx                 
opcode escape found: 0f: (orig=0x05655a0a4)0x0f84c8010000            jz +0x000001c8                  
action_jcc
start fun: action_jcc(*addr=0x5655a0a4, *transl_addr=0x3eca61cd, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a272)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97888, target: 0x5655a272, origin: 0x3eca61cfstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a0aa)
end fun: -> 0x3eca603e
end fun: -> close, transl_length=11
end fun: -> 0x3eca6109,   next_tu=0x5655a0aa (len: 207)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a191)
end fun: -> 0x00000000
ff = 45
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a191)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca61dfstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a191, *transl_address=0x3eca61df)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x002162a8)


 opt flags pass 

BEGIN FLAG ANALYSISCAaddEND FLAG ANALYSIS: (orig=0x05655a191)0xe9c0fcffff              jmp +0xfffffcc0                 
original_addr=05655a191 / addr=05655a191
start fun: action_jmp(*addr=0x5655a191, *transl_addr=0x3eca61df, length=5)
action_jmp
jump_target = 0fffffcc0 + 05655a191 + 05original jmp_target: 0x56559e56start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e56)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x056559e56)0x8b8330feffff            mov 0xfffffe30(%ebx), %eax      
leal-based check (opsize = 4)
opcode table: 0x00243f00 -> 0x00216280 (0x002162a8)
: (orig=0x056559e5c)0x808bdc06000004          or $0x04, 0x000006dc(%ebx)      
leal-based check (opsize = 1)
: (orig=0x056559e63)0x0b832cfeffff            or 0xfffffe2c(%ebx), %eax       
leal-based check (opsize = 4)
: (orig=0x056559e69)0x755c                    jnz +0x5c                       
action_jcc
start fun: action_jcc(*addr=0x56559e69, *transl_addr=0x3eca622d, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ec7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97850, target: 0x56559ec7, origin: 0x3eca622fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e6b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec978c0, target: 0x56559e6b, origin: 0x3eca6234end fun: -> close, transl_length=11
end fun: -> 0x3eca61df,   next_tu=0x56559e6b (len: 89)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e6b)
end fun: -> 0x00000000
ff = 46
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e6b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca623fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559e6b, *transl_address=0x3eca623f)
end fun:  
opcode escape found: 0fopcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAfa1.ddddddddddEND FLAG ANALYSIS: (orig=0x056559e6b)0xb905000000              mov $0x00000005, %ecx           
: (orig=0x056559e70)0xbeffffffff              mov $0xffffffff, %esi           
: (orig=0x056559e75)0xbfffffffff              mov $0xffffffff, %edi           
: (orig=0x056559e7a)0xc745d0ffffffff          mov $0xffffffff, 0xd0(%ebp)     
leal-based check (opsize = 4)
: (orig=0x056559e81)0xc745d4ffffffff          mov $0xffffffff, 0xd4(%ebp)     
leal-based check (opsize = 4)
: (orig=0x056559e88)0xeb0c                    jmp +0x0c                       
original_addr=056559e88 / addr=056559e88
start fun: action_jmp(*addr=0x56559e88, *transl_addr=0x3eca627e, length=2)
action_jmp
original jmp_target: 0x56559e96start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e96)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode escape found: 0f: (orig=0x056559e96)0x0f31                    rdtsc                           
: (orig=0x056559e98)0x8945c8                  mov %eax, 0xc8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056559e9b)0x8955cc                  mov %edx, 0xcc(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559e9e)0x0f31                    rdtsc                           
: (orig=0x056559ea0)0x2b45c8                  sub 0xc8(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x056559ea3)0x1b55cc                  sbb 0xcc(%ebp), %edx            
SAV
leal-based check (opsize = 4)
RST
: (orig=0x056559ea6)0x3955d4                  cmp %edx, 0xd4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056559ea9)0x7707                    ja +0x07                        
action_jcc
start fun: action_jcc(*addr=0x56559ea9, *transl_addr=0x3eca6313, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eb2)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97818, target: 0x56559eb2, origin: 0x3eca6315start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eab)
end fun: -> 0x00000000
allocated trampoline: 0x3ec978f8, target: 0x56559eab, origin: 0x3eca631aend fun: -> close, transl_length=11
end fun: -> 0x3eca623f,   next_tu=0x56559eab (len: 223)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eb2)
end fun: -> 0x00000000
ff = 47
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eb2)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6325start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559eb2, *transl_address=0x3eca6325)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x056559eb2)0x89c6                    mov %eax, %esi                  
: (orig=0x056559eb4)0x89d7                    mov %edx, %edi                  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056559eb6)0x83e901                  sub $0x01, %ecx                 
: (orig=0x056559eb9)0x75d5                    jnz +0xd5                       
action_jcc
start fun: action_jcc(*addr=0x56559eb9, *transl_addr=0x3eca632c, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e90)
end fun: -> 0x00000000
allocated trampoline: 0x3ec978c0, target: 0x56559e90, origin: 0x3eca632estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ebb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97930, target: 0x56559ebb, origin: 0x3eca6333end fun: -> close, transl_length=11
end fun: -> 0x3eca6325,   next_tu=0x56559ebb (len: 18)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e90)
end fun: -> 0x00000000
ff = 48
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e90)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca633estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559e90, *transl_address=0x3eca633e)
end fun:  
opcode escape found: 0fopcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAfa1.ddddddEND FLAG ANALYSIS: (orig=0x056559e90)0x8975d0                  mov %esi, 0xd0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056559e93)0x897dd4                  mov %edi, 0xd4(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559e96)0x0f31                    rdtsc                           
: (orig=0x056559e98)0x8945c8                  mov %eax, 0xc8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056559e9b)0x8955cc                  mov %edx, 0xcc(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559e9e)0x0f31                    rdtsc                           
: (orig=0x056559ea0)0x2b45c8                  sub 0xc8(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x056559ea3)0x1b55cc                  sbb 0xcc(%ebp), %edx            
SAV
leal-based check (opsize = 4)
RST
: (orig=0x056559ea6)0x3955d4                  cmp %edx, 0xd4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056559ea9)0x7707                    ja +0x07                        
action_jcc
start fun: action_jcc(*addr=0x56559ea9, *transl_addr=0x3eca63fb, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eb2)
end fun: -> 0x3eca6325
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eab)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97818, target: 0x56559eab, origin: 0x3eca6402end fun: -> close, transl_length=11
end fun: -> 0x3eca633e,   next_tu=0x56559eab (len: 200)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eab)
end fun: -> 0x00000000
ff = 49
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eab)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca640dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559eab, *transl_address=0x3eca640d)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCEND FLAG ANALYSIS: (orig=0x056559eab)0x7209                    jc +0x09                        
action_jcc
start fun: action_jcc(*addr=0x56559eab, *transl_addr=0x3eca640d, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eb6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec978c0, target: 0x56559eb6, origin: 0x3eca640fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ead)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97968, target: 0x56559ead, origin: 0x3eca6414end fun: -> close, transl_length=11
end fun: -> 0x3eca640d,   next_tu=0x56559ead (len: 11)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ead)
end fun: -> 0x00000000
ff = 50
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ead)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca641fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559ead, *transl_address=0x3eca641f)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x056559ead)0x3945d0                  cmp %eax, 0xd0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056559eb0)0x7604                    jbe +0x04                       
action_jcc
start fun: action_jcc(*addr=0x56559eb0, *transl_addr=0x3eca6433, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eb6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97818, target: 0x56559eb6, origin: 0x3eca6435start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eb2)
end fun: -> 0x3eca6325
end fun: -> close, transl_length=11
end fun: -> 0x3eca641f,   next_tu=0x56559eb2 (len: 31)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eb6)
end fun: -> 0x00000000
ff = 51
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559eb6)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6445start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559eb6, *transl_address=0x3eca6445)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056559eb6)0x83e901                  sub $0x01, %ecx                 
: (orig=0x056559eb9)0x75d5                    jnz +0xd5                       
action_jcc
start fun: action_jcc(*addr=0x56559eb9, *transl_addr=0x3eca6448, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559e90)
end fun: -> 0x3eca633e
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ebb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97968, target: 0x56559ebb, origin: 0x3eca644fend fun: -> close, transl_length=11
end fun: -> 0x3eca6445,   next_tu=0x56559ebb (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ebb)
end fun: -> 0x00000000
ff = 52
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ebb)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca645astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559ebb, *transl_address=0x3eca645a)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISdddddaddddEND FLAG ANALYSIS: (orig=0x056559ebb)0x89b32cfeffff            mov %esi, 0xfffffe2c(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559ec1)0x89bb30feffff            mov %edi, 0xfffffe30(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559ec7)0x8d8348050000            lea 0x00000548(%ebx), %eax      
: (orig=0x056559ecd)0xe82e5e0000              call +0x00005e2e                
action_call
start fun: action_call(*addr=0x56559ecd, *transl_addr=0x3eca6495, length=5)
original call_target: 0x5655fd00return_address = 056559ed2
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fd00)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655fd00)0x83ec2c                  sub $0x2c, %esp                 
: (orig=0x05655fd03)0x8b904c010000            mov 0x0000014c(%eax), %edx      
leal-based check (opsize = 4)
: (orig=0x05655fd09)0x895c241c                mov %ebx, 0x1c(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fd0d)0xe839e30000              call +0x0000e339                
action_call
start fun: action_call(*addr=0x5655fd0d, *transl_addr=0x3eca64d5, length=5)
original call_target: 0x5656e04breturn_address = 05655fd12
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca64f6, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca645a,   next_tu=0x5656e04f (len: 170)
ff = 53
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fd12)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca650bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655fd12, *transl_address=0x3eca650b)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISAddadaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05655fd12)0x81c3e2620100            add $0x000162e2, %ebx           
: (orig=0x05655fd18)0x89742420                mov %esi, 0x20(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fd1c)0x85d2                    test %edx, %edx                 
PATCHING TST REG REG
: (orig=0x05655fd1e)0x897c2424                mov %edi, 0x24(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fd22)0x896c2428                mov %ebp, 0x28(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fd26)0x745b                    jz +0x5b                        
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655fd26, *transl_addr=0x3eca655e, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fd83)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97930, target: 0x5655fd83, origin: 0x3eca6560start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fd28)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97818, target: 0x5655fd28, origin: 0x3eca6565end fun: -> close, transl_length=11
end fun: -> 0x3eca650b,   next_tu=0x5655fd28 (len: 94)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fd28)
end fun: -> 0x00000000
ff = 54
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fd28)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6570start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655fd28, *transl_address=0x3eca6570)
end fun:  


 opt flags pass 
... tests reg 1 with reg 5

BEGIN FLAG ANALYSISCAddddddEND FLAG ANALYSIS: (orig=0x05655fd28)0x8b5204                  mov 0x04(%edx), %edx            
leal-based check (opsize = 4)
: (orig=0x05655fd2b)0x8b3a                    mov (%edx), %edi                
leal-based check (opsize = 4)
: (orig=0x05655fd2d)0x89b878010000            mov %edi, 0x00000178(%eax)      
leal-based check (opsize = 4)
: (orig=0x05655fd33)0x8b4a08                  mov 0x08(%edx), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655fd36)0x8b7204                  mov 0x04(%edx), %esi            
leal-based check (opsize = 4)
: (orig=0x05655fd39)0x8d69ff                  lea 0xff(%ecx), %ebp            
: (orig=0x05655fd3c)0x85cd                    test %ecx, %ebp                 
: (orig=0x05655fd3e)0x7569                    jnz +0x69                       
action_jcc
start fun: action_jcc(*addr=0x5655fd3e, *transl_addr=0x3eca65de, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fda9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec979a0, target: 0x5655fda9, origin: 0x3eca65e0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fd40)
end fun: -> 0x00000000
allocated trampoline: 0x3ec979d8, target: 0x5655fd40, origin: 0x3eca65e5end fun: -> close, transl_length=11
end fun: -> 0x3eca6570,   next_tu=0x5655fd40 (len: 121)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fd40)
end fun: -> 0x00000000
ff = 55
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fd40)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca65f0start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655fd40, *transl_address=0x3eca65f0)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISdaddddddadadddaddEND FLAG ANALYSIS: (orig=0x05655fd40)0x89a87c010000            mov %ebp, 0x0000017c(%eax)      
leal-based check (opsize = 4)
: (orig=0x05655fd46)0x8b6a0c                  mov 0x0c(%edx), %ebp            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655fd49)0x83c210                  add $0x10, %edx                 
: (orig=0x05655fd4c)0x899084010000            mov %edx, 0x00000184(%eax)      
leal-based check (opsize = 4)
: (orig=0x05655fd52)0x8d148a                  lea (%edx, %ecx*4), %edx        
: (orig=0x05655fd55)0x899088010000            mov %edx, 0x00000188(%eax)      
leal-based check (opsize = 4)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655fd5b)0xc1e602                  shl $0x02, %esi                 
: (orig=0x05655fd5e)0x8d14ba                  lea (%edx, %edi*4), %edx        
: (orig=0x05655fd61)0x29f2                    sub %esi, %edx                  
: (orig=0x05655fd63)0x89a880010000            mov %ebp, 0x00000180(%eax)      
leal-based check (opsize = 4)
: (orig=0x05655fd69)0x89908c010000            mov %edx, 0x0000018c(%eax)      
leal-based check (opsize = 4)
: (orig=0x05655fd6f)0x8b5c241c                mov 0x1c(%esp), %ebx            
leal-based check (opsize = 4)
: (orig=0x05655fd73)0x8b742420                mov 0x20(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05655fd77)0x8b7c2424                mov 0x24(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x05655fd7b)0x8b6c2428                mov 0x28(%esp), %ebp            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655fd7f)0x83c42c                  add $0x2c, %esp                 
: (orig=0x05655fd82)0xc3                      ret                             
start fun: action_ret(*addr=0x5655fd82, *transl_addr=0x3eca66f1, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca65f0,   next_tu=0x5655fd83 (len: 271)
ff = 56
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559ed2)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6706start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559ed2, *transl_address=0x3eca6706)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISddddadddddddddddddddddddddEND FLAG ANALYSIS: (orig=0x056559ed2)0x8d8348050000            lea 0x00000548(%ebx), %eax      
: (orig=0x056559ed8)0x89835c050000            mov %eax, 0x0000055c(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559ede)0x8d830cf0fdff            lea 0xfffdf00c(%ebx), %eax      
: (orig=0x056559ee4)0x8983f4060000            mov %eax, 0x000006f4(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559eea)0x8d8324090000            lea 0x00000924(%ebx), %eax      
: (orig=0x056559ef0)0x8983f8060000            mov %eax, 0x000006f8(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559ef6)0x8d835b80ffff            lea 0xffff805b(%ebx), %eax      
: (orig=0x056559efc)0x8983fc060000            mov %eax, 0x000006fc(%ebx)      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559f02)0x0f31                    rdtsc                           
: (orig=0x056559f04)0x89832c050000            mov %eax, 0x0000052c(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559f0a)0x8d832c10feff            lea 0xfffe102c(%ebx), %eax      
: (orig=0x056559f10)0x89442404                mov %eax, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x056559f14)0x8b45b8                  mov 0xb8(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x056559f17)0x899330050000            mov %edx, 0x00000530(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559f1d)0x89ab1cffffff            mov %ebp, 0xffffff1c(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559f23)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x056559f26)0xe825fc0000              call +0x0000fc25                
action_call
start fun: action_call(*addr=0x56559f26, *transl_addr=0x3eca681f, length=5)
original call_target: 0x56569b50return_address = 056559f2b
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569b50)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x056569b50)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x056569b51)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x056569b52)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x056569b53)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056569b54)0x83ec6c                  sub $0x6c, %esp                 
: (orig=0x056569b57)0x8b842480000000          mov 0x00000080(%esp), %eax      
leal-based check (opsize = 4)
: (orig=0x056569b5e)0xe8e8440000              call +0x000044e8                
action_call
start fun: action_call(*addr=0x56569b5e, *transl_addr=0x3eca6897, length=5)
original call_target: 0x5656e04breturn_address = 056569b63
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca68b8, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca6706,   next_tu=0x5656e04f (len: 448)
ff = 57
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569b63)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca68cdstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569b63, *transl_address=0x3eca68cd)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAdddddaddaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x056569b63)0x81c391c40000            add $0x0000c491, %ebx           
: (orig=0x056569b69)0x8b10                    mov (%eax), %edx                
leal-based check (opsize = 4)
: (orig=0x056569b6b)0x89831cffffff            mov %eax, 0xffffff1c(%ebx)      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056569b71)0x83c004                  add $0x04, %eax                 
: (orig=0x056569b74)0x89937cfeffff            mov %edx, 0xfffffe7c(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056569b7a)0x8d549004                lea 0x04(%eax, %edx*4), %edx    
: (orig=0x056569b7e)0x898378feffff            mov %eax, 0xfffffe78(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056569b84)0x899308090000            mov %edx, 0x00000908(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056569b8a)0x8b32                    mov (%edx), %esi                
leal-based check (opsize = 4)
: (orig=0x056569b8c)0x85f6                    test %esi, %esi                 
: (orig=0x056569b8e)0x7409                    jz +0x09                        
action_jcc
start fun: action_jcc(*addr=0x56569b8e, *transl_addr=0x3eca6969, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569b99)
end fun: -> 0x00000000
allocated trampoline: 0x3ec979d8, target: 0x56569b99, origin: 0x3eca696bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569b90)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97818, target: 0x56569b90, origin: 0x3eca6970end fun: -> close, transl_length=11
end fun: -> 0x3eca68cd,   next_tu=0x56569b90 (len: 167)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569b90)
end fun: -> 0x00000000
ff = 58
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569b90)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca697bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569b90, *transl_address=0x3eca697b)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056569b90)0x83c204                  add $0x04, %edx                 
: (orig=0x056569b93)0x8b0a                    mov (%edx), %ecx                
leal-based check (opsize = 4)
: (orig=0x056569b95)0x85c9                    test %ecx, %ecx                 
: (orig=0x056569b97)0x75f7                    jnz +0xf7                       
action_jcc
start fun: action_jcc(*addr=0x56569b97, *transl_addr=0x3eca6992, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569b90)
end fun: -> 0x3eca697b
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569b99)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97a10, target: 0x56569b99, origin: 0x3eca6999end fun: -> close, transl_length=11
end fun: -> 0x3eca697b,   next_tu=0x56569b99 (len: 34)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569b99)
end fun: -> 0x00000000
ff = 59
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569b99)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca69a4start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569b99, *transl_address=0x3eca69a4)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISAddadddaddEND FLAG ANALYSIS: (orig=0x056569b99)0x8b4a04                  mov 0x04(%edx), %ecx            
leal-based check (opsize = 4)
: (orig=0x056569b9c)0x8d4204                  lea 0x04(%edx), %eax            
: (orig=0x056569b9f)0x31ff                    xor %edi, %edi                  
: (orig=0x056569ba1)0x8db3dc01feff            lea 0xfffe01dc(%ebx), %esi      
: (orig=0x056569ba7)0x898324ffffff            mov %eax, 0xffffff24(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056569bad)0x8974245c                mov %esi, 0x5c(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569bb1)0x85c9                    test %ecx, %ecx                 
PATCHING TST REG REG
: (orig=0x056569bb3)0xc783b4fcffff00000000    mov $0x00000000, 0xfffffcb4(%ebx) 
leal-based check (opsize = 4)
: (orig=0x056569bbd)0xc744242400000000        mov $0x00000000, 0x24(%esp)     
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056569bc5)0x0f849f010000            jz +0x0000019f                  
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x56569bc5, *transl_addr=0x3eca6a38, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569d6a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97818, target: 0x56569d6a, origin: 0x3eca6a3astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569bcb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97a48, target: 0x56569bcb, origin: 0x3eca6a3fend fun: -> close, transl_length=11
end fun: -> 0x3eca69a4,   next_tu=0x56569bcb (len: 159)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569bcb)
end fun: -> 0x00000000
ff = 60
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569bcb)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6a4astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569bcb, *transl_address=0x3eca6a4a)
end fun:  
opcode escape found: 0fprefix found: 066opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 01e with reg 7

BEGIN FLAG ANALYSISCAddaddddddaddddddddddddddEND FLAG ANALYSIS: (orig=0x056569bcb)0x8bbbbcfcffff            mov 0xfffffcbc(%ebx), %edi      
leal-based check (opsize = 4)
: (orig=0x056569bd1)0x8bab20ffffff            mov 0xffffff20(%ebx), %ebp      
leal-based check (opsize = 4)
: (orig=0x056569bd7)0x89742438                mov %esi, 0x38(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569bdb)0x8bb3e8fcffff            mov 0xfffffce8(%ebx), %esi      
leal-based check (opsize = 4)
: (orig=0x056569be1)0xc744243000000000        mov $0x00000000, 0x30(%esp)     
leal-based check (opsize = 4)
: (orig=0x056569be9)0x897c243c                mov %edi, 0x3c(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569bed)0x8bbbecfcffff            mov 0xfffffcec(%ebx), %edi      
leal-based check (opsize = 4)
: (orig=0x056569bf3)0x896c2434                mov %ebp, 0x34(%esp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056569bf7)0x0fb7abe0fcffff          movzx 0xfffffce0(%ebx), %ebp    
leal-based check (opsize = 4)
: (orig=0x056569bfe)0x89742428                mov %esi, 0x28(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569c02)0x8bb338feffff            mov 0xfffffe38(%ebx), %esi      
leal-based check (opsize = 4)
: (orig=0x056569c08)0x897c242c                mov %edi, 0x2c(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569c0c)0x8bbbc8fcffff            mov 0xfffffcc8(%ebx), %edi      
leal-based check (opsize = 4)
prefix found: 066: (orig=0x056569c12)0x66896c2446              mov %ebp, 0x46(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569c17)0x31ed                    xor %ebp, %ebp                  
: (orig=0x056569c19)0x89742448                mov %esi, 0x48(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569c1d)0x8d720c                  lea 0x0c(%edx), %esi            
: (orig=0x056569c20)0x896c241c                mov %ebp, 0x1c(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569c24)0x897c2440                mov %edi, 0x40(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569c28)0x8bbb18ffffff            mov 0xffffff18(%ebx), %edi      
leal-based check (opsize = 4)
: (orig=0x056569c2e)0x897c244c                mov %edi, 0x4c(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569c32)0x31ff                    xor %edi, %edi                  
: (orig=0x056569c34)0x897c2420                mov %edi, 0x20(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569c38)0x8d79fd                  lea 0xfd(%ecx), %edi            
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056569c3b)0x83ff1e                  cmp $0x1e, %edi                 
opcode escape found: 0f: (orig=0x056569c3e)0x0f8794000000            ja +0x00000094                  
action_jcc
start fun: action_jcc(*addr=0x56569c3e, *transl_addr=0x3eca6c37, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569cd8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97a10, target: 0x56569cd8, origin: 0x3eca6c39start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569c44)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97a80, target: 0x56569c44, origin: 0x3eca6c3eend fun: -> close, transl_length=11
end fun: -> 0x3eca6a4a,   next_tu=0x56569c44 (len: 504)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569c44)
end fun: -> 0x00000000
ff = 61
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569c44)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6c49start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569c44, *transl_address=0x3eca6c49)
end fun:  
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 

BEGIN FLAG ANALYSIS4.1.dEND FLAG ANALYSIS: (orig=0x056569c44)0x89dd                    mov %ebx, %ebp                  
: (orig=0x056569c46)0x2bacbb5c3cffff          sub 0xffff3c5c(%ebx, %edi*4), %ebp 
leal-based check (opsize = 4)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x056569c4d)0xffe5                    jmp %ebp                        
SAV
start fun: action_jmp_indirect(*addr=0x56569c4d, *transl_addr=0x3eca6c7e, length=2)
action jmp ind
end fun: -> close, transl_length=8
end fun: -> 0x3eca6c49,   next_tu=0x56569c4f (len: 61)
ff = 62
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569e30)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6c8dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569e30, *transl_address=0x3eca6c8d)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAddadadEND FLAG ANALYSIS: (orig=0x056569e30)0x8b7804                  mov 0x04(%eax), %edi            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056569e33)0x83c008                  add $0x08, %eax                 
: (orig=0x056569e36)0x89c1                    mov %eax, %ecx                  
: (orig=0x056569e38)0x29d1                    sub %edx, %ecx                  
: (orig=0x056569e3a)0x8b4c0ef4                mov 0xf4(%esi, %ecx), %ecx      
leal-based check (opsize = 4)
: (orig=0x056569e3e)0x897c2434                mov %edi, 0x34(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569e42)0x85c9                    test %ecx, %ecx                 
opcode escape found: 0f: (orig=0x056569e44)0x0f85eefdffff            jnz +0xfffffdee                 
action_jcc
start fun: action_jcc(*addr=0x56569e44, *transl_addr=0x3eca6cd6, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569c38)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97a80, target: 0x56569c38, origin: 0x3eca6cd8start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569e4a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97a48, target: 0x56569e4a, origin: 0x3eca6cddend fun: -> close, transl_length=11
end fun: -> 0x3eca6c8d,   next_tu=0x56569e4a (len: 84)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569c38)
end fun: -> 0x00000000
ff = 63
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569c38)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6ce8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569c38, *transl_address=0x3eca6ce8)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 01e with reg 7

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056569c38)0x8d79fd                  lea 0xfd(%ecx), %edi            
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056569c3b)0x83ff1e                  cmp $0x1e, %edi                 
opcode escape found: 0f: (orig=0x056569c3e)0x0f8794000000            ja +0x00000094                  
action_jcc
start fun: action_jcc(*addr=0x56569c3e, *transl_addr=0x3eca6cef, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569cd8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97ab8, target: 0x56569cd8, origin: 0x3eca6cf1start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569c44)
end fun: -> 0x3eca6c49
end fun: -> close, transl_length=11
end fun: -> 0x3eca6ce8,   next_tu=0x56569c44 (len: 18)
ff = 64
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569cd8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6d01start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569cd8, *transl_address=0x3eca6d01)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdadaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056569cd8)0x83c008                  add $0x08, %eax                 
: (orig=0x056569cdb)0x89c1                    mov %eax, %ecx                  
: (orig=0x056569cdd)0x29d1                    sub %edx, %ecx                  
: (orig=0x056569cdf)0x8b4c0ef4                mov 0xf4(%esi, %ecx), %ecx      
leal-based check (opsize = 4)
: (orig=0x056569ce3)0x85c9                    test %ecx, %ecx                 
opcode escape found: 0f: (orig=0x056569ce5)0x0f854dffffff            jnz +0xffffff4d                 
action_jcc
start fun: action_jcc(*addr=0x56569ce5, *transl_addr=0x3eca6d20, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569c38)
end fun: -> 0x3eca6ce8
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569ceb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97a80, target: 0x56569ceb, origin: 0x3eca6d27end fun: -> close, transl_length=11
end fun: -> 0x3eca6d01,   next_tu=0x56569ceb (len: 42)
ff = 65
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569e98)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6d32start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569e98, *transl_address=0x3eca6d32)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAddadadEND FLAG ANALYSIS: (orig=0x056569e98)0x8b6804                  mov 0x04(%eax), %ebp            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056569e9b)0x83c008                  add $0x08, %eax                 
: (orig=0x056569e9e)0x89c1                    mov %eax, %ecx                  
: (orig=0x056569ea0)0x29d1                    sub %edx, %ecx                  
: (orig=0x056569ea2)0x8b4c0ef4                mov 0xf4(%esi, %ecx), %ecx      
leal-based check (opsize = 4)
: (orig=0x056569ea6)0x896c2440                mov %ebp, 0x40(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569eaa)0x85c9                    test %ecx, %ecx                 
opcode escape found: 0f: (orig=0x056569eac)0x0f8586fdffff            jnz +0xfffffd86                 
action_jcc
start fun: action_jcc(*addr=0x56569eac, *transl_addr=0x3eca6d7b, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569c38)
end fun: -> 0x3eca6ce8
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569eb2)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97af0, target: 0x56569eb2, origin: 0x3eca6d82end fun: -> close, transl_length=11
end fun: -> 0x3eca6d32,   next_tu=0x56569eb2 (len: 84)
ff = 66
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569f20)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6d8dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569f20, *transl_address=0x3eca6d8d)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAddadadEND FLAG ANALYSIS: (orig=0x056569f20)0x8b6804                  mov 0x04(%eax), %ebp            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056569f23)0x83c008                  add $0x08, %eax                 
: (orig=0x056569f26)0x89c1                    mov %eax, %ecx                  
: (orig=0x056569f28)0x29d1                    sub %edx, %ecx                  
: (orig=0x056569f2a)0x8b4c0ef4                mov 0xf4(%esi, %ecx), %ecx      
leal-based check (opsize = 4)
: (orig=0x056569f2e)0x896c243c                mov %ebp, 0x3c(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569f32)0x85c9                    test %ecx, %ecx                 
opcode escape found: 0f: (orig=0x056569f34)0x0f85fefcffff            jnz +0xfffffcfe                 
action_jcc
start fun: action_jcc(*addr=0x56569f34, *transl_addr=0x3eca6dd6, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569c38)
end fun: -> 0x3eca6ce8
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569f3a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97b28, target: 0x56569f3a, origin: 0x3eca6dddend fun: -> close, transl_length=11
end fun: -> 0x3eca6d8d,   next_tu=0x56569f3a (len: 84)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569f3a)
end fun: -> 0x00000000
ff = 67
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569f3a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca6de8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569f3a, *transl_address=0x3eca6de8)
end fun:  
opcode escape found: 0fprefix found: 066

 opt flags pass 
... tests reg 5 with reg 5

BEGIN FLAG ANALYSISAdddddaddddddddddddddddddEND FLAG ANALYSIS: (orig=0x056569f3a)0xe9b1fdffff              jmp +0xfffffdb1                 
original_addr=056569f3a / addr=056569f3a
start fun: action_jmp(*addr=0x56569f3a, *transl_addr=0x3eca6de8, length=5)
action_jmp
jump_target = 0fffffdb1 + 056569f3a + 05original jmp_target: 0x56569cf0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569cf0)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x056569cf0)0x8b442438                mov 0x38(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x056569cf4)0x8b542434                mov 0x34(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x056569cf8)0x8b74243c                mov 0x3c(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x056569cfc)0x8b4c2430                mov 0x30(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x056569d00)0x8944245c                mov %eax, 0x5c(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569d04)0x8b442428                mov 0x28(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x056569d08)0x899320ffffff            mov %edx, 0xffffff20(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056569d0e)0x8b54242c                mov 0x2c(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x056569d12)0x8b6c241c                mov 0x1c(%esp), %ebp            
leal-based check (opsize = 4)
: (orig=0x056569d16)0x89b3bcfcffff            mov %esi, 0xfffffcbc(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056569d1c)0x8b742448                mov 0x48(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x056569d20)0x898bb4fcffff            mov %ecx, 0xfffffcb4(%ebx)      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056569d26)0x0fb74c2446              movzx 0x46(%esp), %ecx          
leal-based check (opsize = 4)
: (orig=0x056569d2b)0x8983e8fcffff            mov %eax, 0xfffffce8(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056569d31)0x8b44244c                mov 0x4c(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x056569d35)0x8993ecfcffff            mov %edx, 0xfffffcec(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056569d3b)0x8b542440                mov 0x40(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x056569d3f)0x85ed                    test %ebp, %ebp                 
PATCHING TST REG REG
: (orig=0x056569d41)0x8b7c2420                mov 0x20(%esp), %edi            
leal-based check (opsize = 4)
prefix found: 066: (orig=0x056569d45)0x66898be0fcffff          mov %ecx, 0xfffffce0(%bx)       
leal-based check (opsize = 4)
: (orig=0x056569d4c)0x89b338feffff            mov %esi, 0xfffffe38(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056569d52)0x8993c8fcffff            mov %edx, 0xfffffcc8(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056569d58)0x898318ffffff            mov %eax, 0xffffff18(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056569d5e)0x740a                    jz +0x0a                        
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x56569d5e, *transl_addr=0x3eca6ffd, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569d6a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97b60, target: 0x56569d6a, origin: 0x3eca6fffstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569d60)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97b98, target: 0x56569d60, origin: 0x3eca7004end fun: -> close, transl_length=11
end fun: -> 0x3eca6de8,   next_tu=0x56569d60 (len: 544)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569d6a)
end fun: -> 0x00000000
ff = 68
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569d6a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca700fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569d6a, *transl_address=0x3eca700f)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISddddddaddEND FLAG ANALYSIS: (orig=0x056569d6a)0xc7042400000000          mov $0x00000000, (%esp)         
leal-based check (opsize = 4)
: (orig=0x056569d71)0xe8aa160000              call +0x000016aa                
action_call
start fun: action_call(*addr=0x56569d71, *transl_addr=0x3eca7027, length=5)
original call_target: 0x5656b420return_address = 056569d76
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b420)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05656b420)0x83ec08                  sub $0x08, %esp                 
: (orig=0x05656b423)0x8b54240c                mov 0x0c(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656b427)0x891c24                  mov %ebx, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05656b42a)0x89742404                mov %esi, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656b42e)0xe8182c0000              call +0x00002c18                
action_call
start fun: action_call(*addr=0x5656b42e, *transl_addr=0x3eca7077, length=5)
original call_target: 0x5656e04breturn_address = 05656b433
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca7098, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca700f,   next_tu=0x5656e04f (len: 151)
ff = 69
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b433)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca70adstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656b433, *transl_address=0x3eca70ad)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 

BEGIN FLAG ANALYSISBDDDAEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656b433)0x81c3c1ab0000            add $0x0000abc1, %ebx           
: (orig=0x05656b439)0x89d1                    mov %edx, %ecx                  
: (orig=0x05656b43b)0x87cb                    xchg %ecx, %ebx                 
: (orig=0x05656b43d)0xb82d000000              mov $0x0000002d, %eax           
: (orig=0x05656b442)0xcd80                    int $0x80                       
closing TU upon request, invoking translation function on 0x5656b444allocated trampoline: 0x3ec97b60, target: 0x5656b444, origin: 0x3eca70edend fun: -> 0x3eca70ad,   next_tu=0x5656b444 (len: 56)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b444)
end fun: -> 0x00000000
ff = 70
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b444)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca70f1start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656b444, *transl_address=0x3eca70f1)
end fun:  


 opt flags pass 
... compares reg 6 with reg 2

BEGIN FLAG ANALYSISCAadddEND FLAG ANALYSIS: (orig=0x05656b444)0x87cb                    xchg %ecx, %ebx                 
: (orig=0x05656b446)0x89c6                    mov %eax, %esi                  
: (orig=0x05656b448)0x8983f4080000            mov %eax, 0x000008f4(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05656b44e)0x31c0                    xor %eax, %eax                  
: (orig=0x05656b450)0x39f2                    cmp %esi, %edx                  
: (orig=0x05656b452)0x770c                    ja +0x0c                        
action_jcc
start fun: action_jcc(*addr=0x5656b452, *transl_addr=0x3eca7113, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b460)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97b28, target: 0x5656b460, origin: 0x3eca7115start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b454)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97bd0, target: 0x5656b454, origin: 0x3eca711aend fun: -> close, transl_length=11
end fun: -> 0x3eca70f1,   next_tu=0x5656b454 (len: 45)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b454)
end fun: -> 0x00000000
ff = 71
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b454)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7125start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656b454, *transl_address=0x3eca7125)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISdaddEND FLAG ANALYSIS: (orig=0x05656b454)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656b457)0x8b742404                mov 0x04(%esp), %esi            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656b45b)0x83c408                  add $0x08, %esp                 
: (orig=0x05656b45e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656b45e, *transl_addr=0x3eca7152, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca7125,   next_tu=0x5656b45f (len: 59)
ff = 72
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569d76)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7167start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569d76, *transl_address=0x3eca7167)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056569d76)0x8b83b4fcffff            mov 0xfffffcb4(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056569d7c)0x85c0                    test %eax, %eax                 
: (orig=0x056569d7e)0x7413                    jz +0x13                        
action_jcc
start fun: action_jcc(*addr=0x56569d7e, *transl_addr=0x3eca7183, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569d93)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97bd0, target: 0x56569d93, origin: 0x3eca7185start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569d80)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97b60, target: 0x56569d80, origin: 0x3eca718aend fun: -> close, transl_length=11
end fun: -> 0x3eca7167,   next_tu=0x56569d80 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569d93)
end fun: -> 0x00000000
ff = 73
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569d93)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7195start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569d93, *transl_address=0x3eca7195)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISddddaddEND FLAG ANALYSIS: (orig=0x056569d93)0xc7042400000000          mov $0x00000000, (%esp)         
leal-based check (opsize = 4)
: (orig=0x056569d9a)0xe8e1160000              call +0x000016e1                
action_call
start fun: action_call(*addr=0x56569d9a, *transl_addr=0x3eca71ad, length=5)
original call_target: 0x5656b480return_address = 056569d9f
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b480)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05656b480)0x83ec1c                  sub $0x1c, %esp                 
: (orig=0x05656b483)0x895c2410                mov %ebx, 0x10(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656b487)0xe8bf2b0000              call +0x00002bbf                
action_call
start fun: action_call(*addr=0x5656b487, *transl_addr=0x3eca71d3, length=5)
original call_target: 0x5656e04breturn_address = 05656b48c
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca71f4, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca7195,   next_tu=0x5656e04f (len: 109)
ff = 74
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b48c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7209start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656b48c, *transl_address=0x3eca7209)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAddddaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656b48c)0x81c368ab0000            add $0x0000ab68, %ebx           
: (orig=0x05656b492)0x89742414                mov %esi, 0x14(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656b496)0x897c2418                mov %edi, 0x18(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656b49a)0x8b7c2420                mov 0x20(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x05656b49e)0x8bb3f4080000            mov 0x000008f4(%ebx), %esi      
leal-based check (opsize = 4)
: (orig=0x05656b4a4)0x85f6                    test %esi, %esi                 
: (orig=0x05656b4a6)0x7440                    jz +0x40                        
action_jcc
start fun: action_jcc(*addr=0x5656b4a6, *transl_addr=0x3eca726d, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4e8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97bd0, target: 0x5656b4e8, origin: 0x3eca726fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4a8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97c08, target: 0x5656b4a8, origin: 0x3eca7274end fun: -> close, transl_length=11
end fun: -> 0x3eca7209,   next_tu=0x5656b4a8 (len: 111)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4a8)
end fun: -> 0x00000000
ff = 75
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4a8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca727fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656b4a8, *transl_address=0x3eca727f)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656b4a8)0x8b83e4080000            mov 0x000008e4(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05656b4ae)0x85c0                    test %eax, %eax                 
: (orig=0x05656b4b0)0x7536                    jnz +0x36                       
action_jcc
start fun: action_jcc(*addr=0x5656b4b0, *transl_addr=0x3eca729b, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4e8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97c40, target: 0x5656b4e8, origin: 0x3eca729dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4b2)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97c78, target: 0x5656b4b2, origin: 0x3eca72a2end fun: -> close, transl_length=11
end fun: -> 0x3eca727f,   next_tu=0x5656b4b2 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4b2)
end fun: -> 0x00000000
ff = 76
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4b2)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca72adstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656b4b2, *transl_address=0x3eca72ad)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 0 with reg 7

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05656b4b2)0x83ff00                  cmp $0x00, %edi                 
: (orig=0x05656b4b5)0x741d                    jz +0x1d                        
action_jcc
start fun: action_jcc(*addr=0x5656b4b5, *transl_addr=0x3eca72b0, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4d4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97c08, target: 0x5656b4d4, origin: 0x3eca72b2start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4b7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97cb0, target: 0x5656b4b7, origin: 0x3eca72b7end fun: -> close, transl_length=11
end fun: -> 0x3eca72ad,   next_tu=0x5656b4b7 (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4d4)
end fun: -> 0x00000000
ff = 77
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b4d4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca72c2start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656b4d4, *transl_address=0x3eca72c2)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISdaddddEND FLAG ANALYSIS: (orig=0x05656b4d4)0x89f0                    mov %esi, %eax                  
: (orig=0x05656b4d6)0x8b5c2410                mov 0x10(%esp), %ebx            
leal-based check (opsize = 4)
: (orig=0x05656b4da)0x8b742414                mov 0x14(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656b4de)0x8b7c2418                mov 0x18(%esp), %edi            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656b4e2)0x83c41c                  add $0x1c, %esp                 
: (orig=0x05656b4e5)0xc3                      ret                             
start fun: action_ret(*addr=0x5656b4e5, *transl_addr=0x3eca7309, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca72c2,   next_tu=0x5656b4e6 (len: 85)
ff = 78
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569d9f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca731estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569d9f, *transl_address=0x3eca731e)
end fun:  
opcode escape found: 0f

 opt flags pass 
... compares reg 2 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056569d9f)0x8d9324090000            lea 0x00000924(%ebx), %edx      
: (orig=0x056569da5)0x39d0                    cmp %edx, %eax                  
opcode escape found: 0f: (orig=0x056569da7)0x0f84c6010000            jz +0x000001c6                  
action_jcc
start fun: action_jcc(*addr=0x56569da7, *transl_addr=0x3eca7327, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569f73)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97c08, target: 0x56569f73, origin: 0x3eca7329start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569dad)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97c78, target: 0x56569dad, origin: 0x3eca732eend fun: -> close, transl_length=11
end fun: -> 0x3eca731e,   next_tu=0x56569dad (len: 20)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569dad)
end fun: -> 0x00000000
ff = 79
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569dad)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7339start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569dad, *transl_address=0x3eca7339)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056569dad)0x8b8320ffffff            mov 0xffffff20(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056569db3)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056569db5)0x0f85d2010000            jnz +0x000001d2                 
action_jcc
start fun: action_jcc(*addr=0x56569db5, *transl_addr=0x3eca7355, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569f8d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97ce8, target: 0x56569f8d, origin: 0x3eca7357start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569dbb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97d20, target: 0x56569dbb, origin: 0x3eca735cend fun: -> close, transl_length=11
end fun: -> 0x3eca7339,   next_tu=0x56569dbb (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569dbb)
end fun: -> 0x00000000
ff = 80
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56569dbb)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7367start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56569dbb, *transl_address=0x3eca7367)
end fun:  
opcode table: 0x002452d8 -> 0x002172c0 (0x00217310)


 opt flags pass 

BEGIN FLAG ANALYSISddddddddEND FLAG ANALYSIS: (orig=0x056569dbb)0x8b8324ffffff            mov 0xffffff24(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056569dc1)0x8b542424                mov 0x24(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x056569dc5)0x897c2404                mov %edi, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569dc9)0x8944240c                mov %eax, 0x0c(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569dcd)0x8d44245c                lea 0x5c(%esp), %eax            
: (orig=0x056569dd1)0x89442408                mov %eax, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x056569dd5)0x891424                  mov %edx, (%esp)                
leal-based check (opsize = 4)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217310)
: (orig=0x056569dd8)0xff942484000000          call 0x00000084(%esp)           
start fun: action_jmp_indirect(*addr=0x56569dd8, *transl_addr=0x3eca73f2, length=7)
end fun: -> close, transl_length=26
end fun: -> 0x3eca7367,   next_tu=0x56569ddf (len: 165)
ff = 81
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557020)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7413start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557020, *transl_address=0x3eca7413)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISddddddddEND FLAG ANALYSIS: (orig=0x056557020)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x056557021)0x89e5                    mov %esp, %ebp                  
: (orig=0x056557023)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x056557024)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x056557025)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x056557026)0xe820700100              call +0x00017020                
action_call
start fun: action_call(*addr=0x56557026, *transl_addr=0x3eca7461, length=5)
original call_target: 0x5656e04breturn_address = 05655702b
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca7482, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca7413,   next_tu=0x5656e04f (len: 125)
ff = 82
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655702b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7497start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655702b, *transl_address=0x3eca7497)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)


 opt flags pass 

BEGIN FLAG ANALYSISddddddddddddddddddddaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05655702b)0x81c3c9ef0100            add $0x0001efc9, %ebx           
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
: (orig=0x056557031)0x81ec0c010000            sub $0x0000010c, %esp           
: (orig=0x056557037)0x8d832c02feff            lea 0xfffe022c(%ebx), %eax      
: (orig=0x05655703d)0x898344050000            mov %eax, 0x00000544(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056557043)0x8d832ca3feff            lea 0xfffea32c(%ebx), %eax      
: (orig=0x056557049)0x898354080000            mov %eax, 0x00000854(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05655704f)0x8d834c02feff            lea 0xfffe024c(%ebx), %eax      
: (orig=0x056557055)0x898320080000            mov %eax, 0x00000820(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05655705b)0x8d835c02feff            lea 0xfffe025c(%ebx), %eax      
: (orig=0x056557061)0x898324080000            mov %eax, 0x00000824(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056557067)0x8d838c16ffff            lea 0xffff168c(%ebx), %eax      
: (orig=0x05655706d)0x898328080000            mov %eax, 0x00000828(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056557073)0x8d45d4                  lea 0xd4(%ebp), %eax            
: (orig=0x056557076)0xe8a5f6ffff              call +0xfffff6a5                
action_call
start fun: action_call(*addr=0x56557076, *transl_addr=0x3eca754c, length=5)
original call_target: 0x56556720return_address = 05655707b
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556720)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x056556720)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x056556721)0x89e5                    mov %esp, %ebp                  
: (orig=0x056556723)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x056556724)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x056556725)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x056556726)0xe820790100              call +0x00017920                
action_call
start fun: action_call(*addr=0x56556726, *transl_addr=0x3eca75a7, length=5)
original call_target: 0x5656e04breturn_address = 05655672b
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca75c8, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca7497,   next_tu=0x5656e04f (len: 319)
ff = 83
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655672b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca75ddstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655672b, *transl_address=0x3eca75dd)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdadddddddadaaddaddddaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05655672b)0x81c3c9f80100            add $0x0001f8c9, %ebx           
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056556731)0x83ec5c                  sub $0x5c, %esp                 
: (orig=0x056556734)0x8945d4                  mov %eax, 0xd4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056556737)0x8b8b20ffffff            mov 0xffffff20(%ebx), %ecx      
leal-based check (opsize = 4)
: (orig=0x05655673d)0x8d936c80ffff            lea 0xffff806c(%ebx), %edx      
: (orig=0x056556743)0x8b8308090000            mov 0x00000908(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056556749)0x85c9                    test %ecx, %ecx                 
PATCHING TST REG REG
: (orig=0x05655674b)0x8945e0                  mov %eax, 0xe0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655674e)0x8d837580ffff            lea 0xffff8075(%ebx), %eax      
opcode escape found: 0f: (orig=0x056556754)0x0f44c2                  cmovz %edx, %eax                
RESTORING VIA TST
: (orig=0x056556757)0x31f6                    xor %esi, %esi                  
: (orig=0x056556759)0x8d933c8affff            lea 0xffff8a3c(%ebx), %edx      
: (orig=0x05655675f)0x31ff                    xor %edi, %edi                  
: (orig=0x056556761)0x89831cfeffff            mov %eax, 0xfffffe1c(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056556767)0x8955cc                  mov %edx, 0xcc(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655676a)0x8db600000000            lea 0x00000000(%esi), %esi      
: (orig=0x056556770)0x8d45e0                  lea 0xe0(%ebp), %eax            
: (orig=0x056556773)0xe8d8430100              call +0x000143d8                
action_call
start fun: action_call(*addr=0x56556773, *transl_addr=0x3eca76a2, length=5)
original call_target: 0x5656ab50return_address = 056556778
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab50)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656ab50)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05656ab51)0x8b08                    mov (%eax), %ecx                
leal-based check (opsize = 4)
: (orig=0x05656ab53)0x31f6                    xor %esi, %esi                  
: (orig=0x05656ab55)0x8b11                    mov (%ecx), %edx                
leal-based check (opsize = 4)
: (orig=0x05656ab57)0x85d2                    test %edx, %edx                 
: (orig=0x05656ab59)0x7415                    jz +0x15                        
action_jcc
start fun: action_jcc(*addr=0x5656ab59, *transl_addr=0x3eca76ea, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab70)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97d20, target: 0x5656ab70, origin: 0x3eca76ecstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab5b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97c78, target: 0x5656ab5b, origin: 0x3eca76f1end fun: -> close, transl_length=11
end fun: -> 0x3eca75dd,   next_tu=0x5656ab5b (len: 280)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab5b)
end fun: -> 0x00000000
ff = 84
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab5b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca76fcstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ab5b, *transl_address=0x3eca76fc)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05656ab5b)0x90                      nop                             
: (orig=0x05656ab5c)0x8d742600                lea 0x00(%esi), %esi            
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656ab60)0x803a4c                  cmp $0x4c, (%edx)               
leal-based check (opsize = 1)
: (orig=0x05656ab63)0x740f                    jz +0x0f                        
action_jcc
start fun: action_jcc(*addr=0x5656ab63, *transl_addr=0x3eca7714, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab74)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97d58, target: 0x5656ab74, origin: 0x3eca7716start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab65)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97d90, target: 0x5656ab65, origin: 0x3eca771bend fun: -> close, transl_length=11
end fun: -> 0x3eca76fc,   next_tu=0x5656ab65 (len: 35)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab65)
end fun: -> 0x00000000
ff = 85
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab65)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7726start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ab65, *transl_address=0x3eca7726)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656ab65)0x83c104                  add $0x04, %ecx                 
: (orig=0x05656ab68)0x8b11                    mov (%ecx), %edx                
leal-based check (opsize = 4)
: (orig=0x05656ab6a)0x85d2                    test %edx, %edx                 
: (orig=0x05656ab6c)0x75f2                    jnz +0xf2                       
action_jcc
start fun: action_jcc(*addr=0x5656ab6c, *transl_addr=0x3eca773d, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab60)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97c78, target: 0x5656ab60, origin: 0x3eca773fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab6e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97dc8, target: 0x5656ab6e, origin: 0x3eca7744end fun: -> close, transl_length=11
end fun: -> 0x3eca7726,   next_tu=0x5656ab6e (len: 34)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab60)
end fun: -> 0x00000000
ff = 86
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab60)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca774fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ab60, *transl_address=0x3eca774f)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656ab60)0x803a4c                  cmp $0x4c, (%edx)               
leal-based check (opsize = 1)
: (orig=0x05656ab63)0x740f                    jz +0x0f                        
action_jcc
start fun: action_jcc(*addr=0x5656ab63, *transl_addr=0x3eca7761, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab74)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97d90, target: 0x5656ab74, origin: 0x3eca7763start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab65)
end fun: -> 0x3eca7726
end fun: -> close, transl_length=11
end fun: -> 0x3eca774f,   next_tu=0x5656ab65 (len: 29)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab74)
end fun: -> 0x00000000
ff = 87
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab74)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7773start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ab74, *transl_address=0x3eca7773)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656ab74)0x807a0144                cmp $0x44, 0x01(%edx)           
leal-based check (opsize = 1)
: (orig=0x05656ab78)0x75eb                    jnz +0xeb                       
action_jcc
start fun: action_jcc(*addr=0x5656ab78, *transl_addr=0x3eca7787, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab65)
end fun: -> 0x3eca7726
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab7a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97c78, target: 0x5656ab7a, origin: 0x3eca778eend fun: -> close, transl_length=11
end fun: -> 0x3eca7773,   next_tu=0x5656ab7a (len: 31)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab6e)
end fun: -> 0x00000000
ff = 88
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ab6e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7799start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ab6e, *transl_address=0x3eca7799)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddaEND FLAG ANALYSIS: (orig=0x05656ab6e)0x31f6                    xor %esi, %esi                  
: (orig=0x05656ab70)0x89f0                    mov %esi, %eax                  
: (orig=0x05656ab72)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656ab73)0xc3                      ret                             
start fun: action_ret(*addr=0x5656ab73, *transl_addr=0x3eca77b0, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca7799,   next_tu=0x5656ab74 (len: 37)
ff = 89
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556778)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca77c5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56556778, *transl_address=0x3eca77c5)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCDAEND FLAG ANALYSIS: (orig=0x056556778)0x85c0                    test %eax, %eax                 
: (orig=0x05655677a)0x89c1                    mov %eax, %ecx                  
opcode escape found: 0f: (orig=0x05655677c)0x0f8482000000            jz +0x00000082                  
action_jcc
start fun: action_jcc(*addr=0x5655677c, *transl_addr=0x3eca77c9, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556804)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97dc8, target: 0x56556804, origin: 0x3eca77cbstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556782)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97d90, target: 0x56556782, origin: 0x3eca77d0end fun: -> close, transl_length=11
end fun: -> 0x3eca77c5,   next_tu=0x56556782 (len: 15)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556804)
end fun: -> 0x00000000
ff = 90
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556804)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca77dbstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56556804, *transl_address=0x3eca77db)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdddEND FLAG ANALYSIS: (orig=0x056556804)0x8b45d4                  mov 0xd4(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x056556807)0x8938                    mov %edi, (%eax)                
leal-based check (opsize = 4)
: (orig=0x056556809)0x8b8320ffffff            mov 0xffffff20(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05655680f)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056556811)0x0f85b1060000            jnz +0x000006b1                 
action_jcc
start fun: action_jcc(*addr=0x56556811, *transl_addr=0x3eca781d, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556ec8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97e00, target: 0x56556ec8, origin: 0x3eca781fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556817)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97e38, target: 0x56556817, origin: 0x3eca7824end fun: -> close, transl_length=11
end fun: -> 0x3eca77db,   next_tu=0x56556817 (len: 77)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556817)
end fun: -> 0x00000000
ff = 91
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556817)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca782fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56556817, *transl_address=0x3eca782f)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x056556817)0x85f6                    test %esi, %esi                 
opcode escape found: 0f: (orig=0x056556819)0x0f856a040000            jnz +0x0000046a                 
action_jcc
start fun: action_jcc(*addr=0x56556819, *transl_addr=0x3eca7831, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556c89)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97dc8, target: 0x56556c89, origin: 0x3eca7833start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655681f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97e70, target: 0x5655681f, origin: 0x3eca7838end fun: -> close, transl_length=11
end fun: -> 0x3eca782f,   next_tu=0x5655681f (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655681f)
end fun: -> 0x00000000
ff = 92
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655681f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7843start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655681f, *transl_address=0x3eca7843)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISddddddEND FLAG ANALYSIS: (orig=0x05655681f)0x8d65f4                  lea 0xf4(%ebp), %esp            
: (orig=0x056556822)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x056556823)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x056556824)0x5f                      pop %edi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x056556825)0x5d                      pop %ebp                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x056556826)0xc3                      ret                             
start fun: action_ret(*addr=0x56556826, *transl_addr=0x3eca7893, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca7843,   next_tu=0x56556827 (len: 94)
ff = 93
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655707b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca78a8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655707b, *transl_address=0x3eca78a8)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05655707b)0x8b5510                  mov 0x10(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655707e)0x8d83dc01feff            lea 0xfffe01dc(%ebx), %eax      
: (orig=0x056557084)0x3902                    cmp %eax, (%edx)                
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056557086)0x0f85c7010000            jnz +0x000001c7                 
action_jcc
start fun: action_jcc(*addr=0x56557086, *transl_addr=0x3eca78d5, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557253)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97e70, target: 0x56557253, origin: 0x3eca78d7start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655708c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97e38, target: 0x5655708c, origin: 0x3eca78dcend fun: -> close, transl_length=11
end fun: -> 0x3eca78a8,   next_tu=0x5655708c (len: 56)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655708c)
end fun: -> 0x00000000
ff = 94
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655708c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca78e7start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655708c, *transl_address=0x3eca78e7)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 01 with reg 0

BEGIN FLAG ANALYSISCAddddddddddddddEND FLAG ANALYSIS: (orig=0x05655708c)0x8b8378feffff            mov 0xfffffe78(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056557092)0x8dbba08affff            lea 0xffff8aa0(%ebx), %edi      
: (orig=0x056557098)0x89bd64ffffff            mov %edi, 0xffffff64(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655709e)0x8dbba78affff            lea 0xffff8aa7(%ebx), %edi      
: (orig=0x0565570a4)0x89bd68ffffff            mov %edi, 0xffffff68(%ebp)      
leal-based check (opsize = 4)
: (orig=0x0565570aa)0x8dbbb08affff            lea 0xffff8ab0(%ebx), %edi      
: (orig=0x0565570b0)0x89bd58ffffff            mov %edi, 0xffffff58(%ebp)      
leal-based check (opsize = 4)
: (orig=0x0565570b6)0x8dbbbf8affff            lea 0xffff8abf(%ebx), %edi      
: (orig=0x0565570bc)0x8b00                    mov (%eax), %eax                
leal-based check (opsize = 4)
: (orig=0x0565570be)0x89bd50ffffff            mov %edi, 0xffffff50(%ebp)      
leal-based check (opsize = 4)
: (orig=0x0565570c4)0x8dbbcf8affff            lea 0xffff8acf(%ebx), %edi      
: (orig=0x0565570ca)0x89bd4cffffff            mov %edi, 0xffffff4c(%ebp)      
leal-based check (opsize = 4)
: (orig=0x0565570d0)0x89834c050000            mov %eax, 0x0000054c(%ebx)      
leal-based check (opsize = 4)
: (orig=0x0565570d6)0x8b837cfeffff            mov 0xfffffe7c(%ebx), %eax      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x0565570dc)0x83f801                  cmp $0x01, %eax                 
: (orig=0x0565570df)0x7e53                    jle +0x53                       
action_jcc
start fun: action_jcc(*addr=0x565570df, *transl_addr=0x3eca79ef, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557134)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97ea8, target: 0x56557134, origin: 0x3eca79f1start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565570e1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97ee0, target: 0x565570e1, origin: 0x3eca79f6end fun: -> close, transl_length=11
end fun: -> 0x3eca78e7,   next_tu=0x565570e1 (len: 275)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565570e1)
end fun: -> 0x00000000
ff = 95
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565570e1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7a01start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565570e1, *transl_address=0x3eca7a01)
end fun:  
prefix found: 0f3

 opt flags pass 

BEGIN FLAG ANALYSISCB4.4.4.4.4.4.END FLAG ANALYSIS: (orig=0x0565570e1)0x8b9378feffff            mov 0xfffffe78(%ebx), %edx      
SAV
leal-based check (opsize = 4)
: (orig=0x0565570e7)0xb907000000              mov $0x00000007, %ecx           
: (orig=0x0565570ec)0x8bbd64ffffff            mov 0xffffff64(%ebp), %edi      
leal-based check (opsize = 4)
: (orig=0x0565570f2)0x8b7204                  mov 0x04(%edx), %esi            
leal-based check (opsize = 4)
: (orig=0x0565570f5)0x895584                  mov %edx, 0x84(%ebp)            
leal-based check (opsize = 4)
: (orig=0x0565570f8)0x89b578ffffff            mov %esi, 0xffffff78(%ebp)      
leal-based check (opsize = 4)
prefix found: 0f3: (orig=0x0565570fe)0xf3a6                    cmpsb %es:(%edi), 1448440062s:(%esi) 
: (orig=0x056557100)0x755c                    jnz +0x5c                       
action_jcc
start fun: action_jcc(*addr=0x56557100, *transl_addr=0x3eca7a99, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655715e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97e38, target: 0x5655715e, origin: 0x3eca7a9bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557102)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97f18, target: 0x56557102, origin: 0x3eca7aa0end fun: -> close, transl_length=11
end fun: -> 0x3eca7a01,   next_tu=0x56557102 (len: 163)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655715e)
end fun: -> 0x00000000
ff = 96
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655715e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7aabstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655715e, *transl_address=0x3eca7aab)
end fun:  
prefix found: 0f3

 opt flags pass 

BEGIN FLAG ANALYSISCB4.4.4.END FLAG ANALYSIS: (orig=0x05655715e)0x8bb578ffffff            mov 0xffffff78(%ebp), %esi      
SAV
leal-based check (opsize = 4)
: (orig=0x056557164)0xb909000000              mov $0x00000009, %ecx           
: (orig=0x056557169)0x8bbd68ffffff            mov 0xffffff68(%ebp), %edi      
leal-based check (opsize = 4)
prefix found: 0f3: (orig=0x05655716f)0xf3a6                    cmpsb %es:(%edi), 1448440175s:(%esi) 
: (orig=0x056557171)0x7509                    jnz +0x09                       
action_jcc
start fun: action_jcc(*addr=0x56557171, *transl_addr=0x3eca7b01, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655717c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97ee0, target: 0x5655717c, origin: 0x3eca7b03start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557173)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97f50, target: 0x56557173, origin: 0x3eca7b08end fun: -> close, transl_length=11
end fun: -> 0x3eca7aab,   next_tu=0x56557173 (len: 97)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655717c)
end fun: -> 0x00000000
ff = 97
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655717c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7b13start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655717c, *transl_address=0x3eca7b13)
end fun:  
prefix found: 0f3

 opt flags pass 

BEGIN FLAG ANALYSISCB4.4.4.END FLAG ANALYSIS: (orig=0x05655717c)0x8bb578ffffff            mov 0xffffff78(%ebp), %esi      
SAV
leal-based check (opsize = 4)
: (orig=0x056557182)0xb90f000000              mov $0x0000000f, %ecx           
: (orig=0x056557187)0x8bbd58ffffff            mov 0xffffff58(%ebp), %edi      
leal-based check (opsize = 4)
prefix found: 0f3: (orig=0x05655718d)0xf3a6                    cmpsb %es:(%edi), 1448440205s:(%esi) 
: (orig=0x05655718f)0x7531                    jnz +0x31                       
action_jcc
start fun: action_jcc(*addr=0x5655718f, *transl_addr=0x3eca7b69, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565571c2)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97e38, target: 0x565571c2, origin: 0x3eca7b6bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557191)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97f88, target: 0x56557191, origin: 0x3eca7b70end fun: -> close, transl_length=11
end fun: -> 0x3eca7b13,   next_tu=0x56557191 (len: 97)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565571c2)
end fun: -> 0x00000000
ff = 98
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565571c2)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7b7bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565571c2, *transl_address=0x3eca7b7b)
end fun:  
prefix found: 0f3

 opt flags pass 

BEGIN FLAG ANALYSISCB4.4.4.END FLAG ANALYSIS: (orig=0x0565571c2)0x8bb578ffffff            mov 0xffffff78(%ebp), %esi      
SAV
leal-based check (opsize = 4)
: (orig=0x0565571c8)0xb910000000              mov $0x00000010, %ecx           
: (orig=0x0565571cd)0x8bbd50ffffff            mov 0xffffff50(%ebp), %edi      
leal-based check (opsize = 4)
prefix found: 0f3: (orig=0x0565571d3)0xf3a6                    cmpsb %es:(%edi), 1448440275s:(%esi) 
: (orig=0x0565571d5)0x752d                    jnz +0x2d                       
action_jcc
start fun: action_jcc(*addr=0x565571d5, *transl_addr=0x3eca7bd1, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557204)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97ee0, target: 0x56557204, origin: 0x3eca7bd3start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565571d7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97fc0, target: 0x565571d7, origin: 0x3eca7bd8end fun: -> close, transl_length=11
end fun: -> 0x3eca7b7b,   next_tu=0x565571d7 (len: 97)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557204)
end fun: -> 0x00000000
ff = 99
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557204)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7be3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557204, *transl_address=0x3eca7be3)
end fun:  
prefix found: 0f3opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCB4.4.4.END FLAG ANALYSIS: (orig=0x056557204)0x8bb578ffffff            mov 0xffffff78(%ebp), %esi      
SAV
leal-based check (opsize = 4)
: (orig=0x05655720a)0xb908000000              mov $0x00000008, %ecx           
: (orig=0x05655720f)0x8bbd4cffffff            mov 0xffffff4c(%ebp), %edi      
leal-based check (opsize = 4)
prefix found: 0f3: (orig=0x056557215)0xf3a6                    cmpsb %es:(%edi), 1448440341s:(%esi) 
opcode escape found: 0f: (orig=0x056557217)0x0f85a81e0000            jnz +0x00001ea8                 
action_jcc
start fun: action_jcc(*addr=0x56557217, *transl_addr=0x3eca7c39, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565590c5)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97e38, target: 0x565590c5, origin: 0x3eca7c3bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655721d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97ff8, target: 0x5655721d, origin: 0x3eca7c40end fun: -> close, transl_length=11
end fun: -> 0x3eca7be3,   next_tu=0x5655721d (len: 97)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565590c5)
end fun: -> 0x00000000
ff = 100
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565590c5)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7c4bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565590c5, *transl_address=0x3eca7c4b)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)


 opt flags pass 

BEGIN FLAG ANALYSISCAaaddaaddaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x0565590c5)0x83e801                  sub $0x01, %eax                 
: (orig=0x0565590c8)0x89837cfeffff            mov %eax, 0xfffffe7c(%ebx)      
leal-based check (opsize = 4)
: (orig=0x0565590ce)0x8b4584                  mov 0x84(%ebp), %eax            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x0565590d1)0x838374feffff01          add $0x01, 0xfffffe74(%ebx)     
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x0565590d8)0x83c004                  add $0x04, %eax                 
: (orig=0x0565590db)0x898378feffff            mov %eax, 0xfffffe78(%ebx)      
leal-based check (opsize = 4)
: (orig=0x0565590e1)0x8b450c                  mov 0x0c(%ebp), %eax            
leal-based check (opsize = 4)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x0565590e4)0xc1e005                  shl $0x05, %eax                 
: (orig=0x0565590e7)0x034508                  add 0x08(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x0565590ea)0x3b4508                  cmp 0x08(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x0565590ed)0x7624                    jbe +0x24                       
action_jcc
start fun: action_jcc(*addr=0x565590ed, *transl_addr=0x3eca7cf3, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559113)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97ee0, target: 0x56559113, origin: 0x3eca7cf5start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565590ef)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98030, target: 0x565590ef, origin: 0x3eca7cfaend fun: -> close, transl_length=11
end fun: -> 0x3eca7c4b,   next_tu=0x565590ef (len: 179)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559113)
end fun: -> 0x00000000
ff = 101
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559113)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7d05start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559113, *transl_address=0x3eca7d05)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056559113)0x837dd402                cmp $0x02, 0xd4(%ebp)           
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559117)0x0f84df000000            jz +0x000000df                  
action_jcc
start fun: action_jcc(*addr=0x56559117, *transl_addr=0x3eca7d1a, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565591fc)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97e38, target: 0x565591fc, origin: 0x3eca7d1cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655911d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98068, target: 0x5655911d, origin: 0x3eca7d21end fun: -> close, transl_length=11
end fun: -> 0x3eca7d05,   next_tu=0x5655911d (len: 32)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655911d)
end fun: -> 0x00000000
ff = 102
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655911d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7d2cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655911d, *transl_address=0x3eca7d2c)
end fun:  
opcode escape found: 0fopcode table: 0x00243f28 -> 0x002163c0 (0x00216488)


 opt flags pass 

BEGIN FLAG ANALYSISddddaddddddddddddaddddEND FLAG ANALYSISopcode escape found: 0f: (orig=0x05655911d)0x0f31                    rdtsc                           
: (orig=0x05655911f)0x8b4d84                  mov 0x84(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x056559122)0x899574ffffff            mov %edx, 0xffffff74(%ebp)      
leal-based check (opsize = 4)
: (orig=0x056559128)0x898570ffffff            mov %eax, 0xffffff70(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655912e)0x31c0                    xor %eax, %eax                  
: (orig=0x056559130)0x8b5104                  mov 0x04(%ecx), %edx            
leal-based check (opsize = 4)
: (orig=0x056559133)0xb901000000              mov $0x00000001, %ecx           
: (orig=0x056559138)0xc744240800000000        mov $0x00000000, 0x08(%esp)     
leal-based check (opsize = 4)
: (orig=0x056559140)0xc744240400000020        mov $0x20000000, 0x04(%esp)     
leal-based check (opsize = 4)
: (orig=0x056559148)0xc7042400000000          mov $0x00000000, (%esp)         
leal-based check (opsize = 4)
: (orig=0x05655914f)0xe86c410000              call +0x0000416c                
action_call
start fun: action_call(*addr=0x5655914f, *transl_addr=0x3eca7ddd, length=5)
original call_target: 0x5655d2c0return_address = 056559154
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d2c0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05655d2c0)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05655d2c1)0x89c5                    mov %eax, %ebp                  
: (orig=0x05655d2c3)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05655d2c4)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05655d2c5)0x89d6                    mov %edx, %esi                  
: (orig=0x05655d2c7)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
: (orig=0x05655d2c8)0x81ec6c020000            sub $0x0000026c, %esp           
: (orig=0x05655d2ce)0x8b842488020000          mov 0x00000288(%esp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655d2d5)0xe8710d0100              call +0x00010d71                
action_call
start fun: action_call(*addr=0x5655d2d5, *transl_addr=0x3eca7e5c, length=5)
original call_target: 0x5656e04breturn_address = 05655d2da
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca7e7d, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca7d2c,   next_tu=0x5656e04f (len: 351)
ff = 103
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d2da)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7e92start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d2da, *transl_address=0x3eca7e92)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05655d2da)0x81c31a8d0100            add $0x00018d1a, %ebx           
: (orig=0x05655d2e0)0x894c2430                mov %ecx, 0x30(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655d2e4)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655d2e6)0x0f88ad080000            js +0x000008ad                  
action_jcc
start fun: action_jcc(*addr=0x5655d2e6, *transl_addr=0x3eca7eb0, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655db99)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98068, target: 0x5655db99, origin: 0x3eca7eb2start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d2ec)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97ee0, target: 0x5655d2ec, origin: 0x3eca7eb7end fun: -> close, transl_length=11
end fun: -> 0x3eca7e92,   next_tu=0x5655d2ec (len: 41)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d2ec)
end fun: -> 0x00000000
ff = 104
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d2ec)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7ec2start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d2ec, *transl_address=0x3eca7ec2)
end fun:  
opcode escape found: 0f

 opt flags pass 
cmp reg mem

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655d2ec)0x8b942488020000          mov 0x00000288(%esp), %edx      
leal-based check (opsize = 4)
: (orig=0x05655d2f3)0x3b93ec040000            cmp 0x000004ec(%ebx), %edx      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655d2f9)0x0f83a7070000            jnc +0x000007a7                 
action_jcc
start fun: action_jcc(*addr=0x5655d2f9, *transl_addr=0x3eca7ef8, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655daa6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec980a0, target: 0x5655daa6, origin: 0x3eca7efastart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d2ff)
end fun: -> 0x00000000
allocated trampoline: 0x3ec980d8, target: 0x5655d2ff, origin: 0x3eca7effend fun: -> close, transl_length=11
end fun: -> 0x3eca7ec2,   next_tu=0x5655d2ff (len: 65)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d2ff)
end fun: -> 0x00000000
ff = 105
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d2ff)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7f0astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d2ff, *transl_address=0x3eca7f0a)
end fun:  


 opt flags pass 
... tests reg 7 with reg 7

BEGIN FLAG ANALYSISCAdddaEND FLAG ANALYSIS: (orig=0x05655d2ff)0x6b8424880200004c        imul 0x00000288(%esp), $0x4c, %eax 
leal-based check (opsize = 4)
: (orig=0x05655d307)0x8d8b2c000000            lea 0x0000002c(%ebx), %ecx      
: (orig=0x05655d30d)0x894c242c                mov %ecx, 0x2c(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655d311)0x8bbc182c000000          mov 0x0000002c(%eax, %ebx), %edi 
leal-based check (opsize = 4)
: (orig=0x05655d318)0x85ff                    test %edi, %edi                 
: (orig=0x05655d31a)0x7518                    jnz +0x18                       
action_jcc
start fun: action_jcc(*addr=0x5655d31a, *transl_addr=0x3eca7f62, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d334)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97ee0, target: 0x5655d334, origin: 0x3eca7f64start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d31c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98110, target: 0x5655d31c, origin: 0x3eca7f69end fun: -> close, transl_length=11
end fun: -> 0x3eca7f0a,   next_tu=0x5655d31c (len: 99)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d31c)
end fun: -> 0x00000000
ff = 106
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d31c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7f74start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d31c, *transl_address=0x3eca7f74)
end fun:  
opcode escape found: 0fopcode escape found: 0f

 opt flags pass 
... tests reg 5 with reg 5

BEGIN FLAG ANALYSISAaadEND FLAG ANALYSIS: (orig=0x05655d31c)0xeb42                    jmp +0x42                       
original_addr=05655d31c / addr=05655d31c
start fun: action_jmp(*addr=0x5655d31c, *transl_addr=0x3eca7f74, length=2)
action_jmp
original jmp_target: 0x5655d360start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d360)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655d360)0x85ed                    test %ebp, %ebp                 
PATCHING TST REG REG
opcode escape found: 0f: (orig=0x05655d362)0x0f95442437              setnz 0x37(%esp)                
leal-based check (opsize = 1)
RESTORING VIA TST
opcode escape found: 0f: (orig=0x05655d367)0x0f852b010000            jnz +0x0000012b                 
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655d367, *transl_addr=0x3eca7f98, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d498)
end fun: -> 0x00000000
allocated trampoline: 0x3ec980d8, target: 0x5655d498, origin: 0x3eca7f9astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d36d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98148, target: 0x5655d36d, origin: 0x3eca7f9fend fun: -> close, transl_length=11
end fun: -> 0x3eca7f74,   next_tu=0x5655d36d (len: 47)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d36d)
end fun: -> 0x00000000
ff = 107
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d36d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca7faastart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d36d, *transl_address=0x3eca7faa)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x00216460)
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAddadEND FLAG ANALYSIS: (orig=0x05655d36d)0x8b8c2484020000          mov 0x00000284(%esp), %ecx      
leal-based check (opsize = 4)
opcode table: 0x00243f28 -> 0x002163c0 (0x00216460)
: (orig=0x05655d374)0x81e100000010            and $0x10000000, %ecx           
: (orig=0x05655d37a)0x894c2438                mov %ecx, 0x38(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655d37e)0x8b8368feffff            mov 0xfffffe68(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05655d384)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655d386)0x0f85ab070000            jnz +0x000007ab                 
action_jcc
start fun: action_jcc(*addr=0x5655d386, *transl_addr=0x3eca7ffe, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655db37)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98110, target: 0x5655db37, origin: 0x3eca8000start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d38c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98180, target: 0x5655d38c, origin: 0x3eca8005end fun: -> close, transl_length=11
end fun: -> 0x3eca7faa,   next_tu=0x5655d38c (len: 95)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d38c)
end fun: -> 0x00000000
ff = 108
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d38c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8010start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d38c, *transl_address=0x3eca8010)
end fun:  
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)


 opt flags pass 

BEGIN FLAG ANALYSISCAadaddadddddddddddEND FLAG ANALYSIS: (orig=0x05655d38c)0xc74424042f000000        mov $0x0000002f, 0x04(%esp)     
leal-based check (opsize = 4)
: (orig=0x05655d394)0x893424                  mov %esi, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655d397)0xc684245f02000000        mov $0x00, 0x0000025f(%esp)     
leal-based check (opsize = 1)
: (orig=0x05655d39f)0xe85c010100              call +0x0001015c                
action_call
start fun: action_call(*addr=0x5655d39f, *transl_addr=0x3eca805a, length=5)
original call_target: 0x5656d500return_address = 05655d3a4
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d500)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d500)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05656d501)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05656d502)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656d503)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05656d504)0x8b442414                mov 0x14(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656d508)0x8b542418                mov 0x18(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656d50c)0x89c7                    mov %eax, %edi                  
: (orig=0x05656d50e)0x31c9                    xor %ecx, %ecx                  
: (orig=0x05656d510)0x88d6                    mov %edx, %esi                  
: (orig=0x05656d512)0x88d1                    mov %edx, %ecx                  
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05656d514)0xc1e210                  shl $0x10, %edx                 
: (orig=0x05656d517)0x88cd                    mov %ecx, %ebp                  
: (orig=0x05656d519)0x09ca                    or %ecx, %edx                   
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656d51b)0x83e703                  and $0x03, %edi                 
: (orig=0x05656d51e)0x7441                    jz +0x41                        
action_jcc
start fun: action_jcc(*addr=0x5656d51e, *transl_addr=0x3eca80f1, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d561)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98148, target: 0x5656d561, origin: 0x3eca80f3start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d520)
end fun: -> 0x00000000
allocated trampoline: 0x3ec981b8, target: 0x5656d520, origin: 0x3eca80f8end fun: -> close, transl_length=11
end fun: -> 0x3eca8010,   next_tu=0x5656d520 (len: 236)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d561)
end fun: -> 0x00000000
ff = 109
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d561)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8103start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d561, *transl_address=0x3eca8103)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCDAaadddEND FLAG ANALYSIS: (orig=0x05656d561)0x8b08                    mov (%eax), %ecx                
leal-based check (opsize = 4)
: (orig=0x05656d563)0xbdfffefefe              mov $0xfefefeff, %ebp           
: (orig=0x05656d568)0xbffffefefe              mov $0xfefefeff, %edi           
: (orig=0x05656d56d)0x01cd                    add %ecx, %ebp                  
: (orig=0x05656d56f)0x31cd                    xor %ecx, %ebp                  
: (orig=0x05656d571)0x01cf                    add %ecx, %edi                  
: (orig=0x05656d573)0x8d4004                  lea 0x04(%eax), %eax            
opcode escape found: 0f: (orig=0x05656d576)0x0f8316010000            jnc +0x00000116                 
action_jcc
start fun: action_jcc(*addr=0x5656d576, *transl_addr=0x3eca8129, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98180, target: 0x5656d692, origin: 0x3eca812bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d57c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec981f0, target: 0x5656d57c, origin: 0x3eca8130end fun: -> close, transl_length=11
end fun: -> 0x3eca8103,   next_tu=0x5656d57c (len: 49)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d57c)
end fun: -> 0x00000000
ff = 110
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d57c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca813bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d57c, *transl_address=0x3eca813b)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05656d57c)0x89cb                    mov %ecx, %ebx                  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
: (orig=0x05656d57e)0x81cdfffefefe            or $0xfefefeff, %ebp            
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656d584)0x83c501                  add $0x01, %ebp                 
opcode escape found: 0f: (orig=0x05656d587)0x0f8505010000            jnz +0x00000105                 
action_jcc
start fun: action_jcc(*addr=0x5656d587, *transl_addr=0x3eca8146, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98148, target: 0x5656d692, origin: 0x3eca8148start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d58d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98228, target: 0x5656d58d, origin: 0x3eca814dend fun: -> close, transl_length=11
end fun: -> 0x3eca813b,   next_tu=0x5656d58d (len: 22)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d58d)
end fun: -> 0x00000000
ff = 111
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d58d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8158start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d58d, *transl_address=0x3eca8158)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCDAdadEND FLAG ANALYSIS: (orig=0x05656d58d)0xbefffefefe              mov $0xfefefeff, %esi           
: (orig=0x05656d592)0x31d3                    xor %edx, %ebx                  
: (orig=0x05656d594)0x8b08                    mov (%eax), %ecx                
leal-based check (opsize = 4)
: (orig=0x05656d596)0x01de                    add %ebx, %esi                  
: (orig=0x05656d598)0xbffffefefe              mov $0xfefefeff, %edi           
opcode escape found: 0f: (orig=0x05656d59d)0x0f83d4000000            jnc +0x000000d4                 
action_jcc
start fun: action_jcc(*addr=0x5656d59d, *transl_addr=0x3eca8178, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d677)
end fun: -> 0x00000000
allocated trampoline: 0x3ec981f0, target: 0x5656d677, origin: 0x3eca817astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5a3)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98260, target: 0x5656d5a3, origin: 0x3eca817fend fun: -> close, transl_length=11
end fun: -> 0x3eca8158,   next_tu=0x5656d5a3 (len: 43)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5a3)
end fun: -> 0x00000000
ff = 112
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5a3)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca818astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d5a3, *transl_address=0x3eca818a)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAaaadEND FLAG ANALYSIS: (orig=0x05656d5a3)0x89fd                    mov %edi, %ebp                  
: (orig=0x05656d5a5)0x31de                    xor %ebx, %esi                  
: (orig=0x05656d5a7)0x01cd                    add %ecx, %ebp                  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
: (orig=0x05656d5a9)0x81cefffefefe            or $0xfefefeff, %esi            
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656d5af)0x83c601                  add $0x01, %esi                 
opcode escape found: 0f: (orig=0x05656d5b2)0x0f85bf000000            jnz +0x000000bf                 
action_jcc
start fun: action_jcc(*addr=0x5656d5b2, *transl_addr=0x3eca8199, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d677)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98228, target: 0x5656d677, origin: 0x3eca819bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5b8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98298, target: 0x5656d5b8, origin: 0x3eca81a0end fun: -> close, transl_length=11
end fun: -> 0x3eca818a,   next_tu=0x5656d5b8 (len: 26)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d677)
end fun: -> 0x00000000
ff = 113
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d677)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca81abstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d677, *transl_address=0x3eca81ab)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISCAaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05656d677)0x83e804                  sub $0x04, %eax                 
: (orig=0x05656d67a)0x84db                    test %ebx, %ebx                 
: (orig=0x05656d67c)0x740f                    jz +0x0f                        
action_jcc
start fun: action_jcc(*addr=0x5656d67c, *transl_addr=0x3eca81b0, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d68d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98260, target: 0x5656d68d, origin: 0x3eca81b2start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d67e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec982d0, target: 0x5656d67e, origin: 0x3eca81b7end fun: -> close, transl_length=11
end fun: -> 0x3eca81ab,   next_tu=0x5656d67e (len: 16)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d67e)
end fun: -> 0x00000000
ff = 114
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d67e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca81c2start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d67e, *transl_address=0x3eca81c2)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCAbEND FLAG ANALYSIS: (orig=0x05656d67e)0x40                      inc %eax                        
: (orig=0x05656d67f)0x84ff                    test %edi, %edi                 
: (orig=0x05656d681)0x740a                    jz +0x0a                        
action_jcc
start fun: action_jcc(*addr=0x5656d681, *transl_addr=0x3eca81c6, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d68d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98228, target: 0x5656d68d, origin: 0x3eca81c8start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d683)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98308, target: 0x5656d683, origin: 0x3eca81cdend fun: -> close, transl_length=11
end fun: -> 0x3eca81c2,   next_tu=0x5656d683 (len: 15)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d68d)
end fun: -> 0x00000000
ff = 115
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d68d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca81d8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d68d, *transl_address=0x3eca81d8)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddddEND FLAG ANALYSIS: (orig=0x05656d68d)0x5d                      pop %ebp                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656d68e)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656d68f)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656d690)0x5f                      pop %edi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656d691)0xc3                      ret                             
start fun: action_ret(*addr=0x5656d691, *transl_addr=0x3eca8224, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca81d8,   next_tu=0x5656d692 (len: 90)
ff = 116
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d3a4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8239start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d3a4, *transl_address=0x3eca8239)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655d3a4)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655d3a6)0x0f8452010000            jz +0x00000152                  
action_jcc
start fun: action_jcc(*addr=0x5655d3a6, *transl_addr=0x3eca823b, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d4fe)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98228, target: 0x5655d4fe, origin: 0x3eca823dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d3ac)
end fun: -> 0x00000000
allocated trampoline: 0x3ec982d0, target: 0x5655d3ac, origin: 0x3eca8242end fun: -> close, transl_length=11
end fun: -> 0x3eca8239,   next_tu=0x5655d3ac (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d3ac)
end fun: -> 0x00000000
ff = 117
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d3ac)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca824dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d3ac, *transl_address=0x3eca824d)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05655d3ac)0x807c243700              cmp $0x00, 0x37(%esp)           
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x05655d3b1)0x0f8419020000            jz +0x00000219                  
action_jcc
start fun: action_jcc(*addr=0x5655d3b1, *transl_addr=0x3eca8263, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d5d0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98340, target: 0x5655d5d0, origin: 0x3eca8265start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d3b7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98378, target: 0x5655d3b7, origin: 0x3eca826aend fun: -> close, transl_length=11
end fun: -> 0x3eca824d,   next_tu=0x5655d3b7 (len: 33)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d5d0)
end fun: -> 0x00000000
ff = 118
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d5d0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8275start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d5d0, *transl_address=0x3eca8275)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISddddaddEND FLAG ANALYSIS: (orig=0x05655d5d0)0x89f0                    mov %esi, %eax                  
: (orig=0x05655d5d2)0xe8f9ceffff              call +0xffffcef9                
action_call
start fun: action_call(*addr=0x5655d5d2, *transl_addr=0x3eca8277, length=5)
original call_target: 0x5655a4d0return_address = 05655d5d7
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a4d0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655a4d0)0x83ec1c                  sub $0x1c, %esp                 
: (orig=0x05655a4d3)0x895c2410                mov %ebx, 0x10(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655a4d7)0xe86f3b0100              call +0x00013b6f                
action_call
start fun: action_call(*addr=0x5655a4d7, *transl_addr=0x3eca829d, length=5)
original call_target: 0x5656e04breturn_address = 05655a4dc
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca82be, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca8275,   next_tu=0x5656e04f (len: 87)
ff = 119
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a4dc)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca82d3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a4dc, *transl_address=0x3eca82d3)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 

BEGIN FLAG ANALYSISCAdddddddaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05655a4dc)0x81c318bb0100            add $0x0001bb18, %ebx           
: (orig=0x05655a4e2)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655a4e5)0x89742414                mov %esi, 0x14(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655a4e9)0x89c6                    mov %eax, %esi                  
: (orig=0x05655a4eb)0x897c2418                mov %edi, 0x18(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655a4ef)0xe88c320100              call +0x0001328c                
action_call
start fun: action_call(*addr=0x5655a4ef, *transl_addr=0x3eca831b, length=5)
original call_target: 0x5656d780return_address = 05655a4f4
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d780)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d780)0x8b442404                mov 0x04(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656d784)0xba03000000              mov $0x00000003, %edx           
: (orig=0x05656d789)0x21c2                    and %eax, %edx                  
: (orig=0x05656d78b)0x7424                    jz +0x24                        
action_jcc
start fun: action_jcc(*addr=0x5656d78b, *transl_addr=0x3eca8345, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7b1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98340, target: 0x5656d7b1, origin: 0x3eca8347start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d78d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec982d0, target: 0x5656d78d, origin: 0x3eca834cend fun: -> close, transl_length=11
end fun: -> 0x3eca82d3,   next_tu=0x5656d78d (len: 125)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7b1)
end fun: -> 0x00000000
ff = 120
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7b1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8357start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d7b1, *transl_address=0x3eca8357)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 

BEGIN FLAG ANALYSISCBAaadEND FLAG ANALYSIS: (orig=0x05656d7b1)0x8b08                    mov (%eax), %ecx                
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656d7b3)0x83c004                  add $0x04, %eax                 
: (orig=0x05656d7b6)0x29ca                    sub %ecx, %edx                  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656d7b8)0x81c1fffefefe            add $0xfefefeff, %ecx           
: (orig=0x05656d7be)0x4a                      dec %edx                        
: (orig=0x05656d7bf)0x7358                    jnc +0x58                       
action_jcc
start fun: action_jcc(*addr=0x5656d7bf, *transl_addr=0x3eca8376, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d819)
end fun: -> 0x00000000
allocated trampoline: 0x3ec983b0, target: 0x5656d819, origin: 0x3eca8378start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7c1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec983e8, target: 0x5656d7c1, origin: 0x3eca837dend fun: -> close, transl_length=11
end fun: -> 0x3eca8357,   next_tu=0x5656d7c1 (len: 42)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7c1)
end fun: -> 0x00000000
ff = 121
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7c1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8388start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d7c1, *transl_address=0x3eca8388)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x00216460)


 opt flags pass 

BEGIN FLAG ANALYSISCAaEND FLAG ANALYSIS: (orig=0x05656d7c1)0x31ca                    xor %ecx, %edx                  
opcode table: 0x00243f28 -> 0x002163c0 (0x00216460)
: (orig=0x05656d7c3)0x81e200010101            and $0x01010100, %edx           
: (orig=0x05656d7c9)0x754e                    jnz +0x4e                       
action_jcc
start fun: action_jcc(*addr=0x5656d7c9, *transl_addr=0x3eca8390, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d819)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98340, target: 0x5656d819, origin: 0x3eca8392start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7cb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98420, target: 0x5656d7cb, origin: 0x3eca8397end fun: -> close, transl_length=11
end fun: -> 0x3eca8388,   next_tu=0x5656d7cb (len: 19)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7cb)
end fun: -> 0x00000000
ff = 122
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7cb)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca83a2start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d7cb, *transl_address=0x3eca83a2)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 

BEGIN FLAG ANALYSISCBAaadEND FLAG ANALYSIS: (orig=0x05656d7cb)0x8b08                    mov (%eax), %ecx                
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656d7cd)0x83c004                  add $0x04, %eax                 
: (orig=0x05656d7d0)0x29ca                    sub %ecx, %edx                  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656d7d2)0x81c1fffefefe            add $0xfefefeff, %ecx           
: (orig=0x05656d7d8)0x4a                      dec %edx                        
: (orig=0x05656d7d9)0x733e                    jnc +0x3e                       
action_jcc
start fun: action_jcc(*addr=0x5656d7d9, *transl_addr=0x3eca83c1, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d819)
end fun: -> 0x00000000
allocated trampoline: 0x3ec983e8, target: 0x5656d819, origin: 0x3eca83c3start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7db)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98458, target: 0x5656d7db, origin: 0x3eca83c8end fun: -> close, transl_length=11
end fun: -> 0x3eca83a2,   next_tu=0x5656d7db (len: 42)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d819)
end fun: -> 0x00000000
ff = 123
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d819)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca83d3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d819, *transl_address=0x3eca83d3)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCAaaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05656d819)0x83e804                  sub $0x04, %eax                 
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
: (orig=0x05656d81c)0x81e9fffefefe            sub $0xfefefeff, %ecx           
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656d822)0x80f900                  cmp $0x00, %ecx                 
: (orig=0x05656d825)0x740f                    jz +0x0f                        
action_jcc
start fun: action_jcc(*addr=0x5656d825, *transl_addr=0x3eca83df, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d836)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98420, target: 0x5656d836, origin: 0x3eca83e1start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d827)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98490, target: 0x5656d827, origin: 0x3eca83e6end fun: -> close, transl_length=11
end fun: -> 0x3eca83d3,   next_tu=0x5656d827 (len: 23)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d827)
end fun: -> 0x00000000
ff = 124
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d827)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca83f1start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d827, *transl_address=0x3eca83f1)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCAbEND FLAG ANALYSIS: (orig=0x05656d827)0x40                      inc %eax                        
: (orig=0x05656d828)0x84ed                    test %ebp, %ebp                 
: (orig=0x05656d82a)0x740a                    jz +0x0a                        
action_jcc
start fun: action_jcc(*addr=0x5656d82a, *transl_addr=0x3eca83f5, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d836)
end fun: -> 0x00000000
allocated trampoline: 0x3ec983e8, target: 0x5656d836, origin: 0x3eca83f7start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d82c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec984c8, target: 0x5656d82c, origin: 0x3eca83fcend fun: -> close, transl_length=11
end fun: -> 0x3eca83f1,   next_tu=0x5656d82c (len: 15)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d836)
end fun: -> 0x00000000
ff = 125
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d836)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8407start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d836, *transl_address=0x3eca8407)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdaEND FLAG ANALYSIS: (orig=0x05656d836)0x2b442404                sub 0x04(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656d83a)0xc3                      ret                             
start fun: action_ret(*addr=0x5656d83a, *transl_addr=0x3eca841d, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca8407,   next_tu=0x5656d83b (len: 36)
ff = 126
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a4f4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8432start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a4f4, *transl_address=0x3eca8432)
end fun:  
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 

BEGIN FLAG ANALYSIS4.4.4.4.END FLAG ANALYSIS: (orig=0x05655a4f4)0x8d7801                  lea 0x01(%eax), %edi            
SAV
: (orig=0x05655a4f7)0x893c24                  mov %edi, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655a4fa)0xe8d1b2ffff              call +0xffffb2d1                
action_call
start fun: action_call(*addr=0x5655a4fa, *transl_addr=0x3eca8461, length=5)
original call_target: 0x565557d0return_address = 05655a4ff
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565557d0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x0565557d0)0xffa310000000            jmp 0x00000010(%ebx)            
start fun: action_jmp_indirect(*addr=0x565557d0, *transl_addr=0x3eca846e, length=6)
action jmp ind
end fun: -> close, transl_length=13
end fun: -> 0x3eca8432,   next_tu=0x565557d6 (len: 73)
ff = 127
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad20)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8482start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ad20, *transl_address=0x3eca8482)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISddddEND FLAG ANALYSIS: (orig=0x05656ad20)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656ad21)0xe825330000              call +0x00003325                
action_call
start fun: action_call(*addr=0x5656ad21, *transl_addr=0x3eca8495, length=5)
original call_target: 0x5656e04breturn_address = 05656ad26
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca84b6, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca8482,   next_tu=0x5656e04f (len: 66)
ff = 128
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad26)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca84cbstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ad26, *transl_address=0x3eca84cb)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 

BEGIN FLAG ANALYSIS4.4.4.4.4.1.aEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656ad26)0x81c3ceb20000            add $0x0000b2ce, %ebx           
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05656ad2c)0x83ec18                  sub $0x18, %esp                 
: (orig=0x05656ad2f)0x8b442420                mov 0x20(%esp), %eax            
SAV
leal-based check (opsize = 4)
: (orig=0x05656ad33)0xc7042408000000          mov $0x00000008, (%esp)         
leal-based check (opsize = 4)
: (orig=0x05656ad3a)0x89442404                mov %eax, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656ad3e)0xe87daafeff              call +0xfffeaa7d                
action_call
start fun: action_call(*addr=0x5656ad3e, *transl_addr=0x3eca852f, length=5)
original call_target: 0x565557c0return_address = 05656ad43
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565557c0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x0565557c0)0xffa30c000000            jmp 0x0000000c(%ebx)            
start fun: action_jmp_indirect(*addr=0x565557c0, *transl_addr=0x3eca853c, length=6)
action jmp ind
end fun: -> close, transl_length=13
end fun: -> 0x3eca84cb,   next_tu=0x565557c6 (len: 126)
ff = 129
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac10)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8550start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ac10, *transl_address=0x3eca8550)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISdddddaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05656ac10)0x83ec2c                  sub $0x2c, %esp                 
: (orig=0x05656ac13)0x895c2420                mov %ebx, 0x20(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656ac17)0x8b442430                mov 0x30(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656ac1b)0xe82b340000              call +0x0000342b                
action_call
start fun: action_call(*addr=0x5656ac1b, *transl_addr=0x3eca857f, length=5)
original call_target: 0x5656e04breturn_address = 05656ac20
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca85a0, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca8550,   next_tu=0x5656e04f (len: 94)
ff = 130
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac20)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca85b5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ac20, *transl_address=0x3eca85b5)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdddddaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656ac20)0x81c3d4b30000            add $0x0000b3d4, %ebx           
: (orig=0x05656ac26)0x89742424                mov %esi, 0x24(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656ac2a)0x8b742434                mov 0x34(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656ac2e)0x897c2428                mov %edi, 0x28(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656ac32)0x8b8be8080000            mov 0x000008e8(%ebx), %ecx      
leal-based check (opsize = 4)
: (orig=0x05656ac38)0x8b93ec080000            mov 0x000008ec(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x05656ac3e)0x85c9                    test %ecx, %ecx                 
opcode escape found: 0f: (orig=0x05656ac40)0x0f84a2000000            jz +0x000000a2                  
action_jcc
start fun: action_jcc(*addr=0x5656ac40, *transl_addr=0x3eca8633, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ace8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec983e8, target: 0x5656ace8, origin: 0x3eca8635start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac46)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98490, target: 0x5656ac46, origin: 0x3eca863aend fun: -> close, transl_length=11
end fun: -> 0x3eca85b5,   next_tu=0x5656ac46 (len: 137)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ace8)
end fun: -> 0x00000000
ff = 131
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ace8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8645start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ace8, *transl_address=0x3eca8645)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)


 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISAdadaadddaadddEND FLAG ANALYSIS: (orig=0x05656ace8)0x8bbbbcfcffff            mov 0xfffffcbc(%ebx), %edi      
leal-based check (opsize = 4)
: (orig=0x05656acee)0x8d9324090000            lea 0x00000924(%ebx), %edx      
: (orig=0x05656acf4)0x8d4c17ff                lea 0xff(%edi, %edx), %ecx      
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
: (orig=0x05656acf8)0xf7df                    neg %edi                        
: (orig=0x05656acfa)0x21f9                    and %edi, %ecx                  
: (orig=0x05656acfc)0x898be8080000            mov %ecx, 0x000008e8(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05656ad02)0xe93fffffff              jmp +0xffffff3f                 
original_addr=05656ad02 / addr=05656ad02
start fun: action_jmp(*addr=0x5656ad02, *transl_addr=0x3eca8689, length=5)
action_jmp
jump_target = 0ffffff3f + 05656ad02 + 05original jmp_target: 0x5656ac46start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac46)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05656ac46)0x8d5402ff                lea 0xff(%edx, %eax), %edx      
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
: (orig=0x05656ac4a)0xf7d8                    neg %eax                        
: (orig=0x05656ac4c)0x21c2                    and %eax, %edx                  
: (orig=0x05656ac4e)0x8d0432                  lea (%edx, %esi), %eax          
: (orig=0x05656ac51)0x39c8                    cmp %ecx, %eax                  
PATCHING CMP REG REG
: (orig=0x05656ac53)0x8993ec080000            mov %edx, 0x000008ec(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05656ac59)0x7308                    jnc +0x08                       
RESTORING VIA CMP
action_jcc
start fun: action_jcc(*addr=0x5656ac59, *transl_addr=0x3eca86bb, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac63)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98500, target: 0x5656ac63, origin: 0x3eca86bdstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac5b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98538, target: 0x5656ac5b, origin: 0x3eca86c2end fun: -> close, transl_length=11
end fun: -> 0x3eca8645,   next_tu=0x5656ac5b (len: 129)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac5b)
end fun: -> 0x00000000
ff = 132
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac5b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca86cdstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ac5b, *transl_address=0x3eca86cd)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)


 opt flags pass 
... compares reg 1 with reg 6

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05656ac5b)0x89d1                    mov %edx, %ecx                  
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
: (orig=0x05656ac5d)0xf7d9                    neg %ecx                        
: (orig=0x05656ac5f)0x39ce                    cmp %ecx, %esi                  
: (orig=0x05656ac61)0x7265                    jc +0x65                        
action_jcc
start fun: action_jcc(*addr=0x5656ac61, *transl_addr=0x3eca86d3, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656acc8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec983e8, target: 0x5656acc8, origin: 0x3eca86d5start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac63)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98570, target: 0x5656ac63, origin: 0x3eca86daend fun: -> close, transl_length=11
end fun: -> 0x3eca86cd,   next_tu=0x5656ac63 (len: 17)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656acc8)
end fun: -> 0x00000000
ff = 133
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656acc8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca86e5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656acc8, *transl_address=0x3eca86e5)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISdaddddddEND FLAG ANALYSIS: (orig=0x05656acc8)0x8993f0080000            mov %edx, 0x000008f0(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05656acce)0x8983ec080000            mov %eax, 0x000008ec(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05656acd4)0x89d0                    mov %edx, %eax                  
: (orig=0x05656acd6)0x8b5c2420                mov 0x20(%esp), %ebx            
leal-based check (opsize = 4)
: (orig=0x05656acda)0x8b742424                mov 0x24(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656acde)0x8b7c2428                mov 0x28(%esp), %edi            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656ace2)0x83c42c                  add $0x2c, %esp                 
: (orig=0x05656ace5)0xc3                      ret                             
start fun: action_ret(*addr=0x5656ace5, *transl_addr=0x3eca8760, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca86e5,   next_tu=0x5656ace6 (len: 137)
ff = 134
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad43)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8775start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ad43, *transl_address=0x3eca8775)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISddaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656ad43)0x83c418                  add $0x18, %esp                 
: (orig=0x05656ad46)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656ad47)0xc3                      ret                             
start fun: action_ret(*addr=0x5656ad47, *transl_addr=0x3eca878b, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca8775,   next_tu=0x5656ad48 (len: 36)
ff = 135
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a4ff)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca87a0start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a4ff, *transl_address=0x3eca87a0)
end fun:  


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05655a4ff)0x89c2                    mov %eax, %edx                  
: (orig=0x05655a501)0x31c0                    xor %eax, %eax                  
: (orig=0x05655a503)0x85d2                    test %edx, %edx                 
: (orig=0x05655a505)0x7410                    jz +0x10                        
action_jcc
start fun: action_jcc(*addr=0x5655a505, *transl_addr=0x3eca87a6, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a517)
end fun: -> 0x00000000
allocated trampoline: 0x3ec983e8, target: 0x5655a517, origin: 0x3eca87a8start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a507)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98538, target: 0x5655a507, origin: 0x3eca87adend fun: -> close, transl_length=11
end fun: -> 0x3eca87a0,   next_tu=0x5655a507 (len: 17)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a507)
end fun: -> 0x00000000
ff = 136
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a507)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca87b8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a507, *transl_address=0x3eca87b8)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)


 opt flags pass 

BEGIN FLAG ANALYSISCDD1.adddddddddEND FLAG ANALYSIS: (orig=0x05655a507)0x897c2408                mov %edi, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655a50b)0x89742404                mov %esi, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655a50f)0x891424                  mov %edx, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655a512)0xe8b9390100              call +0x000139b9                
action_call
start fun: action_call(*addr=0x5655a512, *transl_addr=0x3eca87f8, length=5)
original call_target: 0x5656ded0return_address = 05655a517
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ded0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656ded0)0x89f8                    mov %edi, %eax                  
: (orig=0x05656ded2)0x8b7c2404                mov 0x04(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x05656ded6)0x89f2                    mov %esi, %edx                  
: (orig=0x05656ded8)0x8b742408                mov 0x08(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656dedc)0x89f9                    mov %edi, %ecx                  
: (orig=0x05656dede)0x31f1                    xor %esi, %ecx                  
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656dee0)0x83e103                  and $0x03, %ecx                 
: (orig=0x05656dee3)0x8b4c240c                mov 0x0c(%esp), %ecx            
SAV
leal-based check (opsize = 4)
RST
: (orig=0x05656dee7)0xfc                      cld                             
: (orig=0x05656dee8)0x753c                    jnz +0x3c                       
action_jcc
start fun: action_jcc(*addr=0x5656dee8, *transl_addr=0x3eca8880, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656df26)
end fun: -> 0x00000000
allocated trampoline: 0x3ec985a8, target: 0x5656df26, origin: 0x3eca8882start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656deea)
end fun: -> 0x00000000
allocated trampoline: 0x3ec985e0, target: 0x5656deea, origin: 0x3eca8887end fun: -> close, transl_length=11
end fun: -> 0x3eca87b8,   next_tu=0x5656deea (len: 211)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656deea)
end fun: -> 0x00000000
ff = 137
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656deea)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8892start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656deea, *transl_address=0x3eca8892)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 03 with reg 1

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05656deea)0x83f903                  cmp $0x03, %ecx                 
: (orig=0x05656deed)0x7637                    jbe +0x37                       
action_jcc
start fun: action_jcc(*addr=0x5656deed, *transl_addr=0x3eca8895, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656df26)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98538, target: 0x5656df26, origin: 0x3eca8897start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656deef)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98618, target: 0x5656deef, origin: 0x3eca889cend fun: -> close, transl_length=11
end fun: -> 0x3eca8892,   next_tu=0x5656deef (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656deef)
end fun: -> 0x00000000
ff = 138
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656deef)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca88a7start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656deef, *transl_address=0x3eca88a7)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x00217040)


 opt flags pass 
... test imm 03 with reg!=eax 6

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00245198 -> 0x00217040 (0x00217040)
: (orig=0x05656deef)0xf7c603000000            test $0x00000003, %esi          
: (orig=0x05656def5)0x7416                    jz +0x16                        
action_jcc
start fun: action_jcc(*addr=0x5656def5, *transl_addr=0x3eca88ad, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656df0d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec985e0, target: 0x5656df0d, origin: 0x3eca88afstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656def7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98650, target: 0x5656def7, origin: 0x3eca88b4end fun: -> close, transl_length=11
end fun: -> 0x3eca88a7,   next_tu=0x5656def7 (len: 17)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656df0d)
end fun: -> 0x00000000
ff = 139
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656df0d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca88bfstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656df0d, *transl_address=0x3eca88bf)
end fun:  
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
prefix found: 0f3prefix found: 0f3

 opt flags pass 

BEGIN FLAG ANALYSISddddddddaaddEND FLAG ANALYSIS: (orig=0x05656df0d)0x50                      push %eax                       
pop-based check
CHECK (stack write)
: (orig=0x05656df0e)0x89c8                    mov %ecx, %eax                  
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
: (orig=0x05656df10)0xc1e902                  shr $0x02, %ecx                 
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656df13)0x83e003                  and $0x03, %eax                 
prefix found: 0f3: (orig=0x05656df16)0xf3a5                    movsd %es:(%edi), 1448533782s:(%esi) 
: (orig=0x05656df18)0x89c1                    mov %eax, %ecx                  
prefix found: 0f3: (orig=0x05656df1a)0xf3a4                    movsb %es:(%edi), 1448533786s:(%esi) 
: (orig=0x05656df1c)0x58                      pop %eax                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656df1d)0x89c7                    mov %eax, %edi                  
: (orig=0x05656df1f)0x89d6                    mov %edx, %esi                  
: (orig=0x05656df21)0x8b442404                mov 0x04(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656df25)0xc3                      ret                             
start fun: action_ret(*addr=0x5656df25, *transl_addr=0x3eca8915, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca88bf,   next_tu=0x5656df26 (len: 100)
ff = 140
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a517)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca892astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a517, *transl_address=0x3eca892a)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISdadddEND FLAG ANALYSIS: (orig=0x05655a517)0x8b5c2410                mov 0x10(%esp), %ebx            
leal-based check (opsize = 4)
: (orig=0x05655a51b)0x8b742414                mov 0x14(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05655a51f)0x8b7c2418                mov 0x18(%esp), %edi            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655a523)0x83c41c                  add $0x1c, %esp                 
: (orig=0x05655a526)0xc3                      ret                             
start fun: action_ret(*addr=0x5655a526, *transl_addr=0x3eca896f, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca892a,   next_tu=0x5655a527 (len: 83)
ff = 141
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d5d7)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8984start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d5d7, *transl_address=0x3eca8984)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISAddadEND FLAG ANALYSIS: (orig=0x05655d5d7)0xe9ebfdffff              jmp +0xfffffdeb                 
original_addr=05655d5d7 / addr=05655d5d7
start fun: action_jmp(*addr=0x5655d5d7, *transl_addr=0x3eca8984, length=5)
action_jmp
jump_target = 0fffffdeb + 05655d5d7 + 05original jmp_target: 0x5655d3c7start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d3c7)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655d3c7)0x85c0                    test %eax, %eax                 
PATCHING TST REG REG
: (orig=0x05655d3c9)0xbaffffffff              mov $0xffffffff, %edx           
: (orig=0x05655d3ce)0x89842454020000          mov %eax, 0x00000254(%esp)      
leal-based check (opsize = 4)
: (orig=0x05655d3d5)0x743f                    jz +0x3f                        
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655d3d5, *transl_addr=0x3eca89b0, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d416)
end fun: -> 0x00000000
allocated trampoline: 0x3ec985e0, target: 0x5655d416, origin: 0x3eca89b2start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d3d7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98618, target: 0x5655d3d7, origin: 0x3eca89b7end fun: -> close, transl_length=11
end fun: -> 0x3eca8984,   next_tu=0x5655d3d7 (len: 55)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d3d7)
end fun: -> 0x00000000
ff = 142
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d3d7)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca89c2start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d3d7, *transl_address=0x3eca89c2)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCDAEND FLAG ANALYSISopcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05655d3d7)0x807c243700              cmp $0x00, 0x37(%esp)           
leal-based check (opsize = 1)
: (orig=0x05655d3dc)0x89ea                    mov %ebp, %edx                  
opcode escape found: 0f: (orig=0x05655d3de)0x0f84f8010000            jz +0x000001f8                  
action_jcc
start fun: action_jcc(*addr=0x5655d3de, *transl_addr=0x3eca89da, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d5dc)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98688, target: 0x5655d5dc, origin: 0x3eca89dcstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d3e4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec986c0, target: 0x5655d3e4, origin: 0x3eca89e1end fun: -> close, transl_length=11
end fun: -> 0x3eca89c2,   next_tu=0x5655d3e4 (len: 35)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d5dc)
end fun: -> 0x00000000
ff = 143
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d5dc)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca89ecstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d5dc, *transl_address=0x3eca89ec)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISdddddadddddddddddddddaEND FLAG ANALYSIS: (orig=0x05655d5dc)0x6b9424880200004c        imul 0x00000288(%esp), $0x4c, %edx 
leal-based check (opsize = 4)
: (orig=0x05655d5e4)0x8b4c242c                mov 0x2c(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655d5e8)0x8b140a                  mov (%edx, %ecx), %edx          
leal-based check (opsize = 4)
: (orig=0x05655d5eb)0xe9f4fdffff              jmp +0xfffffdf4                 
original_addr=05655d5eb / addr=05655d5eb
start fun: action_jmp(*addr=0x5655d5eb, *transl_addr=0x3eca8a33, length=5)
action_jmp
jump_target = 0fffffdf4 + 05655d5eb + 05original jmp_target: 0x5655d3e4start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d3e4)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655d3e4)0x8d8c245f020000          lea 0x0000025f(%esp), %ecx      
: (orig=0x05655d3eb)0x891424                  mov %edx, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655d3ee)0x8d542450                lea 0x50(%esp), %edx            
: (orig=0x05655d3f2)0xc744240c01000000        mov $0x00000001, 0x0c(%esp)     
leal-based check (opsize = 4)
: (orig=0x05655d3fa)0x894c2408                mov %ecx, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655d3fe)0xc744240400000000        mov $0x00000000, 0x04(%esp)     
leal-based check (opsize = 4)
: (orig=0x05655d406)0xe8a5d5ffff              call +0xffffd5a5                
action_call
start fun: action_call(*addr=0x5655d406, *transl_addr=0x3eca8a9e, length=5)
original call_target: 0x5655a9b0return_address = 05655d40b
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a9b0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05655a9b0)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05655a9b1)0x89e5                    mov %esp, %ebp                  
: (orig=0x05655a9b3)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05655a9b4)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05655a9b5)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655a9b6)0x83ec4c                  sub $0x4c, %esp                 
: (orig=0x05655a9b9)0x8b750c                  mov 0x0c(%ebp), %esi            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655a9bc)0x0fb64d14                movzx 0x14(%ebp), %ecx          
leal-based check (opsize = 4)
: (orig=0x05655a9c0)0xe886360100              call +0x00013686                
action_call
start fun: action_call(*addr=0x5655a9c0, *transl_addr=0x3eca8b25, length=5)
original call_target: 0x5656e04breturn_address = 05655a9c5
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca8b46, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca89ec,   next_tu=0x5656e04f (len: 360)
ff = 144
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a9c5)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8b5bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655a9c5, *transl_address=0x3eca8b5b)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISAddadaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05655a9c5)0x81c32fb60100            add $0x0001b62f, %ebx           
: (orig=0x05655a9cb)0x8945d4                  mov %eax, 0xd4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655a9ce)0x85f6                    test %esi, %esi                 
PATCHING TST REG REG
: (orig=0x05655a9d0)0x8955dc                  mov %edx, 0xdc(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655a9d3)0x884dd3                  mov %ecx, 0xd3(%ebp)            
leal-based check (opsize = 1)
: (orig=0x05655a9d6)0x7460                    jz +0x60                        
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655a9d6, *transl_addr=0x3eca8ba7, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aa38)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98688, target: 0x5655aa38, origin: 0x3eca8ba9start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655a9d8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98618, target: 0x5655a9d8, origin: 0x3eca8baeend fun: -> close, transl_length=11
end fun: -> 0x3eca8b5b,   next_tu=0x5655a9d8 (len: 87)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aa38)
end fun: -> 0x00000000
ff = 145
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aa38)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8bb9start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aa38, *transl_address=0x3eca8bb9)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISBDD4.4.4.4.4.4.4.END FLAG ANALYSIS: (orig=0x05655aa38)0x8b45d4                  mov 0xd4(%ebp), %eax            
SAV
leal-based check (opsize = 4)
: (orig=0x05655aa3b)0xc744240400000800        mov $0x00080000, 0x04(%esp)     
leal-based check (opsize = 4)
: (orig=0x05655aa43)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655aa46)0xe8c5250100              call +0x000125c5                
action_call
start fun: action_call(*addr=0x5655aa46, *transl_addr=0x3eca8c12, length=5)
original call_target: 0x5656d010return_address = 05655aa4b
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d010)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d010)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656d011)0x8b542410                mov 0x10(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656d015)0x8b4c240c                mov 0x0c(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656d019)0x8b5c2408                mov 0x08(%esp), %ebx            
leal-based check (opsize = 4)
RST
: (orig=0x05656d01d)0xb805000000              mov $0x00000005, %eax           
: (orig=0x05656d022)0xcd80                    int $0x80                       
closing TU upon request, invoking translation function on 0x5656d024allocated trampoline: 0x3ec986f8, target: 0x5656d024, origin: 0x3eca8cc0end fun: -> 0x3eca8bb9,   next_tu=0x5656d024 (len: 255)
SYSCALL 5
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d024)
end fun: -> 0x00000000
ff = 146
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d024)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8cc4start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d024, *transl_address=0x3eca8cc4)
end fun:  


 opt flags pass 
... cmp imm 0fffff001 with eax

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656d024)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656d025)0x3d01f0ffff              cmp $0xfffff001, %eax           
: (orig=0x05656d02a)0x7301                    jnc +0x01                       
action_jcc
start fun: action_jcc(*addr=0x5656d02a, *transl_addr=0x3eca8cdc, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d02d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98688, target: 0x5656d02d, origin: 0x3eca8cdestart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d02c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98730, target: 0x5656d02c, origin: 0x3eca8ce3end fun: -> close, transl_length=11
end fun: -> 0x3eca8cc4,   next_tu=0x5656d02c (len: 35)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d02c)
end fun: -> 0x00000000
ff = 147
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d02c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8ceestart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d02c, *transl_address=0x3eca8cee)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdEND FLAG ANALYSIS: (orig=0x05656d02c)0xc3                      ret                             
start fun: action_ret(*addr=0x5656d02c, *transl_addr=0x3eca8cee, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca8cee,   next_tu=0x5656d02d (len: 14)
ff = 148
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aa4b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8d03start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aa4b, *transl_address=0x3eca8d03)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 0ffffffff with reg 0

BEGIN FLAG ANALYSISAdaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655aa4b)0x83f8ff                  cmp $0xff, %eax                 
PATCHING CMP IMM REG
: (orig=0x05655aa4e)0x8945e0                  mov %eax, 0xe0(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655aa51)0x0f84ed010000            jz +0x000001ed                  
RESTORING VIA CMP
action_jcc
start fun: action_jcc(*addr=0x5655aa51, *transl_addr=0x3eca8d26, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac44)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98730, target: 0x5655ac44, origin: 0x3eca8d28start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aa57)
end fun: -> 0x00000000
allocated trampoline: 0x3ec986f8, target: 0x5655aa57, origin: 0x3eca8d2dend fun: -> close, transl_length=11
end fun: -> 0x3eca8d03,   next_tu=0x5655aa57 (len: 46)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aa57)
end fun: -> 0x00000000
ff = 149
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aa57)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8d38start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aa57, *transl_address=0x3eca8d38)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISBDD4.4.4.4.4.1.ddddEND FLAG ANALYSIS: (orig=0x05655aa57)0x8b7ddc                  mov 0xdc(%ebp), %edi            
leal-based check (opsize = 4)
: (orig=0x05655aa5a)0xc7830c09000000000000    mov $0x00000000, 0x0000090c(%ebx) 
leal-based check (opsize = 4)
: (orig=0x05655aa64)0xc744240800020000        mov $0x00000200, 0x08(%esp)     
leal-based check (opsize = 4)
: (orig=0x05655aa6c)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655aa6f)0x83c704                  add $0x04, %edi                 
: (orig=0x05655aa72)0x897c2404                mov %edi, 0x04(%esp)            
SAV
leal-based check (opsize = 4)
: (orig=0x05655aa76)0xe815260100              call +0x00012615                
action_call
start fun: action_call(*addr=0x5655aa76, *transl_addr=0x3eca8dc8, length=5)
original call_target: 0x5656d090return_address = 05655aa7b
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d090)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d090)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656d091)0x8b542410                mov 0x10(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656d095)0x8b4c240c                mov 0x0c(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656d099)0x8b5c2408                mov 0x08(%esp), %ebx            
leal-based check (opsize = 4)
RST
: (orig=0x05656d09d)0xb803000000              mov $0x00000003, %eax           
: (orig=0x05656d0a2)0xcd80                    int $0x80                       
closing TU upon request, invoking translation function on 0x5656d0a4allocated trampoline: 0x3ec98768, target: 0x5656d0a4, origin: 0x3eca8e76end fun: -> 0x3eca8d38,   next_tu=0x5656d0a4 (len: 310)
SYSCALL 3
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d0a4)
end fun: -> 0x00000000
ff = 150
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d0a4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8e7astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d0a4, *transl_address=0x3eca8e7a)
end fun:  


 opt flags pass 
... cmp imm 0fffff001 with eax

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656d0a4)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656d0a5)0x3d01f0ffff              cmp $0xfffff001, %eax           
: (orig=0x05656d0aa)0x7301                    jnc +0x01                       
action_jcc
start fun: action_jcc(*addr=0x5656d0aa, *transl_addr=0x3eca8e92, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d0ad)
end fun: -> 0x00000000
allocated trampoline: 0x3ec986f8, target: 0x5656d0ad, origin: 0x3eca8e94start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d0ac)
end fun: -> 0x00000000
allocated trampoline: 0x3ec987a0, target: 0x5656d0ac, origin: 0x3eca8e99end fun: -> close, transl_length=11
end fun: -> 0x3eca8e7a,   next_tu=0x5656d0ac (len: 35)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d0ac)
end fun: -> 0x00000000
ff = 151
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d0ac)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8ea4start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d0ac, *transl_address=0x3eca8ea4)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdEND FLAG ANALYSIS: (orig=0x05656d0ac)0xc3                      ret                             
start fun: action_ret(*addr=0x5656d0ac, *transl_addr=0x3eca8ea4, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca8ea4,   next_tu=0x5656d0ad (len: 14)
ff = 152
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aa7b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8eb9start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aa7b, *transl_address=0x3eca8eb9)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 033 with reg 0

BEGIN FLAG ANALYSISAddadEND FLAG ANALYSIS: (orig=0x05655aa7b)0x8b55dc                  mov 0xdc(%ebp), %edx            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655aa7e)0x83f833                  cmp $0x33, %eax                 
PATCHING CMP IMM REG
: (orig=0x05655aa81)0x89c6                    mov %eax, %esi                  
: (orig=0x05655aa83)0x8902                    mov %eax, (%edx)                
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655aa85)0x0f8e6f030000            jle +0x0000036f                 
RESTORING VIA CMP
action_jcc
start fun: action_jcc(*addr=0x5655aa85, *transl_addr=0x3eca8ef0, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655adfa)
end fun: -> 0x00000000
allocated trampoline: 0x3ec987a0, target: 0x5655adfa, origin: 0x3eca8ef2start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aa8b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98768, target: 0x5655aa8b, origin: 0x3eca8ef7end fun: -> close, transl_length=11
end fun: -> 0x3eca8eb9,   next_tu=0x5655aa8b (len: 66)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aa8b)
end fun: -> 0x00000000
ff = 153
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aa8b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8f02start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aa8b, *transl_address=0x3eca8f02)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 01 with reg 1

BEGIN FLAG ANALYSISCAdddddddddEND FLAG ANALYSIS: (orig=0x05655aa8b)0x8d83f084ffff            lea 0xffff84f0(%ebx), %eax      
: (orig=0x05655aa91)0xc744240808000000        mov $0x00000008, 0x08(%esp)     
leal-based check (opsize = 4)
: (orig=0x05655aa99)0x89442404                mov %eax, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655aa9d)0x893c24                  mov %edi, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655aaa0)0xe8db2f0100              call +0x00012fdb                
action_call
start fun: action_call(*addr=0x5655aaa0, *transl_addr=0x3eca8f4d, length=5)
original call_target: 0x5656da80return_address = 05655aaa5
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656da80)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656da80)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656da81)0x8b442408                mov 0x08(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656da85)0x8b54240c                mov 0x0c(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656da89)0x8b4c2410                mov 0x10(%esp), %ecx            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05656da8d)0x83f901                  cmp $0x01, %ecx                 
: (orig=0x05656da90)0x7512                    jnz +0x12                       
action_jcc
start fun: action_jcc(*addr=0x5656da90, *transl_addr=0x3eca8fb2, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656daa4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec987d8, target: 0x5656daa4, origin: 0x3eca8fb4start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656da92)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98810, target: 0x5656da92, origin: 0x3eca8fb9end fun: -> close, transl_length=11
end fun: -> 0x3eca8f02,   next_tu=0x5656da92 (len: 187)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656daa4)
end fun: -> 0x00000000
ff = 154
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656daa4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8fc4start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656daa4, *transl_address=0x3eca8fc4)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCEND FLAG ANALYSIS: (orig=0x05656daa4)0x7cf3                    jl +0xf3                        
action_jcc
start fun: action_jcc(*addr=0x5656daa4, *transl_addr=0x3eca8fc4, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656da99)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98768, target: 0x5656da99, origin: 0x3eca8fc6start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656daa6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98848, target: 0x5656daa6, origin: 0x3eca8fcbend fun: -> close, transl_length=11
end fun: -> 0x3eca8fc4,   next_tu=0x5656daa6 (len: 11)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656daa6)
end fun: -> 0x00000000
ff = 155
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656daa6)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca8fd6start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656daa6, *transl_address=0x3eca8fd6)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 020 with reg 1

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05656daa6)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05656daa7)0x89c6                    mov %eax, %esi                  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05656daa9)0x83f920                  cmp $0x20, %ecx                 
opcode escape found: 0f: (orig=0x05656daac)0x0f8d0e020000            jge +0x0000020e                 
action_jcc
start fun: action_jcc(*addr=0x5656daac, *transl_addr=0x3eca8fee, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dcc0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec987d8, target: 0x5656dcc0, origin: 0x3eca8ff0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dab2)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98880, target: 0x5656dab2, origin: 0x3eca8ff5end fun: -> close, transl_length=11
end fun: -> 0x3eca8fd6,   next_tu=0x5656dab2 (len: 35)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dab2)
end fun: -> 0x00000000
ff = 156
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dab2)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9000start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656dab2, *transl_address=0x3eca9000)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddEND FLAG ANALYSIS: (orig=0x05656dab2)0xe894050000              call +0x00000594                
action_call
start fun: action_call(*addr=0x5656dab2, *transl_addr=0x3eca9000, length=5)
original call_target: 0x5656e04breturn_address = 05656dab7
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca9021, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca9000,   next_tu=0x5656e04f (len: 47)
ff = 157
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dab7)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9036start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656dab7, *transl_address=0x3eca9036)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 

BEGIN FLAG ANALYSIS4.1.aaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656dab7)0x81c3cd0d0000            add $0x00000dcd, %ebx           
: (orig=0x05656dabd)0x031c8b                  add (%ebx, %ecx*4), %ebx        
leal-based check (opsize = 4)
: (orig=0x05656dac0)0x01ca                    add %ecx, %edx                  
: (orig=0x05656dac2)0x01ce                    add %ecx, %esi                  
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x05656dac4)0xffe3                    jmp %ebx                        
SAV
start fun: action_jmp_indirect(*addr=0x5656dac4, *transl_addr=0x3eca906b, length=2)
action jmp ind
end fun: -> close, transl_length=8
end fun: -> 0x3eca9036,   next_tu=0x5656dac6 (len: 61)
ff = 158
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656db16)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca907astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656db16, *transl_address=0x3eca907a)
end fun:  
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05656db16)0x8b46f8                  mov 0xf8(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05656db19)0x8b4af8                  mov 0xf8(%edx), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656db1c)0x39c8                    cmp %ecx, %eax                  
opcode escape found: 0f: (orig=0x05656db1e)0x0f8513020000            jnz +0x00000213                 
action_jcc
start fun: action_jcc(*addr=0x5656db1e, *transl_addr=0x3eca90a4, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dd37)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98880, target: 0x5656dd37, origin: 0x3eca90a6start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656db24)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98848, target: 0x5656db24, origin: 0x3eca90abend fun: -> close, transl_length=11
end fun: -> 0x3eca907a,   next_tu=0x5656db24 (len: 53)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656db24)
end fun: -> 0x00000000
ff = 159
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656db24)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca90b6start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656db24, *transl_address=0x3eca90b6)
end fun:  
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05656db24)0x8b46fc                  mov 0xfc(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05656db27)0x8b4afc                  mov 0xfc(%edx), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656db2a)0x39c8                    cmp %ecx, %eax                  
opcode escape found: 0f: (orig=0x05656db2c)0x0f8505020000            jnz +0x00000205                 
action_jcc
start fun: action_jcc(*addr=0x5656db2c, *transl_addr=0x3eca90e0, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dd37)
end fun: -> 0x00000000
allocated trampoline: 0x3ec988b8, target: 0x5656dd37, origin: 0x3eca90e2start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656db32)
end fun: -> 0x00000000
allocated trampoline: 0x3ec988f0, target: 0x5656db32, origin: 0x3eca90e7end fun: -> close, transl_length=11
end fun: -> 0x3eca90b6,   next_tu=0x5656db32 (len: 53)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656db32)
end fun: -> 0x00000000
ff = 160
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656db32)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca90f2start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656db32, *transl_address=0x3eca90f2)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISddadEND FLAG ANALYSIS: (orig=0x05656db32)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656db33)0x31c0                    xor %eax, %eax                  
: (orig=0x05656db35)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656db36)0xc3                      ret                             
start fun: action_ret(*addr=0x5656db36, *transl_addr=0x3eca911a, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca90f2,   next_tu=0x5656db37 (len: 54)
ff = 161
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aaa5)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca912fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aaa5, *transl_address=0x3eca912f)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655aaa5)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655aaa7)0x0f8503040000            jnz +0x00000403                 
action_jcc
start fun: action_jcc(*addr=0x5655aaa7, *transl_addr=0x3eca9131, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aeb0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec988f0, target: 0x5655aeb0, origin: 0x3eca9133start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aaad)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98848, target: 0x5655aaad, origin: 0x3eca9138end fun: -> close, transl_length=11
end fun: -> 0x3eca912f,   next_tu=0x5655aaad (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aaad)
end fun: -> 0x00000000
ff = 162
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aaad)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9143start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aaad, *transl_address=0x3eca9143)
end fun:  
opcode escape found: 0fopcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05655aaad)0x8b55dc                  mov 0xdc(%ebp), %edx            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655aab0)0x0fb6420c                movzx 0x0c(%edx), %eax          
leal-based check (opsize = 4)
: (orig=0x05655aab4)0x84c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655aab6)0x0f8593010000            jnz +0x00000193                 
action_jcc
start fun: action_jcc(*addr=0x5655aab6, *transl_addr=0x3eca916e, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac4f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98928, target: 0x5655ac4f, origin: 0x3eca9170start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aabc)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98960, target: 0x5655aabc, origin: 0x3eca9175end fun: -> close, transl_length=11
end fun: -> 0x3eca9143,   next_tu=0x5655aabc (len: 54)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aabc)
end fun: -> 0x00000000
ff = 163
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aabc)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9180start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aabc, *transl_address=0x3eca9180)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 01 with reg 1

BEGIN FLAG ANALYSISCAddddddaddddEND FLAG ANALYSIS: (orig=0x05655aabc)0x8d83f984ffff            lea 0xffff84f9(%ebx), %eax      
: (orig=0x05655aac2)0x89442404                mov %eax, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655aac6)0x8b45dc                  mov 0xdc(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x05655aac9)0xc744240807000000        mov $0x00000007, 0x08(%esp)     
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655aad1)0x83c00d                  add $0x0d, %eax                 
: (orig=0x05655aad4)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655aad7)0xe8a42f0100              call +0x00012fa4                
action_call
start fun: action_call(*addr=0x5655aad7, *transl_addr=0x3eca91e2, length=5)
original call_target: 0x5656da80return_address = 05655aadc
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656da80)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656da80)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656da81)0x8b442408                mov 0x08(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656da85)0x8b54240c                mov 0x0c(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656da89)0x8b4c2410                mov 0x10(%esp), %ecx            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05656da8d)0x83f901                  cmp $0x01, %ecx                 
: (orig=0x05656da90)0x7512                    jnz +0x12                       
action_jcc
start fun: action_jcc(*addr=0x5656da90, *transl_addr=0x3eca9247, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656daa4)
end fun: -> 0x3eca8fc4
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656da92)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98848, target: 0x5656da92, origin: 0x3eca924eend fun: -> close, transl_length=11
end fun: -> 0x3eca9180,   next_tu=0x5656da92 (len: 210)
ff = 164
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dc7e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9259start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656dc7e, *transl_address=0x3eca9259)
end fun:  
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05656dc7e)0x8b46f9                  mov 0xf9(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05656dc81)0x8b4af9                  mov 0xf9(%edx), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656dc84)0x39c8                    cmp %ecx, %eax                  
opcode escape found: 0f: (orig=0x05656dc86)0x0f85ab000000            jnz +0x000000ab                 
action_jcc
start fun: action_jcc(*addr=0x5656dc86, *transl_addr=0x3eca9283, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dd37)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98960, target: 0x5656dd37, origin: 0x3eca9285start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dc8c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98998, target: 0x5656dc8c, origin: 0x3eca928aend fun: -> close, transl_length=11
end fun: -> 0x3eca9259,   next_tu=0x5656dc8c (len: 53)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dc8c)
end fun: -> 0x00000000
ff = 165
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dc8c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9295start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656dc8c, *transl_address=0x3eca9295)
end fun:  
opcode escape found: 0fopcode escape found: 0fopcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSISopcode escape found: 0f: (orig=0x05656dc8c)0x0fb746fd                movzx 0xfd(%esi), %eax          
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05656dc90)0x0fb74afd                movzx 0xfd(%edx), %ecx          
leal-based check (opsize = 4)
: (orig=0x05656dc94)0x38c8                    cmp %ecx, %eax                  
opcode escape found: 0f: (orig=0x05656dc96)0x0f85af000000            jnz +0x000000af                 
action_jcc
start fun: action_jcc(*addr=0x5656dc96, *transl_addr=0x3eca92c1, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dd4b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec989d0, target: 0x5656dd4b, origin: 0x3eca92c3start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dc9c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98a08, target: 0x5656dc9c, origin: 0x3eca92c8end fun: -> close, transl_length=11
end fun: -> 0x3eca9295,   next_tu=0x5656dc9c (len: 55)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dc9c)
end fun: -> 0x00000000
ff = 166
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dc9c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca92d3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656dc9c, *transl_address=0x3eca92d3)
end fun:  
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05656dc9c)0x39c8                    cmp %ecx, %eax                  
opcode escape found: 0f: (orig=0x05656dc9e)0x0f85a7000000            jnz +0x000000a7                 
action_jcc
start fun: action_jcc(*addr=0x5656dc9e, *transl_addr=0x3eca92d5, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dd4b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98998, target: 0x5656dd4b, origin: 0x3eca92d7start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dca4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98a40, target: 0x5656dca4, origin: 0x3eca92dcend fun: -> close, transl_length=11
end fun: -> 0x3eca92d3,   next_tu=0x5656dca4 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dca4)
end fun: -> 0x00000000
ff = 167
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dca4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca92e7start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656dca4, *transl_address=0x3eca92e7)
end fun:  
opcode escape found: 0fopcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSISopcode escape found: 0f: (orig=0x05656dca4)0x0fb646ff                movzx 0xff(%esi), %eax          
leal-based check (opsize = 4)
: (orig=0x05656dca8)0x3a42ff                  cmp 0xff(%edx), %eax            
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x05656dcab)0x0f859a000000            jnz +0x0000009a                 
action_jcc
start fun: action_jcc(*addr=0x5656dcab, *transl_addr=0x3eca930f, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dd4b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98a08, target: 0x5656dd4b, origin: 0x3eca9311start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dcb1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98a78, target: 0x5656dcb1, origin: 0x3eca9316end fun: -> close, transl_length=11
end fun: -> 0x3eca92e7,   next_tu=0x5656dcb1 (len: 51)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dcb1)
end fun: -> 0x00000000
ff = 168
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dcb1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9321start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656dcb1, *transl_address=0x3eca9321)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISddadEND FLAG ANALYSIS: (orig=0x05656dcb1)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656dcb2)0x31c0                    xor %eax, %eax                  
: (orig=0x05656dcb4)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656dcb5)0xc3                      ret                             
start fun: action_ret(*addr=0x5656dcb5, *transl_addr=0x3eca9349, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca9321,   next_tu=0x5656dcb6 (len: 54)
ff = 169
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aadc)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca935estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aadc, *transl_address=0x3eca935e)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655aadc)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655aade)0x0f857c010000            jnz +0x0000017c                 
action_jcc
start fun: action_jcc(*addr=0x5655aade, *transl_addr=0x3eca9360, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac60)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98a78, target: 0x5655ac60, origin: 0x3eca9362start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aae4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98a40, target: 0x5655aae4, origin: 0x3eca9367end fun: -> close, transl_length=11
end fun: -> 0x3eca935e,   next_tu=0x5655aae4 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aae4)
end fun: -> 0x00000000
ff = 170
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aae4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9372start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aae4, *transl_address=0x3eca9372)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655aae4)0x8b55dc                  mov 0xdc(%ebp), %edx            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655aae7)0x837a1801                cmp $0x01, 0x18(%edx)           
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655aaeb)0x0f8594020000            jnz +0x00000294                 
action_jcc
start fun: action_jcc(*addr=0x5655aaeb, *transl_addr=0x3eca939b, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ad85)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ab0, target: 0x5655ad85, origin: 0x3eca939dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aaf1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ae8, target: 0x5655aaf1, origin: 0x3eca93a2end fun: -> close, transl_length=11
end fun: -> 0x3eca9372,   next_tu=0x5655aaf1 (len: 52)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aaf1)
end fun: -> 0x00000000
ff = 171
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aaf1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca93adstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aaf1, *transl_address=0x3eca93ad)
end fun:  
prefix found: 066opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISprefix found: 066opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655aaf1)0x66837a1603              cmp $0x03, 0x16(%dx)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655aaf6)0x0f852c010000            jnz +0x0000012c                 
action_jcc
start fun: action_jcc(*addr=0x5655aaf6, *transl_addr=0x3eca93c3, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac28)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98a40, target: 0x5655ac28, origin: 0x3eca93c5start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aafc)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98b20, target: 0x5655aafc, origin: 0x3eca93caend fun: -> close, transl_length=11
end fun: -> 0x3eca93ad,   next_tu=0x5655aafc (len: 33)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aafc)
end fun: -> 0x00000000
ff = 172
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aafc)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca93d5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655aafc, *transl_address=0x3eca93d5)
end fun:  
opcode escape found: 0fprefix found: 066opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSISopcode escape found: 0f: (orig=0x05655aafc)0x0fb74214                movzx 0x14(%edx), %eax          
leal-based check (opsize = 4)
prefix found: 066opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655ab00)0x6683f803                cmp $0x03, %ax                  
opcode escape found: 0f: (orig=0x05655ab04)0x0f85bf020000            jnz +0x000002bf                 
action_jcc
start fun: action_jcc(*addr=0x5655ab04, *transl_addr=0x3eca93ee, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655adc9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ae8, target: 0x5655adc9, origin: 0x3eca93f0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab0a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98b58, target: 0x5655ab0a, origin: 0x3eca93f5end fun: -> close, transl_length=11
end fun: -> 0x3eca93d5,   next_tu=0x5655ab0a (len: 36)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655adc9)
end fun: -> 0x00000000
ff = 173
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655adc9)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9400start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655adc9, *transl_address=0x3eca9400)
end fun:  
prefix found: 066opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISprefix found: 066opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655adc9)0x6683f802                cmp $0x02, %ax                  
opcode escape found: 0f: (orig=0x05655adcd)0x0f8437fdffff            jz +0xfffffd37                  
action_jcc
start fun: action_jcc(*addr=0x5655adcd, *transl_addr=0x3eca9404, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab0a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98b20, target: 0x5655ab0a, origin: 0x3eca9406start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655add3)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98b90, target: 0x5655add3, origin: 0x3eca940bend fun: -> close, transl_length=11
end fun: -> 0x3eca9400,   next_tu=0x5655add3 (len: 15)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab0a)
end fun: -> 0x00000000
ff = 174
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab0a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9416start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ab0a, *transl_address=0x3eca9416)
end fun:  
prefix found: 066opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655ab0a)0x8b55dc                  mov 0xdc(%ebp), %edx            
leal-based check (opsize = 4)
prefix found: 066opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655ab0d)0x66837a2e20              cmp $0x20, 0x2e(%dx)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655ab12)0x0f8543030000            jnz +0x00000343                 
action_jcc
start fun: action_jcc(*addr=0x5655ab12, *transl_addr=0x3eca9440, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ae5b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ae8, target: 0x5655ae5b, origin: 0x3eca9442start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab18)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98bc8, target: 0x5655ab18, origin: 0x3eca9447end fun: -> close, transl_length=11
end fun: -> 0x3eca9416,   next_tu=0x5655ab18 (len: 53)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab18)
end fun: -> 0x00000000
ff = 175
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab18)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9452start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ab18, *transl_address=0x3eca9452)
end fun:  
opcode escape found: 0fopcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 
... compares reg 6 with reg 1

BEGIN FLAG ANALYSISCAdadddEND FLAG ANALYSISopcode escape found: 0f: (orig=0x05655ab18)0x0fb74230                movzx 0x30(%edx), %eax          
leal-based check (opsize = 4)
: (orig=0x05655ab1c)0x8b5220                  mov 0x20(%edx), %edx            
leal-based check (opsize = 4)
: (orig=0x05655ab1f)0x89c7                    mov %eax, %edi                  
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655ab21)0xc1e705                  shl $0x05, %edi                 
: (orig=0x05655ab24)0x8d0c17                  lea (%edi, %edx), %ecx          
: (orig=0x05655ab27)0x39f1                    cmp %esi, %ecx                  
opcode escape found: 0f: (orig=0x05655ab29)0x0f8759010000            ja +0x00000159                  
action_jcc
start fun: action_jcc(*addr=0x5655ab29, *transl_addr=0x3eca9486, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac88)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98b20, target: 0x5655ac88, origin: 0x3eca9488start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab2f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98c00, target: 0x5655ab2f, origin: 0x3eca948dend fun: -> close, transl_length=11
end fun: -> 0x3eca9452,   next_tu=0x5655ab2f (len: 63)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab2f)
end fun: -> 0x00000000
ff = 176
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab2f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9498start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ab2f, *transl_address=0x3eca9498)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAadddEND FLAG ANALYSIS: (orig=0x05655ab2f)0x8b4ddc                  mov 0xdc(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655ab32)0x8d541104                lea 0x04(%ecx, %edx), %edx      
: (orig=0x05655ab36)0x8955e4                  mov %edx, 0xe4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655ab39)0x037de4                  add 0xe4(%ebp), %edi            
leal-based check (opsize = 4)
: (orig=0x05655ab3c)0x397de4                  cmp %edi, 0xe4(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655ab3f)0x0f83ff000000            jnc +0x000000ff                 
action_jcc
start fun: action_jcc(*addr=0x5655ab3f, *transl_addr=0x3eca94ed, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac44)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98bc8, target: 0x5655ac44, origin: 0x3eca94efstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab45)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98c38, target: 0x5655ab45, origin: 0x3eca94f4end fun: -> close, transl_length=11
end fun: -> 0x3eca9498,   next_tu=0x5655ab45 (len: 96)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab45)
end fun: -> 0x00000000
ff = 177
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab45)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca94ffstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ab45, *transl_address=0x3eca94ff)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05655ab45)0x8b75e4                  mov 0xe4(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05655ab48)0xeb19                    jmp +0x19                       
original_addr=05655ab48 / addr=05655ab48
start fun: action_jmp(*addr=0x5655ab48, *transl_addr=0x3eca9513, length=2)
action_jmp
original jmp_target: 0x5655ab63start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab63)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655ab63)0x833e04                  cmp $0x04, (%esi)               
leal-based check (opsize = 4)
: (orig=0x05655ab66)0x75e8                    jnz +0xe8                       
action_jcc
start fun: action_jcc(*addr=0x5655ab66, *transl_addr=0x3eca9526, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab50)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98c00, target: 0x5655ab50, origin: 0x3eca9528start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab68)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98c70, target: 0x5655ab68, origin: 0x3eca952dend fun: -> close, transl_length=11
end fun: -> 0x3eca94ff,   next_tu=0x5655ab68 (len: 50)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab50)
end fun: -> 0x00000000
ff = 178
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab50)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9538start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ab50, *transl_address=0x3eca9538)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 
... compares reg 2 with reg 6

BEGIN FLAG ANALYSISCAaaadEND FLAG ANALYSIS: (orig=0x05655ab50)0x89c2                    mov %eax, %edx                  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655ab52)0x83c620                  add $0x20, %esi                 
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655ab55)0xc1e205                  shl $0x05, %edx                 
: (orig=0x05655ab58)0x0355e4                  add 0xe4(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655ab5b)0x39d6                    cmp %edx, %esi                  
opcode escape found: 0f: (orig=0x05655ab5d)0x0f83e1000000            jnc +0x000000e1                 
action_jcc
start fun: action_jcc(*addr=0x5655ab5d, *transl_addr=0x3eca9556, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac44)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98c38, target: 0x5655ac44, origin: 0x3eca9558start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab63)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ca8, target: 0x5655ab63, origin: 0x3eca955dend fun: -> close, transl_length=11
end fun: -> 0x3eca9538,   next_tu=0x5655ab63 (len: 41)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab63)
end fun: -> 0x00000000
ff = 179
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab63)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9568start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ab63, *transl_address=0x3eca9568)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655ab63)0x833e04                  cmp $0x04, (%esi)               
leal-based check (opsize = 4)
: (orig=0x05655ab66)0x75e8                    jnz +0xe8                       
action_jcc
start fun: action_jcc(*addr=0x5655ab66, *transl_addr=0x3eca957b, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab50)
end fun: -> 0x3eca9538
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab68)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98c00, target: 0x5655ab68, origin: 0x3eca9582end fun: -> close, transl_length=11
end fun: -> 0x3eca9568,   next_tu=0x5655ab68 (len: 30)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab68)
end fun: -> 0x00000000
ff = 180
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab68)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca958dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ab68, *transl_address=0x3eca958d)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 01f with reg 7

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655ab68)0x8b7e10                  mov 0x10(%esi), %edi            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655ab6b)0x83ff1f                  cmp $0x1f, %edi                 
: (orig=0x05655ab6e)0x76e0                    jbe +0xe0                       
action_jcc
start fun: action_jcc(*addr=0x5655ab6e, *transl_addr=0x3eca95a4, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab50)
end fun: -> 0x3eca9538
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab70)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ca8, target: 0x5655ab70, origin: 0x3eca95abend fun: -> close, transl_length=11
end fun: -> 0x3eca958d,   next_tu=0x5655ab70 (len: 34)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab70)
end fun: -> 0x00000000
ff = 181
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab70)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca95b6start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ab70, *transl_address=0x3eca95b6)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655ab70)0x837e1c03                cmp $0x03, 0x1c(%esi)           
leal-based check (opsize = 4)
: (orig=0x05655ab74)0x76da                    jbe +0xda                       
action_jcc
start fun: action_jcc(*addr=0x5655ab74, *transl_addr=0x3eca95cb, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab50)
end fun: -> 0x3eca9538
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab76)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98c00, target: 0x5655ab76, origin: 0x3eca95d2end fun: -> close, transl_length=11
end fun: -> 0x3eca95b6,   next_tu=0x5655ab76 (len: 32)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab76)
end fun: -> 0x00000000
ff = 182
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab76)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca95ddstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ab76, *transl_address=0x3eca95dd)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdddEND FLAG ANALYSIS: (orig=0x05655ab76)0x8b4604                  mov 0x04(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655ab79)0x8b4ddc                  mov 0xdc(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655ab7c)0x8d1438                  lea (%eax, %edi), %edx          
: (orig=0x05655ab7f)0x3b11                    cmp (%ecx), %edx                
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655ab81)0x0f8789010000            ja +0x00000189                  
action_jcc
start fun: action_jcc(*addr=0x5655ab81, *transl_addr=0x3eca961b, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ad10)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ca8, target: 0x5655ad10, origin: 0x3eca961dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab87)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ce0, target: 0x5655ab87, origin: 0x3eca9622end fun: -> close, transl_length=11
end fun: -> 0x3eca95dd,   next_tu=0x5655ab87 (len: 73)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab87)
end fun: -> 0x00000000
ff = 183
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ab87)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca962dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ab87, *transl_address=0x3eca962d)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 01 with reg 1

BEGIN FLAG ANALYSISCAdddddddddddddddEND FLAG ANALYSIS: (orig=0x05655ab87)0x8d540104                lea 0x04(%ecx, %eax), %edx      
: (orig=0x05655ab8b)0x8d8b0c85ffff            lea 0xffff850c(%ebx), %ecx      
: (orig=0x05655ab91)0x8975cc                  mov %esi, 0xcc(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655ab94)0x89d6                    mov %edx, %esi                  
: (orig=0x05655ab96)0x894dd8                  mov %ecx, 0xd8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655ab99)0xeb29                    jmp +0x29                       
original_addr=05655ab99 / addr=05655ab99
start fun: action_jmp(*addr=0x5655ab99, *transl_addr=0x3eca9663, length=2)
action_jmp
original jmp_target: 0x5655abc4start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655abc4)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655abc4)0x8b4dd8                  mov 0xd8(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655abc7)0xc744240810000000        mov $0x00000010, 0x08(%esp)     
leal-based check (opsize = 4)
: (orig=0x05655abcf)0x893424                  mov %esi, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655abd2)0x894c2404                mov %ecx, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655abd6)0xe8a52e0100              call +0x00012ea5                
action_call
start fun: action_call(*addr=0x5655abd6, *transl_addr=0x3eca96bb, length=5)
original call_target: 0x5656da80return_address = 05655abdb
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656da80)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656da80)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656da81)0x8b442408                mov 0x08(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656da85)0x8b54240c                mov 0x0c(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656da89)0x8b4c2410                mov 0x10(%esp), %ecx            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05656da8d)0x83f901                  cmp $0x01, %ecx                 
: (orig=0x05656da90)0x7512                    jnz +0x12                       
action_jcc
start fun: action_jcc(*addr=0x5656da90, *transl_addr=0x3eca9720, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656daa4)
end fun: -> 0x3eca8fc4
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656da92)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98c00, target: 0x5656da92, origin: 0x3eca9727end fun: -> close, transl_length=11
end fun: -> 0x3eca962d,   next_tu=0x5656da92 (len: 254)
ff = 184
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dafa)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9732start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656dafa, *transl_address=0x3eca9732)
end fun:  
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05656dafa)0x8b46f0                  mov 0xf0(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05656dafd)0x8b4af0                  mov 0xf0(%edx), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656db00)0x39c8                    cmp %ecx, %eax                  
opcode escape found: 0f: (orig=0x05656db02)0x0f852f020000            jnz +0x0000022f                 
action_jcc
start fun: action_jcc(*addr=0x5656db02, *transl_addr=0x3eca975c, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dd37)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ce0, target: 0x5656dd37, origin: 0x3eca975estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656db08)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98d18, target: 0x5656db08, origin: 0x3eca9763end fun: -> close, transl_length=11
end fun: -> 0x3eca9732,   next_tu=0x5656db08 (len: 53)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656db08)
end fun: -> 0x00000000
ff = 185
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656db08)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca976estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656db08, *transl_address=0x3eca976e)
end fun:  
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05656db08)0x8b46f4                  mov 0xf4(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05656db0b)0x8b4af4                  mov 0xf4(%edx), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656db0e)0x39c8                    cmp %ecx, %eax                  
opcode escape found: 0f: (orig=0x05656db10)0x0f8521020000            jnz +0x00000221                 
action_jcc
start fun: action_jcc(*addr=0x5656db10, *transl_addr=0x3eca9798, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dd37)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98d50, target: 0x5656dd37, origin: 0x3eca979astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656db16)
end fun: -> 0x3eca907a
end fun: -> close, transl_length=11
end fun: -> 0x3eca976e,   next_tu=0x5656db16 (len: 53)
ff = 186
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655abdb)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca97aastart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655abdb, *transl_address=0x3eca97aa)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655abdb)0x85c0                    test %eax, %eax                 
: (orig=0x05655abdd)0x75c1                    jnz +0xc1                       
action_jcc
start fun: action_jcc(*addr=0x5655abdd, *transl_addr=0x3eca97ac, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655aba0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98d18, target: 0x5655aba0, origin: 0x3eca97aestart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655abdf)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98d88, target: 0x5655abdf, origin: 0x3eca97b3end fun: -> close, transl_length=11
end fun: -> 0x3eca97aa,   next_tu=0x5655abdf (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655abdf)
end fun: -> 0x00000000
ff = 187
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655abdf)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca97bestart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655abdf, *transl_address=0x3eca97be)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 7 with reg 7

BEGIN FLAG ANALYSISAddaEND FLAG ANALYSIS: (orig=0x05655abdf)0x85ff                    test %edi, %edi                 
PATCHING TST REG REG
: (orig=0x05655abe1)0x89f2                    mov %esi, %edx                  
: (orig=0x05655abe3)0x8b75cc                  mov 0xcc(%ebp), %esi            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655abe6)0x0f848d010000            jz +0x0000018d                  
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655abe6, *transl_addr=0x3eca97df, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ad79)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98dc0, target: 0x5655ad79, origin: 0x3eca97e1start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655abec)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98df8, target: 0x5655abec, origin: 0x3eca97e6end fun: -> close, transl_length=11
end fun: -> 0x3eca97be,   next_tu=0x5655abec (len: 44)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655abec)
end fun: -> 0x00000000
ff = 188
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655abec)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca97f1start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655abec, *transl_address=0x3eca97f1)
end fun:  


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAddddEND FLAG ANALYSIS: (orig=0x05655abec)0x8b7214                  mov 0x14(%edx), %esi            
leal-based check (opsize = 4)
: (orig=0x05655abef)0x8b4a18                  mov 0x18(%edx), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655abf2)0x8b421c                  mov 0x1c(%edx), %eax            
leal-based check (opsize = 4)
: (orig=0x05655abf5)0x8b5210                  mov 0x10(%edx), %edx            
leal-based check (opsize = 4)
: (orig=0x05655abf8)0x85d2                    test %edx, %edx                 
: (orig=0x05655abfa)0x752c                    jnz +0x2c                       
action_jcc
start fun: action_jcc(*addr=0x5655abfa, *transl_addr=0x3eca9843, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac28)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98d88, target: 0x5655ac28, origin: 0x3eca9845start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655abfc)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98e30, target: 0x5655abfc, origin: 0x3eca984aend fun: -> close, transl_length=11
end fun: -> 0x3eca97f1,   next_tu=0x5655abfc (len: 93)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655abfc)
end fun: -> 0x00000000
ff = 189
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655abfc)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9855start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655abfc, *transl_address=0x3eca9855)
end fun:  


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655abfc)0x8b93b0fcffff            mov 0xfffffcb0(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x05655ac02)0x85d2                    test %edx, %edx                 
: (orig=0x05655ac04)0x743e                    jz +0x3e                        
action_jcc
start fun: action_jcc(*addr=0x5655ac04, *transl_addr=0x3eca9871, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac44)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98df8, target: 0x5655ac44, origin: 0x3eca9873start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac06)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98e68, target: 0x5655ac06, origin: 0x3eca9878end fun: -> close, transl_length=11
end fun: -> 0x3eca9855,   next_tu=0x5655ac06 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac44)
end fun: -> 0x00000000
ff = 190
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ac44)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9883start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ac44, *transl_address=0x3eca9883)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddddddEND FLAG ANALYSIS: (orig=0x05655ac44)0x8b45e0                  mov 0xe0(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x05655ac47)0x8d65f4                  lea 0xf4(%ebp), %esp            
: (orig=0x05655ac4a)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655ac4b)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655ac4c)0x5f                      pop %edi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655ac4d)0x5d                      pop %ebp                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655ac4e)0xc3                      ret                             
start fun: action_ret(*addr=0x5655ac4e, *transl_addr=0x3eca98e7, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca9883,   next_tu=0x5655ac4f (len: 114)
ff = 191
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d40b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca98fcstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d40b, *transl_address=0x3eca98fc)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 0ffffffff with reg 0

BEGIN FLAG ANALYSISCDAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655d40b)0x83f8ff                  cmp $0xff, %eax                 
: (orig=0x05655d40e)0x89c2                    mov %eax, %edx                  
opcode escape found: 0f: (orig=0x05655d410)0x0f84ad070000            jz +0x000007ad                  
action_jcc
start fun: action_jcc(*addr=0x5655d410, *transl_addr=0x3eca9901, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655dbc3)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98df8, target: 0x5655dbc3, origin: 0x3eca9903start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d416)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98e30, target: 0x5655d416, origin: 0x3eca9908end fun: -> close, transl_length=11
end fun: -> 0x3eca98fc,   next_tu=0x5655d416 (len: 16)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d416)
end fun: -> 0x00000000
ff = 192
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d416)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9913start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d416, *transl_address=0x3eca9913)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAcDAdEND FLAG ANALYSIS: (orig=0x05655d416)0x8b442438                mov 0x38(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05655d41a)0x85c0                    test %eax, %eax                 
: (orig=0x05655d41c)0xb800000000              mov $0x00000000, %eax           
opcode escape found: 0f: (orig=0x05655d421)0x0f45e8                  cmovnz %eax, %ebp               
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655d424)0x83faff                  cmp $0xff, %edx                 
opcode escape found: 0f: (orig=0x05655d427)0x0f84e6050000            jz +0x000005e6                  
action_jcc
start fun: action_jcc(*addr=0x5655d427, *transl_addr=0x3eca9936, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655da13)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ea0, target: 0x5655da13, origin: 0x3eca9938start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d42d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ed8, target: 0x5655d42d, origin: 0x3eca993dend fun: -> close, transl_length=11
end fun: -> 0x3eca9913,   next_tu=0x5655d42d (len: 46)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d42d)
end fun: -> 0x00000000
ff = 193
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d42d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9948start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d42d, *transl_address=0x3eca9948)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddddddddddddddddddddddddEND FLAG ANALYSIS: (orig=0x05655d42d)0x8b8c2488020000          mov 0x00000288(%esp), %ecx      
leal-based check (opsize = 4)
: (orig=0x05655d434)0x8b831cffffff            mov 0xffffff1c(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05655d43a)0x896c2408                mov %ebp, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655d43e)0x894c2418                mov %ecx, 0x18(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655d442)0x8b8c2484020000          mov 0x00000284(%esp), %ecx      
leal-based check (opsize = 4)
: (orig=0x05655d449)0x89842458020000          mov %eax, 0x00000258(%esp)      
leal-based check (opsize = 4)
: (orig=0x05655d450)0x8d842458020000          lea 0x00000258(%esp), %eax      
: (orig=0x05655d457)0x89442414                mov %eax, 0x14(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655d45b)0x8b842454020000          mov 0x00000254(%esp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655d462)0x894c2410                mov %ecx, 0x10(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655d466)0x8b4c2430                mov 0x30(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655d46a)0x89442404                mov %eax, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655d46e)0x8d442450                lea 0x50(%esp), %eax            
: (orig=0x05655d472)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655d475)0x89f0                    mov %esi, %eax                  
: (orig=0x05655d477)0x894c240c                mov %ecx, 0x0c(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655d47b)0xe820dfffff              call +0xffffdf20                
action_call
start fun: action_call(*addr=0x5655d47b, *transl_addr=0x3eca9a8f, length=5)
original call_target: 0x5655b3a0return_address = 05655d480
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b3a0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05655b3a0)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05655b3a1)0x89e5                    mov %esp, %ebp                  
: (orig=0x05655b3a3)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05655b3a4)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05655b3a5)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05655b3a6)0xe8a02c0100              call +0x00012ca0                
action_call
start fun: action_call(*addr=0x5655b3a6, *transl_addr=0x3eca9aea, length=5)
original call_target: 0x5656e04breturn_address = 05655b3ab
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca9b0b, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca9948,   next_tu=0x5656e04f (len: 465)
ff = 194
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b3ab)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9b20start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b3ab, *transl_address=0x3eca9b20)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISdddddadadddaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05655b3ab)0x81c349ac0100            add $0x0001ac49, %ebx           
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
: (orig=0x05655b3b1)0x81ec1c010000            sub $0x0000011c, %esp           
: (orig=0x05655b3b7)0x89954cffffff            mov %edx, 0xffffff4c(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b3bd)0x8b5520                  mov 0x20(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655b3c0)0x898534ffffff            mov %eax, 0xffffff34(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b3c6)0x31c0                    xor %eax, %eax                  
: (orig=0x05655b3c8)0xe883960000              call +0x00009683                
action_call
start fun: action_call(*addr=0x5655b3c8, *transl_addr=0x3eca9b76, length=5)
original call_target: 0x56564a50return_address = 05655b3cd
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a50)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056564a50)0x83ec0c                  sub $0x0c, %esp                 
: (orig=0x056564a53)0x89c1                    mov %eax, %ecx                  
: (orig=0x056564a55)0x891c24                  mov %ebx, (%esp)                
leal-based check (opsize = 4)
: (orig=0x056564a58)0xe8ee950000              call +0x000095ee                
action_call
start fun: action_call(*addr=0x56564a58, *transl_addr=0x3eca9b9c, length=5)
original call_target: 0x5656e04breturn_address = 056564a5d
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca9bbd, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca9b20,   next_tu=0x5656e04f (len: 171)
ff = 195
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a5d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9bd2start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56564a5d, *transl_address=0x3eca9bd2)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISAddddaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x056564a5d)0x81c397150100            add $0x00011597, %ebx           
: (orig=0x056564a63)0x85d2                    test %edx, %edx                 
PATCHING TST REG REG
: (orig=0x056564a65)0x897c2408                mov %edi, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x056564a69)0x89d7                    mov %edx, %edi                  
: (orig=0x056564a6b)0x89742404                mov %esi, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x056564a6f)0x8b83e4ffffff            mov 0xffffffe4(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056564a75)0x740a                    jz +0x0a                        
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x56564a75, *transl_addr=0x3eca9c2b, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a81)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ed8, target: 0x56564a81, origin: 0x3eca9c2dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a77)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98e30, target: 0x56564a77, origin: 0x3eca9c32end fun: -> close, transl_length=11
end fun: -> 0x3eca9bd2,   next_tu=0x56564a77 (len: 100)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a81)
end fun: -> 0x00000000
ff = 196
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a81)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9c3dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56564a81, *transl_address=0x3eca9c3d)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCDCAEND FLAG ANALYSIS: (orig=0x056564a81)0x85c9                    test %ecx, %ecx                 
opcode escape found: 0f: (orig=0x056564a83)0x0f95c2                  setnz %edx                      
: (orig=0x056564a86)0x89d6                    mov %edx, %esi                  
: (orig=0x056564a88)0x7446                    jz +0x46                        
action_jcc
start fun: action_jcc(*addr=0x56564a88, *transl_addr=0x3eca9c44, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564ad0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98f10, target: 0x56564ad0, origin: 0x3eca9c46start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a8a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98f48, target: 0x56564a8a, origin: 0x3eca9c4bend fun: -> close, transl_length=11
end fun: -> 0x3eca9c3d,   next_tu=0x56564a8a (len: 18)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564ad0)
end fun: -> 0x00000000
ff = 197
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564ad0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9c56start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56564ad0, *transl_address=0x3eca9c56)
end fun:  


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056564ad0)0x8b5004                  mov 0x04(%eax), %edx            
leal-based check (opsize = 4)
: (orig=0x056564ad3)0x85d2                    test %edx, %edx                 
: (orig=0x056564ad5)0x74b3                    jz +0xb3                        
action_jcc
start fun: action_jcc(*addr=0x56564ad5, *transl_addr=0x3eca9c6c, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a8a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ed8, target: 0x56564a8a, origin: 0x3eca9c6estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564ad7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98f80, target: 0x56564ad7, origin: 0x3eca9c73end fun: -> close, transl_length=11
end fun: -> 0x3eca9c56,   next_tu=0x56564ad7 (len: 33)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a8a)
end fun: -> 0x00000000
ff = 198
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a8a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9c7estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56564a8a, *transl_address=0x3eca9c7e)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCD1.dEND FLAG ANALYSIS: (orig=0x056564a8a)0x89f2                    mov %esi, %edx                  
: (orig=0x056564a8c)0x84d2                    test %edx, %edx                 
: (orig=0x056564a8e)0xc70001000000            mov $0x00000001, (%eax)         
SAV
leal-based check (opsize = 4)
RST
: (orig=0x056564a94)0x742a                    jz +0x2a                        
action_jcc
start fun: action_jcc(*addr=0x56564a94, *transl_addr=0x3eca9cc5, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564ac0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98f10, target: 0x56564ac0, origin: 0x3eca9cc7start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a96)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98fb8, target: 0x56564a96, origin: 0x3eca9cccend fun: -> close, transl_length=11
end fun: -> 0x3eca9c7e,   next_tu=0x56564a96 (len: 82)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564ac0)
end fun: -> 0x00000000
ff = 199
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564ac0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9cd7start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56564ac0, *transl_address=0x3eca9cd7)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISdaddddddddadddEND FLAG ANALYSIS: (orig=0x056564ac0)0x8b8be4ffffff            mov 0xffffffe4(%ebx), %ecx      
leal-based check (opsize = 4)
: (orig=0x056564ac6)0x8b4910                  mov 0x10(%ecx), %ecx            
leal-based check (opsize = 4)
: (orig=0x056564ac9)0xebcb                    jmp +0xcb                       
original_addr=056564ac9 / addr=056564ac9
start fun: action_jmp(*addr=0x56564ac9, *transl_addr=0x3eca9d05, length=2)
action_jmp
original jmp_target: 0x56564a96start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a96)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x056564a96)0x6bd74c                  imul %edi, $0x4c, %edx          
: (orig=0x056564a99)0x8b742404                mov 0x04(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x056564a9d)0x894810                  mov %ecx, 0x10(%eax)            
leal-based check (opsize = 4)
: (orig=0x056564aa0)0x8b7c2408                mov 0x08(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x056564aa4)0x8b94132c000000          mov 0x0000002c(%ebx, %edx), %edx 
leal-based check (opsize = 4)
: (orig=0x056564aab)0x895004                  mov %edx, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x056564aae)0x8d934ceafeff            lea 0xfffeea4c(%ebx), %edx      
: (orig=0x056564ab4)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x056564ab7)0x895008                  mov %edx, 0x08(%eax)            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056564aba)0x83c40c                  add $0x0c, %esp                 
: (orig=0x056564abd)0xc3                      ret                             
start fun: action_ret(*addr=0x56564abd, *transl_addr=0x3eca9daa, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca9cd7,   next_tu=0x56564abe (len: 225)
ff = 200
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b3cd)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9dbfstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b3cd, *transl_address=0x3eca9dbf)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISddddddddddddEND FLAG ANALYSIS: (orig=0x05655b3cd)0x898548ffffff            mov %eax, 0xffffff48(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b3d3)0x8d8578ffffff            lea 0xffffff78(%ebp), %eax      
: (orig=0x05655b3d9)0x89442408                mov %eax, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655b3dd)0x8b954cffffff            mov 0xffffff4c(%ebp), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b3e3)0xc7042403000000          mov $0x00000003, (%esp)         
leal-based check (opsize = 4)
: (orig=0x05655b3ea)0x89542404                mov %edx, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655b3ee)0xe89d1b0100              call +0x00011b9d                
action_call
start fun: action_call(*addr=0x5655b3ee, *transl_addr=0x3eca9e3e, length=5)
original call_target: 0x5656cf90return_address = 05655b3f3
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656cf90)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656cf90)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656cf91)0x8b4c2410                mov 0x10(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656cf95)0xe8b1100000              call +0x000010b1                
action_call
start fun: action_call(*addr=0x5656cf95, *transl_addr=0x3eca9e74, length=5)
original call_target: 0x5656e04breturn_address = 05656cf9a
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3eca9e95, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca9dbf,   next_tu=0x5656e04f (len: 228)
ff = 201
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656cf9a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9eaastart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656cf9a, *transl_address=0x3eca9eaa)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 

BEGIN FLAG ANALYSISBDDD1.END FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656cf9a)0x81c35a900000            add $0x0000905a, %ebx           
: (orig=0x05656cfa0)0x8b54240c                mov 0x0c(%esp), %edx            
SAV
leal-based check (opsize = 4)
RST
: (orig=0x05656cfa4)0x87d3                    xchg %edx, %ebx                 
: (orig=0x05656cfa6)0xb8c5000000              mov $0x000000c5, %eax           
: (orig=0x05656cfab)0xcd80                    int $0x80                       
closing TU upon request, invoking translation function on 0x5656cfadallocated trampoline: 0x3ec98f10, target: 0x5656cfad, origin: 0x3eca9f2bend fun: -> 0x3eca9eaa,   next_tu=0x5656cfad (len: 121)
(L)STAT64 sysnr=197 (04, 0afffeef8)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656cfad)
end fun: -> 0x00000000
ff = 202
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656cfad)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9f2fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656cfad, *transl_address=0x3eca9f2f)
end fun:  


 opt flags pass 
... cmp imm 0fffff000 with eax

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656cfad)0x87d3                    xchg %edx, %ebx                 
: (orig=0x05656cfaf)0x3d00f0ffff              cmp $0xfffff000, %eax           
: (orig=0x05656cfb4)0x7702                    ja +0x02                        
action_jcc
start fun: action_jcc(*addr=0x5656cfb4, *transl_addr=0x3eca9f36, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656cfb8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ed8, target: 0x5656cfb8, origin: 0x3eca9f38start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656cfb6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ff0, target: 0x5656cfb6, origin: 0x3eca9f3dend fun: -> close, transl_length=11
end fun: -> 0x3eca9f2f,   next_tu=0x5656cfb6 (len: 18)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656cfb6)
end fun: -> 0x00000000
ff = 203
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656cfb6)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9f48start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656cfb6, *transl_address=0x3eca9f48)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISddEND FLAG ANALYSIS: (orig=0x05656cfb6)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656cfb7)0xc3                      ret                             
start fun: action_ret(*addr=0x5656cfb7, *transl_addr=0x3eca9f5b, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3eca9f48,   next_tu=0x5656cfb8 (len: 33)
ff = 204
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b3f3)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9f70start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b3f3, *transl_address=0x3eca9f70)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655b3f3)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655b3f5)0x0f8870100000            js +0x00001070                  
action_jcc
start fun: action_jcc(*addr=0x5655b3f5, *transl_addr=0x3eca9f72, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c46b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98ff0, target: 0x5655c46b, origin: 0x3eca9f74start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b3fb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98f10, target: 0x5655b3fb, origin: 0x3eca9f79end fun: -> close, transl_length=11
end fun: -> 0x3eca9f70,   next_tu=0x5655b3fb (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b3fb)
end fun: -> 0x00000000
ff = 205
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b3fb)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9f84start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b3fb, *transl_address=0x3eca9f84)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 7 with reg 7

BEGIN FLAG ANALYSISCAdddaEND FLAG ANALYSIS: (orig=0x05655b3fb)0x6b45204c                imul 0x20(%ebp), $0x4c, %eax    
leal-based check (opsize = 4)
: (orig=0x05655b3ff)0x8d932c000000            lea 0x0000002c(%ebx), %edx      
: (orig=0x05655b405)0x899530ffffff            mov %edx, 0xffffff30(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b40b)0x8bbc182c000000          mov 0x0000002c(%eax, %ebx), %edi 
leal-based check (opsize = 4)
: (orig=0x05655b412)0x85ff                    test %edi, %edi                 
opcode escape found: 0f: (orig=0x05655b414)0x0f8496000000            jz +0x00000096                  
action_jcc
start fun: action_jcc(*addr=0x5655b414, *transl_addr=0x3eca9fd8, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4b0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99028, target: 0x5655b4b0, origin: 0x3eca9fdastart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b41a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99060, target: 0x5655b41a, origin: 0x3eca9fdfend fun: -> close, transl_length=11
end fun: -> 0x3eca9f84,   next_tu=0x5655b41a (len: 95)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4b0)
end fun: -> 0x00000000
ff = 206
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4b0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3eca9feastart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b4b0, *transl_address=0x3eca9fea)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655b4b0)0x8b4d20                  mov 0x20(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655b4b3)0x85c9                    test %ecx, %ecx                 
opcode escape found: 0f: (orig=0x05655b4b5)0x0f85500d0000            jnz +0x00000d50                 
action_jcc
start fun: action_jcc(*addr=0x5655b4b5, *transl_addr=0x3ecaa000, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c20b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98f10, target: 0x5655c20b, origin: 0x3ecaa002start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4bb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99098, target: 0x5655b4bb, origin: 0x3ecaa007end fun: -> close, transl_length=11
end fun: -> 0x3eca9fea,   next_tu=0x5655b4bb (len: 33)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4bb)
end fun: -> 0x00000000
ff = 207
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4bb)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa012start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b4bb, *transl_address=0x3ecaa012)
end fun:  
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
: (orig=0x05655b4bb)0xf6451804                test $0x04, 0x18(%ebp)          
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x05655b4bf)0x0f85730a0000            jnz +0x00000a73                 
action_jcc
start fun: action_jcc(*addr=0x5655b4bf, *transl_addr=0x3ecaa026, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bf38)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99028, target: 0x5655bf38, origin: 0x3ecaa028start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4c5)
end fun: -> 0x00000000
allocated trampoline: 0x3ec990d0, target: 0x5655b4c5, origin: 0x3ecaa02dend fun: -> close, transl_length=11
end fun: -> 0x3ecaa012,   next_tu=0x5655b4c5 (len: 31)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4c5)
end fun: -> 0x00000000
ff = 208
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4c5)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa038start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b4c5, *transl_address=0x3ecaa038)
end fun:  
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
: (orig=0x05655b4c5)0xf683acfcffff40          test $0x40, 0xfffffcac(%ebx)    
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x05655b4cc)0x0f851a100000            jnz +0x0000101a                 
action_jcc
start fun: action_jcc(*addr=0x5655b4cc, *transl_addr=0x3ecaa052, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c4ec)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99098, target: 0x5655c4ec, origin: 0x3ecaa054start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4d2)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99108, target: 0x5655b4d2, origin: 0x3ecaa059end fun: -> close, transl_length=11
end fun: -> 0x3ecaa038,   next_tu=0x5655b4d2 (len: 37)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4d2)
end fun: -> 0x00000000
ff = 209
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4d2)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa064start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b4d2, *transl_address=0x3ecaa064)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05655b4d2)0x8b9548ffffff            mov 0xffffff48(%ebp), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b4d8)0x8b420c                  mov 0x0c(%edx), %eax            
leal-based check (opsize = 4)
: (orig=0x05655b4db)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655b4dd)0x0f84d5010000            jz +0x000001d5                  
action_jcc
start fun: action_jcc(*addr=0x5655b4dd, *transl_addr=0x3ecaa094, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6b8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec990d0, target: 0x5655b6b8, origin: 0x3ecaa096start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4e3)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99140, target: 0x5655b4e3, origin: 0x3ecaa09bend fun: -> close, transl_length=11
end fun: -> 0x3ecaa064,   next_tu=0x5655b4e3 (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6b8)
end fun: -> 0x00000000
ff = 210
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6b8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa0a6start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b6b8, *transl_address=0x3ecaa0a6)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x00217040)


 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00245198 -> 0x00217040 (0x00217040)
: (orig=0x05655b6b8)0xf7451800000008          test $0x08000000, 0x18(%ebp)    
leal-based check (opsize = 4)
: (orig=0x05655b6bf)0x750e                    jnz +0x0e                       
action_jcc
start fun: action_jcc(*addr=0x5655b6bf, *transl_addr=0x3ecaa0be, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6cf)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99108, target: 0x5655b6cf, origin: 0x3ecaa0c0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6c1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99178, target: 0x5655b6c1, origin: 0x3ecaa0c5end fun: -> close, transl_length=11
end fun: -> 0x3ecaa0a6,   next_tu=0x5655b6c1 (len: 35)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6c1)
end fun: -> 0x00000000
ff = 211
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6c1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa0d0start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b6c1, *transl_address=0x3ecaa0d0)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655b6c1)0x8b9368feffff            mov 0xfffffe68(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b6c7)0x85d2                    test %edx, %edx                 
opcode escape found: 0f: (orig=0x05655b6c9)0x0f858b0c0000            jnz +0x00000c8b                 
action_jcc
start fun: action_jcc(*addr=0x5655b6c9, *transl_addr=0x3ecaa0ec, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c35a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec990d0, target: 0x5655c35a, origin: 0x3ecaa0eestart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6cf)
end fun: -> 0x00000000
allocated trampoline: 0x3ec991b0, target: 0x5655b6cf, origin: 0x3ecaa0f3end fun: -> close, transl_length=11
end fun: -> 0x3ecaa0d0,   next_tu=0x5655b6cf (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6cf)
end fun: -> 0x00000000
ff = 212
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6cf)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa0festart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b6cf, *transl_address=0x3ecaa0fe)
end fun:  
prefix found: 0f3

 opt flags pass 

BEGIN FLAG ANALYSISddddEND FLAG ANALYSIS: (orig=0x05655b6cf)0x8b8548ffffff            mov 0xffffff48(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b6d5)0xc7400c01000000          mov $0x00000001, 0x0c(%eax)     
leal-based check (opsize = 4)
: (orig=0x05655b6dc)0xe85f930000              call +0x0000935f                
action_call
start fun: action_call(*addr=0x5655b6dc, *transl_addr=0x3ecaa130, length=5)
original call_target: 0x56564a40return_address = 05655b6e1
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a40)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
prefix found: 0f3: (orig=0x056564a40)0xf3c3                    ret                             
start fun: action_ret(*addr=0x56564a40, *transl_addr=0x3ecaa13d, length=2)
Useless REPZ Prefix found (and removed) in RET (ugly gcc hack for Athlon and K8)end fun: -> close, transl_length=14
end fun: -> 0x3ecaa0fe,   next_tu=0x56564a42 (len: 77)
ff = 213
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6e1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa152start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b6e1, *transl_address=0x3ecaa152)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddddddddddddddddddEND FLAG ANALYSIS: (orig=0x05655b6e1)0xc6852dffffff01          mov $0x01, 0xffffff2d(%ebp)     
leal-based check (opsize = 1)
: (orig=0x05655b6e8)0xe906feffff              jmp +0xfffffe06                 
original_addr=05655b6e8 / addr=05655b6e8
start fun: action_jmp(*addr=0x5655b6e8, *transl_addr=0x3ecaa16c, length=5)
action_jmp
jump_target = 0fffffe06 + 05655b6e8 + 05original jmp_target: 0x5655b4f3start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b4f3)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655b4f3)0x8b5520                  mov 0x20(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655b4f6)0x89542408                mov %edx, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655b4fa)0x8b4d18                  mov 0x18(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655b4fd)0x894c2404                mov %ecx, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655b501)0x8b4d10                  mov 0x10(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655b504)0x890c24                  mov %ecx, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655b507)0x8b4d14                  mov 0x14(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655b50a)0x8b9534ffffff            mov 0xffffff34(%ebp), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b510)0x8b450c                  mov 0x0c(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x05655b513)0xe878490000              call +0x00004978                
action_call
start fun: action_call(*addr=0x5655b513, *transl_addr=0x3ecaa22a, length=5)
original call_target: 0x5655fe90return_address = 05655b518
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fe90)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05655fe90)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05655fe91)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05655fe92)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05655fe93)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05655fe94)0xe8b2e10000              call +0x0000e1b2                
action_call
start fun: action_call(*addr=0x5655fe94, *transl_addr=0x3ecaa283, length=5)
original call_target: 0x5656e04breturn_address = 05655fe99
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecaa2a4, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecaa152,   next_tu=0x5656e04f (len: 352)
ff = 214
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fe99)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa2b9start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655fe99, *transl_address=0x3ecaa2b9)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISCAddddddddaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05655fe99)0x81c35b610100            add $0x0001615b, %ebx           
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655fe9f)0x83ec3c                  sub $0x3c, %esp                 
: (orig=0x05655fea2)0x891424                  mov %edx, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655fea5)0x8b7c2450                mov 0x50(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x05655fea9)0x894c242c                mov %ecx, 0x2c(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fead)0x89442424                mov %eax, 0x24(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655feb1)0x89542420                mov %edx, 0x20(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655feb5)0xe8c6d80000              call +0x0000d8c6                
action_call
start fun: action_call(*addr=0x5655feb5, *transl_addr=0x3ecaa32e, length=5)
original call_target: 0x5656d780return_address = 05655feba
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d780)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d780)0x8b442404                mov 0x04(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656d784)0xba03000000              mov $0x00000003, %edx           
: (orig=0x05656d789)0x21c2                    and %eax, %edx                  
: (orig=0x05656d78b)0x7424                    jz +0x24                        
action_jcc
start fun: action_jcc(*addr=0x5656d78b, *transl_addr=0x3ecaa358, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7b1)
end fun: -> 0x3eca8357
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d78d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec991b0, target: 0x5656d78d, origin: 0x3ecaa35fend fun: -> close, transl_length=11
end fun: -> 0x3ecaa2b9,   next_tu=0x5656d78d (len: 170)
ff = 215
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655feba)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa36astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655feba, *transl_address=0x3ecaa36a)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 5 with reg 5

BEGIN FLAG ANALYSISCDAdEND FLAG ANALYSIS: (orig=0x05655feba)0x8bab68feffff            mov 0xfffffe68(%ebx), %ebp      
leal-based check (opsize = 4)
: (orig=0x05655fec0)0x85ed                    test %ebp, %ebp                 
: (orig=0x05655fec2)0x89c1                    mov %eax, %ecx                  
opcode escape found: 0f: (orig=0x05655fec4)0x0f84f6010000            jz +0x000001f6                  
action_jcc
start fun: action_jcc(*addr=0x5655fec4, *transl_addr=0x3ecaa388, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565600c0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99178, target: 0x565600c0, origin: 0x3ecaa38astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655feca)
end fun: -> 0x00000000
allocated trampoline: 0x3ec991e8, target: 0x5655feca, origin: 0x3ecaa38fend fun: -> close, transl_length=11
end fun: -> 0x3ecaa36a,   next_tu=0x5655feca (len: 41)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565600c0)
end fun: -> 0x00000000
ff = 216
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565600c0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa39astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565600c0, *transl_address=0x3ecaa39a)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode table: 0x00245198 -> 0x00217040 (0x00217090)
opcode table: 0x00243f28 -> 0x002163c0 (0x00216460)
opcode escape found: 0fopcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 
... cmp imm8 01 with reg 0
... tests reg 0 with reg 0

BEGIN FLAG ANALYSIS4.4.4.4.4.4.4.4.3.DAadfaAadEND FLAG ANALYSIS: (orig=0x0565600c0)0x8b442454                mov 0x54(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x0565600c4)0x2500000020              and $0x20000000, %eax           
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x0565600c9)0x83f801                  cmp $0x01, %eax                 
: (orig=0x0565600cc)0x19d2                    sbb %edx, %edx                  
opcode table: 0x00245198 -> 0x00217040 (0x00217090)
: (orig=0x0565600ce)0xf7d2                    not %edx                        
opcode table: 0x00243f28 -> 0x002163c0 (0x00216460)
: (orig=0x0565600d0)0x81e280000000            and $0x00000080, %edx           
: (orig=0x0565600d6)0x85c0                    test %eax, %eax                 
: (orig=0x0565600d8)0xb810000000              mov $0x00000010, %eax           
opcode escape found: 0f: (orig=0x0565600dd)0x0f45e8                  cmovnz %eax, %ebp               
SAV
: (orig=0x0565600e0)0xe9ecfdffff              jmp +0xfffffdec                 
original_addr=0565600e0 / addr=0565600e0
start fun: action_jmp(*addr=0x565600e0, *transl_addr=0x3ecaa3e3, length=5)
action_jmp
jump_target = 0fffffdec + 0565600e0 + 05original jmp_target: 0x5655fed1start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fed1)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655fed1)0x8d840a69020000          lea 0x00000269(%edx, %ecx), %eax 
: (orig=0x05655fed8)0x89542418                mov %edx, 0x18(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fedc)0x894c241c                mov %ecx, 0x1c(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fee0)0xc744240401000000        mov $0x00000001, 0x04(%esp)     
leal-based check (opsize = 4)
: (orig=0x05655fee8)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655feeb)0xe8f058ffff              call +0xffff58f0                
action_call
start fun: action_call(*addr=0x5655feeb, *transl_addr=0x3ecaa445, length=5)
original call_target: 0x565557e0return_address = 05655fef0
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565557e0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x0565557e0)0xffa314000000            jmp 0x00000014(%ebx)            
start fun: action_jmp_indirect(*addr=0x565557e0, *transl_addr=0x3ecaa452, length=6)
action jmp ind
end fun: -> close, transl_length=13
end fun: -> 0x3ecaa39a,   next_tu=0x565557e6 (len: 197)
ff = 217
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad50)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa466start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ad50, *transl_address=0x3ecaa466)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISdddadddddddaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05656ad50)0x83ec1c                  sub $0x1c, %esp                 
: (orig=0x05656ad53)0x897c2418                mov %edi, 0x18(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656ad57)0x8b7c2424                mov 0x24(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x05656ad5b)0x8b4c2420                mov 0x20(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656ad5f)0x89742414                mov %esi, 0x14(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656ad63)0x895c2410                mov %ebx, 0x10(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656ad67)0x89f8                    mov %edi, %eax                  
: (orig=0x05656ad69)0x89fe                    mov %edi, %esi                  
: (orig=0x05656ad6b)0x09c8                    or %ecx, %eax                   
: (orig=0x05656ad6d)0xe8d9320000              call +0x000032d9                
action_call
start fun: action_call(*addr=0x5656ad6d, *transl_addr=0x3ecaa4dd, length=5)
original call_target: 0x5656e04breturn_address = 05656ad72
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecaa4fe, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecaa466,   next_tu=0x5656e04f (len: 166)
ff = 218
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad72)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa513start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ad72, *transl_address=0x3ecaa513)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode escape found: 0f

 opt flags pass 
... cmp imm 0ffff with eax

BEGIN FLAG ANALYSISCAaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656ad72)0x81c382b20000            add $0x0000b282, %ebx           
opcode escape found: 0f: (orig=0x05656ad78)0x0faff1                  imul %ecx, %esi                 
: (orig=0x05656ad7b)0x3dffff0000              cmp $0x0000ffff, %eax           
: (orig=0x05656ad80)0x7612                    jbe +0x12                       
action_jcc
start fun: action_jcc(*addr=0x5656ad80, *transl_addr=0x3ecaa521, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad94)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99178, target: 0x5656ad94, origin: 0x3ecaa523start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad82)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99220, target: 0x5656ad82, origin: 0x3ecaa528end fun: -> close, transl_length=11
end fun: -> 0x3ecaa513,   next_tu=0x5656ad82 (len: 25)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad94)
end fun: -> 0x00000000
ff = 219
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad94)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa533start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ad94, *transl_address=0x3ecaa533)
end fun:  
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 

BEGIN FLAG ANALYSIS4.4.4.END FLAG ANALYSIS: (orig=0x05656ad94)0x893424                  mov %esi, (%esp)                
SAV
leal-based check (opsize = 4)
: (orig=0x05656ad97)0xe834aafeff              call +0xfffeaa34                
action_call
start fun: action_call(*addr=0x5656ad97, *transl_addr=0x3ecaa55e, length=5)
original call_target: 0x565557d0return_address = 05656ad9c
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565557d0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x0565557d0)0xffa310000000            jmp 0x00000010(%ebx)            
start fun: action_jmp_indirect(*addr=0x565557d0, *transl_addr=0x3ecaa56b, length=6)
action jmp ind
end fun: -> close, transl_length=13
end fun: -> 0x3ecaa533,   next_tu=0x565557d6 (len: 69)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac46)
end fun: -> 0x00000000
ff = 220
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac46)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa57fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ac46, *transl_address=0x3ecaa57f)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)


 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISAdadaadEND FLAG ANALYSIS: (orig=0x05656ac46)0x8d5402ff                lea 0xff(%edx, %eax), %edx      
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
: (orig=0x05656ac4a)0xf7d8                    neg %eax                        
: (orig=0x05656ac4c)0x21c2                    and %eax, %edx                  
: (orig=0x05656ac4e)0x8d0432                  lea (%edx, %esi), %eax          
: (orig=0x05656ac51)0x39c8                    cmp %ecx, %eax                  
PATCHING CMP REG REG
: (orig=0x05656ac53)0x8993ec080000            mov %edx, 0x000008ec(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05656ac59)0x7308                    jnc +0x08                       
RESTORING VIA CMP
action_jcc
start fun: action_jcc(*addr=0x5656ac59, *transl_addr=0x3ecaa5b1, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac63)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99178, target: 0x5656ac63, origin: 0x3ecaa5b3start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac5b)
end fun: -> 0x3eca86cd
end fun: -> close, transl_length=11
end fun: -> 0x3ecaa57f,   next_tu=0x5656ac5b (len: 61)
ff = 221
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad9c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa5c3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ad9c, *transl_address=0x3ecaa5c3)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISdadddEND FLAG ANALYSIS: (orig=0x05656ad9c)0x8b5c2410                mov 0x10(%esp), %ebx            
leal-based check (opsize = 4)
: (orig=0x05656ada0)0x8b742414                mov 0x14(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656ada4)0x8b7c2418                mov 0x18(%esp), %edi            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656ada8)0x83c41c                  add $0x1c, %esp                 
: (orig=0x05656adab)0xc3                      ret                             
start fun: action_ret(*addr=0x5656adab, *transl_addr=0x3ecaa608, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecaa5c3,   next_tu=0x5656adac (len: 83)
ff = 222
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fef0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa61dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655fef0, *transl_address=0x3ecaa61d)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCDAddEND FLAG ANALYSIS: (orig=0x05655fef0)0x8b542418                mov 0x18(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655fef4)0x8b4c241c                mov 0x1c(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655fef8)0x85c0                    test %eax, %eax                 
: (orig=0x05655fefa)0x89c6                    mov %eax, %esi                  
opcode escape found: 0f: (orig=0x05655fefc)0x0f84ae010000            jz +0x000001ae                  
action_jcc
start fun: action_jcc(*addr=0x5655fefc, *transl_addr=0x3ecaa64d, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565600b0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98490, target: 0x565600b0, origin: 0x3ecaa64fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff02)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99258, target: 0x5655ff02, origin: 0x3ecaa654end fun: -> close, transl_length=11
end fun: -> 0x3ecaa61d,   next_tu=0x5655ff02 (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff02)
end fun: -> 0x00000000
ff = 223
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff02)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa65fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ff02, *transl_address=0x3ecaa65f)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)


 opt flags pass 

BEGIN FLAG ANALYSISCDD1.addddddddddddddddadEND FLAG ANALYSIS: (orig=0x05655ff02)0x8d941058020000          lea 0x00000258(%eax, %edx), %edx 
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655ff09)0x83c101                  add $0x01, %ecx                 
: (orig=0x05655ff0c)0x899064010000            mov %edx, 0x00000164(%eax)      
leal-based check (opsize = 4)
: (orig=0x05655ff12)0x894614                  mov %eax, 0x14(%esi)            
leal-based check (opsize = 4)
: (orig=0x05655ff15)0x8d4204                  lea 0x04(%edx), %eax            
: (orig=0x05655ff18)0x89461c                  mov %eax, 0x1c(%esi)            
leal-based check (opsize = 4)
: (orig=0x05655ff1b)0x8d4210                  lea 0x10(%edx), %eax            
: (orig=0x05655ff1e)0x894c2408                mov %ecx, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655ff22)0x8b4c2420                mov 0x20(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655ff26)0x89542418                mov %edx, 0x18(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655ff2a)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655ff2d)0x894c2404                mov %ecx, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655ff31)0xe89adf0000              call +0x0000df9a                
action_call
start fun: action_call(*addr=0x5655ff31, *transl_addr=0x3ecaa720, length=5)
original call_target: 0x5656ded0return_address = 05655ff36
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ded0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656ded0)0x89f8                    mov %edi, %eax                  
: (orig=0x05656ded2)0x8b7c2404                mov 0x04(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x05656ded6)0x89f2                    mov %esi, %edx                  
: (orig=0x05656ded8)0x8b742408                mov 0x08(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656dedc)0x89f9                    mov %edi, %ecx                  
: (orig=0x05656dede)0x31f1                    xor %esi, %ecx                  
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656dee0)0x83e103                  and $0x03, %ecx                 
: (orig=0x05656dee3)0x8b4c240c                mov 0x0c(%esp), %ecx            
SAV
leal-based check (opsize = 4)
RST
: (orig=0x05656dee7)0xfc                      cld                             
: (orig=0x05656dee8)0x753c                    jnz +0x3c                       
action_jcc
start fun: action_jcc(*addr=0x5656dee8, *transl_addr=0x3ecaa7a8, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656df26)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99290, target: 0x5656df26, origin: 0x3ecaa7aastart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656deea)
end fun: -> 0x3eca8892
end fun: -> close, transl_length=11
end fun: -> 0x3ecaa65f,   next_tu=0x5656deea (len: 340)
ff = 224
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff36)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa7bastart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ff36, *transl_address=0x3ecaa7ba)
end fun:  
opcode escape found: 0fopcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdaaadddddddEND FLAG ANALYSIS: (orig=0x05655ff36)0x8b542418                mov 0x18(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655ff3a)0xc7420c01000000          mov $0x00000001, 0x0c(%edx)     
leal-based check (opsize = 4)
: (orig=0x05655ff41)0x894204                  mov %eax, 0x04(%edx)            
leal-based check (opsize = 4)
: (orig=0x05655ff44)0x8b442424                mov 0x24(%esp), %eax            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655ff48)0x0fb654242c              movzx 0x2c(%esp), %edx          
leal-based check (opsize = 4)
: (orig=0x05655ff4d)0x894604                  mov %eax, 0x04(%esi)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655ff50)0x0fb68694010000          movzx 0x00000194(%esi), %eax    
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655ff57)0x83e203                  and $0x03, %edx                 
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655ff5a)0x83e0fc                  and $0xfc, %eax                 
: (orig=0x05655ff5d)0x09d0                    or %edx, %eax                   
: (orig=0x05655ff5f)0x888694010000            mov %eax, 0x00000194(%esi)      
leal-based check (opsize = 1)
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
: (orig=0x05655ff65)0xf683adfcffff01          test $0x01, 0xfffffcad(%ebx)    
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x05655ff6c)0x0f849e010000            jz +0x0000019e                  
action_jcc
start fun: action_jcc(*addr=0x5655ff6c, *transl_addr=0x3ecaa893, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560110)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99258, target: 0x56560110, origin: 0x3ecaa895start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff72)
end fun: -> 0x00000000
allocated trampoline: 0x3ec992c8, target: 0x5655ff72, origin: 0x3ecaa89aend fun: -> close, transl_length=11
end fun: -> 0x3ecaa7ba,   next_tu=0x5655ff72 (len: 228)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560110)
end fun: -> 0x00000000
ff = 225
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560110)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa8a5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56560110, *transl_address=0x3ecaa8a5)
end fun:  


 opt flags pass 
... tests reg 5 with reg 5

BEGIN FLAG ANALYSISAddadddEND FLAG ANALYSIS: (orig=0x056560110)0xc786fc01000001000000    mov $0x00000001, 0x000001fc(%esi) 
leal-based check (opsize = 4)
: (orig=0x05656011a)0xe953feffff              jmp +0xfffffe53                 
original_addr=05656011a / addr=05656011a
start fun: action_jmp(*addr=0x5656011a, *transl_addr=0x3ecaa8c3, length=5)
action_jmp
jump_target = 0fffffe53 + 05656011a + 05original jmp_target: 0x5655ff72start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff72)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655ff72)0x8b542458                mov 0x58(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655ff76)0x85ed                    test %ebp, %ebp                 
PATCHING TST REG REG
: (orig=0x05655ff78)0x89be6c010000            mov %edi, 0x0000016c(%esi)      
leal-based check (opsize = 4)
: (orig=0x05655ff7e)0x895618                  mov %edx, 0x18(%esi)            
leal-based check (opsize = 4)
: (orig=0x05655ff81)0x7413                    jz +0x13                        
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655ff81, *transl_addr=0x3ecaa912, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff96)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99300, target: 0x5655ff96, origin: 0x3ecaa914start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff83)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99338, target: 0x5655ff83, origin: 0x3ecaa919end fun: -> close, transl_length=11
end fun: -> 0x3ecaa8a5,   next_tu=0x5655ff83 (len: 120)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff83)
end fun: -> 0x00000000
ff = 226
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff83)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa924start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ff83, *transl_address=0x3ecaa924)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... compares reg 5 with reg 0

BEGIN FLAG ANALYSISCAaddaEND FLAG ANALYSIS: (orig=0x05655ff83)0x31c0                    xor %eax, %eax                  
: (orig=0x05655ff85)0x8d7600                  lea 0x00(%esi), %esi            
: (orig=0x05655ff88)0x89b4c658020000          mov %esi, 0x00000258(%esi, %eax*8) 
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655ff8f)0x83c001                  add $0x01, %eax                 
: (orig=0x05655ff92)0x39e8                    cmp %ebp, %eax                  
: (orig=0x05655ff94)0x75f2                    jnz +0xf2                       
action_jcc
start fun: action_jcc(*addr=0x5655ff94, *transl_addr=0x3ecaa94b, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff88)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99258, target: 0x5655ff88, origin: 0x3ecaa94dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff96)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99370, target: 0x5655ff96, origin: 0x3ecaa952end fun: -> close, transl_length=11
end fun: -> 0x3ecaa924,   next_tu=0x5655ff96 (len: 50)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff88)
end fun: -> 0x00000000
ff = 227
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff88)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa95dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ff88, *transl_address=0x3ecaa95d)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... compares reg 5 with reg 0

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05655ff88)0x89b4c658020000          mov %esi, 0x00000258(%esi, %eax*8) 
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655ff8f)0x83c001                  add $0x01, %eax                 
: (orig=0x05655ff92)0x39e8                    cmp %ebp, %eax                  
: (orig=0x05655ff94)0x75f2                    jnz +0xf2                       
action_jcc
start fun: action_jcc(*addr=0x5655ff94, *transl_addr=0x3ecaa97e, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff88)
end fun: -> 0x3ecaa95d
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff96)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99338, target: 0x5655ff96, origin: 0x3ecaa985end fun: -> close, transl_length=11
end fun: -> 0x3ecaa95d,   next_tu=0x5655ff96 (len: 44)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff96)
end fun: -> 0x00000000
ff = 228
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ff96)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaa990start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ff96, *transl_address=0x3ecaa990)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAddadadEND FLAG ANALYSIS: (orig=0x05655ff96)0x8d86b8010000            lea 0x000001b8(%esi), %eax      
: (orig=0x05655ff9c)0x31d2                    xor %edx, %edx                  
: (orig=0x05655ff9e)0x8986cc010000            mov %eax, 0x000001cc(%esi)      
leal-based check (opsize = 4)
: (orig=0x05655ffa4)0x6b4424584c              imul 0x58(%esp), $0x4c, %eax    
leal-based check (opsize = 4)
: (orig=0x05655ffa9)0xc786c801000004000000    mov $0x00000004, 0x000001c8(%esi) 
leal-based check (opsize = 4)
: (orig=0x05655ffb3)0x8b84032c000000          mov 0x0000002c(%ebx, %eax), %eax 
leal-based check (opsize = 4)
: (orig=0x05655ffba)0x85c0                    test %eax, %eax                 
: (orig=0x05655ffbc)0x740d                    jz +0x0d                        
action_jcc
start fun: action_jcc(*addr=0x5655ffbc, *transl_addr=0x3ecaaa06, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ffcb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99258, target: 0x5655ffcb, origin: 0x3ecaaa08start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ffbe)
end fun: -> 0x00000000
allocated trampoline: 0x3ec993a8, target: 0x5655ffbe, origin: 0x3ecaaa0dend fun: -> close, transl_length=11
end fun: -> 0x3ecaa990,   next_tu=0x5655ffbe (len: 129)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ffcb)
end fun: -> 0x00000000
ff = 229
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ffcb)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaaa18start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ffcb, *transl_address=0x3ecaaa18)
end fun:  


 opt flags pass 
... tests reg 7 with reg 7

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655ffcb)0x85ff                    test %edi, %edi                 
: (orig=0x05655ffcd)0x750b                    jnz +0x0b                       
action_jcc
start fun: action_jcc(*addr=0x5655ffcd, *transl_addr=0x3ecaaa1a, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ffda)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99338, target: 0x5655ffda, origin: 0x3ecaaa1cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ffcf)
end fun: -> 0x00000000
allocated trampoline: 0x3ec993e0, target: 0x5655ffcf, origin: 0x3ecaaa21end fun: -> close, transl_length=11
end fun: -> 0x3ecaaa18,   next_tu=0x5655ffcf (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ffcf)
end fun: -> 0x00000000
ff = 230
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ffcf)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaaa2cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ffcf, *transl_address=0x3ecaaa2c)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCDAaddEND FLAG ANALYSIS: (orig=0x05655ffcf)0xe94b010000              jmp +0x0000014b                 
original_addr=05655ffcf / addr=05655ffcf
start fun: action_jmp(*addr=0x5655ffcf, *transl_addr=0x3ecaaa2c, length=5)
action_jmp
jump_target = 014b + 05655ffcf + 05original jmp_target: 0x5656011fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656011f)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05656011f)0x89f7                    mov %esi, %edi                  
: (orig=0x056560121)0x31c0                    xor %eax, %eax                  
: (orig=0x056560123)0x85d2                    test %edx, %edx                 
: (orig=0x056560125)0x8d8f5c010000            lea 0x0000015c(%edi), %ecx      
opcode escape found: 0f: (orig=0x05656012b)0x0f84c3feffff            jz +0xfffffec3                  
action_jcc
start fun: action_jcc(*addr=0x5656012b, *transl_addr=0x3ecaaa39, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fff4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99258, target: 0x5655fff4, origin: 0x3ecaaa3bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560131)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99418, target: 0x56560131, origin: 0x3ecaaa40end fun: -> close, transl_length=11
end fun: -> 0x3ecaaa2c,   next_tu=0x56560131 (len: 24)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fff4)
end fun: -> 0x00000000
ff = 231
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fff4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaaa4bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655fff4, *transl_address=0x3ecaaa4b)
end fun:  
opcode escape found: 0fopcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdddddEND FLAG ANALYSIS: (orig=0x05655fff4)0x898c06b8010000          mov %ecx, 0x000001b8(%esi, %eax) 
leal-based check (opsize = 4)
: (orig=0x05655fffb)0x8d865c010000            lea 0x0000015c(%esi), %eax      
: (orig=0x056560001)0x8986d0010000            mov %eax, 0x000001d0(%esi)      
leal-based check (opsize = 4)
: (orig=0x056560007)0x8b442424                mov 0x24(%esp), %eax            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05656000b)0x0fb610                  movzx (%eax), %edx              
leal-based check (opsize = 4)
: (orig=0x05656000e)0x84d2                    test %edx, %edx                 
opcode escape found: 0f: (orig=0x056560010)0x0f849a000000            jz +0x0000009a                  
action_jcc
start fun: action_jcc(*addr=0x56560010, *transl_addr=0x3ecaaab3, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565600b0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec993e0, target: 0x565600b0, origin: 0x3ecaaab5start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560016)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99450, target: 0x56560016, origin: 0x3ecaaabaend fun: -> close, transl_length=11
end fun: -> 0x3ecaaa4b,   next_tu=0x56560016 (len: 115)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560016)
end fun: -> 0x00000000
ff = 232
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560016)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaaac5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56560016, *transl_address=0x3ecaaac5)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCAdddddEND FLAG ANALYSIS: (orig=0x056560016)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x056560019)0x88542418                mov %edx, 0x18(%esp)            
leal-based check (opsize = 1)
: (orig=0x05656001d)0xe85ed70000              call +0x0000d75e                
action_call
start fun: action_call(*addr=0x5656001d, *transl_addr=0x3ecaaaee, length=5)
original call_target: 0x5656d780return_address = 056560022
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d780)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d780)0x8b442404                mov 0x04(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656d784)0xba03000000              mov $0x00000003, %edx           
: (orig=0x05656d789)0x21c2                    and %eax, %edx                  
: (orig=0x05656d78b)0x7424                    jz +0x24                        
action_jcc
start fun: action_jcc(*addr=0x5656d78b, *transl_addr=0x3ecaab18, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d7b1)
end fun: -> 0x3eca8357
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d78d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99258, target: 0x5656d78d, origin: 0x3ecaab1fend fun: -> close, transl_length=11
end fun: -> 0x3ecaaac5,   next_tu=0x5656d78d (len: 94)
ff = 233
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560022)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaab2astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56560022, *transl_address=0x3ecaab2a)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCD1.adEND FLAG ANALYSISopcode escape found: 0f: (orig=0x056560022)0x0fb6542418              movzx 0x18(%esp), %edx          
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056560027)0x83c001                  add $0x01, %eax                 
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656002a)0x80fa2f                  cmp $0x2f, %edx                 
: (orig=0x05656002d)0x89442420                mov %eax, 0x20(%esp)            
SAV
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x056560031)0x0f84fc000000            jz +0x000000fc                  
action_jcc
start fun: action_jcc(*addr=0x56560031, *transl_addr=0x3ecaab8a, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560133)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99450, target: 0x56560133, origin: 0x3ecaab8cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560037)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99488, target: 0x56560037, origin: 0x3ecaab91end fun: -> close, transl_length=11
end fun: -> 0x3ecaab2a,   next_tu=0x56560037 (len: 107)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560037)
end fun: -> 0x00000000
ff = 234
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560037)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaab9cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56560037, *transl_address=0x3ecaab9c)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 

BEGIN FLAG ANALYSIS4.4.4.4.4.1.dddaddEND FLAG ANALYSIS: (orig=0x056560037)0xb880000000              mov $0x00000080, %eax           
: (orig=0x05656003c)0x8b6c2420                mov 0x20(%esp), %ebp            
leal-based check (opsize = 4)
: (orig=0x056560040)0x31d2                    xor %edx, %edx                  
: (orig=0x056560042)0x89742428                mov %esi, 0x28(%esp)            
leal-based check (opsize = 4)
: (orig=0x056560046)0x89c6                    mov %eax, %esi                  
: (orig=0x056560048)0xeb08                    jmp +0x08                       
original_addr=056560048 / addr=056560048
start fun: action_jmp(*addr=0x56560048, *transl_addr=0x3ecaabd1, length=2)
action_jmp
original jmp_target: 0x56560052start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560052)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056560052)0x83ed80                  sub $0x80, %ebp                 
: (orig=0x056560055)0x891424                  mov %edx, (%esp)                
SAV
leal-based check (opsize = 4)
: (orig=0x056560058)0x89542418                mov %edx, 0x18(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656005c)0x896c2404                mov %ebp, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x056560060)0xe88b57ffff              call +0xffff578b                
action_call
start fun: action_call(*addr=0x56560060, *transl_addr=0x3ecaac2b, length=5)
original call_target: 0x565557f0return_address = 056560065
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565557f0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x0565557f0)0xffa318000000            jmp 0x00000018(%ebx)            
start fun: action_jmp_indirect(*addr=0x565557f0, *transl_addr=0x3ecaac38, length=6)
action jmp ind
end fun: -> close, transl_length=13
end fun: -> 0x3ecaab9c,   next_tu=0x565557f6 (len: 169)
ff = 235
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ae90)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaac4cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ae90, *transl_address=0x3ecaac4c)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISdddddddaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05656ae90)0x83ec1c                  sub $0x1c, %esp                 
: (orig=0x05656ae93)0x89742414                mov %esi, 0x14(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656ae97)0x8b742420                mov 0x20(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656ae9b)0x895c2410                mov %ebx, 0x10(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656ae9f)0x8b442424                mov 0x24(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656aea3)0xe8a3310000              call +0x000031a3                
action_call
start fun: action_call(*addr=0x5656aea3, *transl_addr=0x3ecaaca7, length=5)
original call_target: 0x5656e04breturn_address = 05656aea8
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecaacc8, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecaac4c,   next_tu=0x5656e04f (len: 138)
ff = 236
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aea8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaacddstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aea8, *transl_address=0x3ecaacdd)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAdaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656aea8)0x81c34cb10000            add $0x0000b14c, %ebx           
: (orig=0x05656aeae)0x897c2418                mov %edi, 0x18(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656aeb2)0x85f6                    test %esi, %esi                 
: (orig=0x05656aeb4)0x7442                    jz +0x42                        
action_jcc
start fun: action_jcc(*addr=0x5656aeb4, *transl_addr=0x3ecaacfb, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aef8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99488, target: 0x5656aef8, origin: 0x3ecaacfdstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aeb6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec994c0, target: 0x5656aeb6, origin: 0x3ecaad02end fun: -> close, transl_length=11
end fun: -> 0x3ecaacdd,   next_tu=0x5656aeb6 (len: 41)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aef8)
end fun: -> 0x00000000
ff = 237
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aef8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaad0dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aef8, *transl_address=0x3ecaad0d)
end fun:  
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 

BEGIN FLAG ANALYSIS4.4.4.END FLAG ANALYSIS: (orig=0x05656aef8)0x890424                  mov %eax, (%esp)                
SAV
leal-based check (opsize = 4)
: (orig=0x05656aefb)0xe8d0a8feff              call +0xfffea8d0                
action_call
start fun: action_call(*addr=0x5656aefb, *transl_addr=0x3ecaad38, length=5)
original call_target: 0x565557d0return_address = 05656af00
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565557d0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x0565557d0)0xffa310000000            jmp 0x00000010(%ebx)            
start fun: action_jmp_indirect(*addr=0x565557d0, *transl_addr=0x3ecaad45, length=6)
action jmp ind
end fun: -> close, transl_length=13
end fun: -> 0x3ecaad0d,   next_tu=0x565557d6 (len: 69)
ff = 238
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656af00)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaad59start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656af00, *transl_address=0x3ecaad59)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISdaddddEND FLAG ANALYSIS: (orig=0x05656af00)0xebe6                    jmp +0xe6                       
original_addr=05656af00 / addr=05656af00
start fun: action_jmp(*addr=0x5656af00, *transl_addr=0x3ecaad59, length=2)
action_jmp
original jmp_target: 0x5656aee8start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aee8)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05656aee8)0x8b5c2410                mov 0x10(%esp), %ebx            
leal-based check (opsize = 4)
: (orig=0x05656aeec)0x8b742414                mov 0x14(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656aef0)0x8b7c2418                mov 0x18(%esp), %edi            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656aef4)0x83c41c                  add $0x1c, %esp                 
: (orig=0x05656aef7)0xc3                      ret                             
start fun: action_ret(*addr=0x5656aef7, *transl_addr=0x3ecaad9e, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecaad59,   next_tu=0x5656aef8 (len: 83)
ff = 239
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560065)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaadb3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56560065, *transl_address=0x3ecaadb3)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCDAdEND FLAG ANALYSIS: (orig=0x056560065)0x8b542418                mov 0x18(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x056560069)0x85c0                    test %eax, %eax                 
: (orig=0x05656006b)0x89c7                    mov %eax, %edi                  
opcode escape found: 0f: (orig=0x05656006d)0x0f8413010000            jz +0x00000113                  
action_jcc
start fun: action_jcc(*addr=0x5656006d, *transl_addr=0x3ecaadcd, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560186)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99488, target: 0x56560186, origin: 0x3ecaadcfstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560073)
end fun: -> 0x00000000
allocated trampoline: 0x3ec994f8, target: 0x56560073, origin: 0x3ecaadd4end fun: -> close, transl_length=11
end fun: -> 0x3ecaadb3,   next_tu=0x56560073 (len: 37)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560073)
end fun: -> 0x00000000
ff = 240
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560073)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaaddfstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56560073, *transl_address=0x3ecaaddf)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)


 opt flags pass 

BEGIN FLAG ANALYSISdddddddddadddEND FLAG ANALYSIS: (orig=0x056560073)0x89742404                mov %esi, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x056560077)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05656007a)0xe8a1b40000              call +0x0000b4a1                
action_call
start fun: action_call(*addr=0x5656007a, *transl_addr=0x3ecaae09, length=5)
original call_target: 0x5656b520return_address = 05656007f
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b520)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
: (orig=0x05656b520)0x81ecdc000000            sub $0x000000dc, %esp           
: (orig=0x05656b526)0x89b424d0000000          mov %esi, 0x000000d0(%esp)      
leal-based check (opsize = 4)
: (orig=0x05656b52d)0x8bb424e0000000          mov 0x000000e0(%esp), %esi      
leal-based check (opsize = 4)
: (orig=0x05656b534)0x899c24cc000000          mov %ebx, 0x000000cc(%esp)      
leal-based check (opsize = 4)
: (orig=0x05656b53b)0x8b8c24e4000000          mov 0x000000e4(%esp), %ecx      
leal-based check (opsize = 4)
: (orig=0x05656b542)0x89bc24d4000000          mov %edi, 0x000000d4(%esp)      
leal-based check (opsize = 4)
: (orig=0x05656b549)0x89ac24d8000000          mov %ebp, 0x000000d8(%esp)      
leal-based check (opsize = 4)
: (orig=0x05656b550)0xe8f62a0000              call +0x00002af6                
action_call
start fun: action_call(*addr=0x5656b550, *transl_addr=0x3ecaaec4, length=5)
original call_target: 0x5656e04breturn_address = 05656b555
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecaaee5, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecaaddf,   next_tu=0x5656e04f (len: 276)
ff = 241
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b555)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaaefastart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656b555, *transl_address=0x3ecaaefa)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 

BEGIN FLAG ANALYSISBDDDAEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656b555)0x81c39faa0000            add $0x0000aa9f, %ebx           
: (orig=0x05656b55b)0x89f2                    mov %esi, %edx                  
: (orig=0x05656b55d)0x87d3                    xchg %edx, %ebx                 
: (orig=0x05656b55f)0xb8b7000000              mov $0x000000b7, %eax           
: (orig=0x05656b564)0xcd80                    int $0x80                       
closing TU upon request, invoking translation function on 0x5656b566allocated trampoline: 0x3ec994f8, target: 0x5656b566, origin: 0x3ecaaf3aend fun: -> 0x3ecaaefa,   next_tu=0x5656b566 (len: 56)
SYSCALL 183
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b566)
end fun: -> 0x00000000
ff = 242
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b566)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaaf3estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656b566, *transl_address=0x3ecaaf3e)
end fun:  


 opt flags pass 
... cmp imm 0fffff000 with eax

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656b566)0x87d3                    xchg %edx, %ebx                 
: (orig=0x05656b568)0x3d00f0ffff              cmp $0xfffff000, %eax           
: (orig=0x05656b56d)0x7729                    ja +0x29                        
action_jcc
start fun: action_jcc(*addr=0x5656b56d, *transl_addr=0x3ecaaf45, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b598)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99530, target: 0x5656b598, origin: 0x3ecaaf47start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b56f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99568, target: 0x5656b56f, origin: 0x3ecaaf4cend fun: -> close, transl_length=11
end fun: -> 0x3ecaaf3e,   next_tu=0x5656b56f (len: 18)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b56f)
end fun: -> 0x00000000
ff = 243
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b56f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaaf57start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656b56f, *transl_address=0x3ecaaf57)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05656b56f)0x85c0                    test %eax, %eax                 
: (orig=0x05656b571)0x782d                    js +0x2d                        
action_jcc
start fun: action_jcc(*addr=0x5656b571, *transl_addr=0x3ecaaf59, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b5a0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec994f8, target: 0x5656b5a0, origin: 0x3ecaaf5bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b573)
end fun: -> 0x00000000
allocated trampoline: 0x3ec995a0, target: 0x5656b573, origin: 0x3ecaaf60end fun: -> close, transl_length=11
end fun: -> 0x3ecaaf57,   next_tu=0x5656b573 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b573)
end fun: -> 0x00000000
ff = 244
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656b573)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaaf6bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656b573, *transl_address=0x3ecaaf6b)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 

BEGIN FLAG ANALYSISdadddddEND FLAG ANALYSIS: (orig=0x05656b573)0x89f0                    mov %esi, %eax                  
: (orig=0x05656b575)0x8b9c24cc000000          mov 0x000000cc(%esp), %ebx      
leal-based check (opsize = 4)
: (orig=0x05656b57c)0x8bb424d0000000          mov 0x000000d0(%esp), %esi      
leal-based check (opsize = 4)
: (orig=0x05656b583)0x8bbc24d4000000          mov 0x000000d4(%esp), %edi      
leal-based check (opsize = 4)
: (orig=0x05656b58a)0x8bac24d8000000          mov 0x000000d8(%esp), %ebp      
leal-based check (opsize = 4)
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656b591)0x81c4dc000000            add $0x000000dc, %esp           
: (orig=0x05656b597)0xc3                      ret                             
start fun: action_ret(*addr=0x5656b597, *transl_addr=0x3ecaafe3, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecaaf6b,   next_tu=0x5656b598 (len: 134)
ff = 245
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656007f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaaff8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656007f, *transl_address=0x3ecaaff8)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05656007f)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056560081)0x0f8508010000            jnz +0x00000108                 
action_jcc
start fun: action_jcc(*addr=0x56560081, *transl_addr=0x3ecaaffa, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656018f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec995a0, target: 0x5656018f, origin: 0x3ecaaffcstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560087)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99568, target: 0x56560087, origin: 0x3ecab001end fun: -> close, transl_length=11
end fun: -> 0x3ecaaff8,   next_tu=0x56560087 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656018f)
end fun: -> 0x00000000
ff = 246
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656018f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab00cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656018f, *transl_address=0x3ecab00c)
end fun:  
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)


 opt flags pass 

BEGIN FLAG ANALYSISCAadaddadddddddddddEND FLAG ANALYSIS: (orig=0x05656018f)0xc744240400000000        mov $0x00000000, 0x04(%esp)     
leal-based check (opsize = 4)
: (orig=0x056560197)0x8b742428                mov 0x28(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656019b)0x893c24                  mov %edi, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05656019e)0xe85dd30000              call +0x0000d35d                
action_call
start fun: action_call(*addr=0x5656019e, *transl_addr=0x3ecab050, length=5)
original call_target: 0x5656d500return_address = 0565601a3
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d500)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d500)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05656d501)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05656d502)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656d503)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05656d504)0x8b442414                mov 0x14(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656d508)0x8b542418                mov 0x18(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656d50c)0x89c7                    mov %eax, %edi                  
: (orig=0x05656d50e)0x31c9                    xor %ecx, %ecx                  
: (orig=0x05656d510)0x88d6                    mov %edx, %esi                  
: (orig=0x05656d512)0x88d1                    mov %edx, %ecx                  
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05656d514)0xc1e210                  shl $0x10, %edx                 
: (orig=0x05656d517)0x88cd                    mov %ecx, %ebp                  
: (orig=0x05656d519)0x09ca                    or %ecx, %edx                   
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656d51b)0x83e703                  and $0x03, %edi                 
: (orig=0x05656d51e)0x7441                    jz +0x41                        
action_jcc
start fun: action_jcc(*addr=0x5656d51e, *transl_addr=0x3ecab0e7, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d561)
end fun: -> 0x3eca8103
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d520)
end fun: -> 0x00000000
allocated trampoline: 0x3ec995d8, target: 0x5656d520, origin: 0x3ecab0eeend fun: -> close, transl_length=11
end fun: -> 0x3ecab00c,   next_tu=0x5656d520 (len: 230)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5b8)
end fun: -> 0x00000000
ff = 247
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5b8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab0f9start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d5b8, *transl_address=0x3ecab0f9)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCDAaEND FLAG ANALYSIS: (orig=0x05656d5b8)0x31cd                    xor %ecx, %ebp                  
: (orig=0x05656d5ba)0x01cf                    add %ecx, %edi                  
: (orig=0x05656d5bc)0x8d4004                  lea 0x04(%eax), %eax            
opcode escape found: 0f: (orig=0x05656d5bf)0x0f83cd000000            jnc +0x000000cd                 
action_jcc
start fun: action_jcc(*addr=0x5656d5bf, *transl_addr=0x3ecab101, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x00000000
allocated trampoline: 0x3ec995a0, target: 0x5656d692, origin: 0x3ecab103start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5c5)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99610, target: 0x5656d5c5, origin: 0x3ecab108end fun: -> close, transl_length=11
end fun: -> 0x3ecab0f9,   next_tu=0x5656d5c5 (len: 19)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5c5)
end fun: -> 0x00000000
ff = 248
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5c5)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab113start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d5c5, *transl_address=0x3ecab113)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05656d5c5)0x89cb                    mov %ecx, %ebx                  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
: (orig=0x05656d5c7)0x81cdfffefefe            or $0xfefefeff, %ebp            
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656d5cd)0x83c501                  add $0x01, %ebp                 
opcode escape found: 0f: (orig=0x05656d5d0)0x0f85bc000000            jnz +0x000000bc                 
action_jcc
start fun: action_jcc(*addr=0x5656d5d0, *transl_addr=0x3ecab11e, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98298, target: 0x5656d692, origin: 0x3ecab120start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5d6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99648, target: 0x5656d5d6, origin: 0x3ecab125end fun: -> close, transl_length=11
end fun: -> 0x3ecab113,   next_tu=0x5656d5d6 (len: 22)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5d6)
end fun: -> 0x00000000
ff = 249
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5d6)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab130start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d5d6, *transl_address=0x3ecab130)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCDAdadEND FLAG ANALYSIS: (orig=0x05656d5d6)0xbefffefefe              mov $0xfefefeff, %esi           
: (orig=0x05656d5db)0x31d3                    xor %edx, %ebx                  
: (orig=0x05656d5dd)0x8b08                    mov (%eax), %ecx                
leal-based check (opsize = 4)
: (orig=0x05656d5df)0x01de                    add %ebx, %esi                  
: (orig=0x05656d5e1)0xbffffefefe              mov $0xfefefeff, %edi           
opcode escape found: 0f: (orig=0x05656d5e6)0x0f838b000000            jnc +0x0000008b                 
action_jcc
start fun: action_jcc(*addr=0x5656d5e6, *transl_addr=0x3ecab150, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d677)
end fun: -> 0x3eca81ab
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5ec)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99610, target: 0x5656d5ec, origin: 0x3ecab157end fun: -> close, transl_length=11
end fun: -> 0x3ecab130,   next_tu=0x5656d5ec (len: 43)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5ec)
end fun: -> 0x00000000
ff = 250
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5ec)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab162start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d5ec, *transl_address=0x3ecab162)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISCAaaadEND FLAG ANALYSIS: (orig=0x05656d5ec)0x89fd                    mov %edi, %ebp                  
: (orig=0x05656d5ee)0x31de                    xor %ebx, %esi                  
: (orig=0x05656d5f0)0x01cd                    add %ecx, %ebp                  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
: (orig=0x05656d5f2)0x81cefffefefe            or $0xfefefeff, %esi            
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656d5f8)0x83c601                  add $0x01, %esi                 
: (orig=0x05656d5fb)0x757a                    jnz +0x7a                       
action_jcc
start fun: action_jcc(*addr=0x5656d5fb, *transl_addr=0x3ecab171, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d677)
end fun: -> 0x3eca81ab
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5fd)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99648, target: 0x5656d5fd, origin: 0x3ecab178end fun: -> close, transl_length=11
end fun: -> 0x3ecab162,   next_tu=0x5656d5fd (len: 26)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5fd)
end fun: -> 0x00000000
ff = 251
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d5fd)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab183start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d5fd, *transl_address=0x3ecab183)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCDAaEND FLAG ANALYSIS: (orig=0x05656d5fd)0x31cd                    xor %ecx, %ebp                  
: (orig=0x05656d5ff)0x01cf                    add %ecx, %edi                  
: (orig=0x05656d601)0x8d4004                  lea 0x04(%eax), %eax            
opcode escape found: 0f: (orig=0x05656d604)0x0f8388000000            jnc +0x00000088                 
action_jcc
start fun: action_jcc(*addr=0x5656d604, *transl_addr=0x3ecab18b, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99610, target: 0x5656d692, origin: 0x3ecab18dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d60a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99680, target: 0x5656d60a, origin: 0x3ecab192end fun: -> close, transl_length=11
end fun: -> 0x3ecab183,   next_tu=0x5656d60a (len: 19)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d60a)
end fun: -> 0x00000000
ff = 252
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d60a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab19dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d60a, *transl_address=0x3ecab19d)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05656d60a)0x89cb                    mov %ecx, %ebx                  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
: (orig=0x05656d60c)0x81cdfffefefe            or $0xfefefeff, %ebp            
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656d612)0x83c501                  add $0x01, %ebp                 
: (orig=0x05656d615)0x757b                    jnz +0x7b                       
action_jcc
start fun: action_jcc(*addr=0x5656d615, *transl_addr=0x3ecab1a8, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99648, target: 0x5656d692, origin: 0x3ecab1aastart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d617)
end fun: -> 0x00000000
allocated trampoline: 0x3ec996b8, target: 0x5656d617, origin: 0x3ecab1afend fun: -> close, transl_length=11
end fun: -> 0x3ecab19d,   next_tu=0x5656d617 (len: 22)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d617)
end fun: -> 0x00000000
ff = 253
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d617)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab1bastart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d617, *transl_address=0x3ecab1ba)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCDAdadEND FLAG ANALYSIS: (orig=0x05656d617)0xbefffefefe              mov $0xfefefeff, %esi           
: (orig=0x05656d61c)0x31d3                    xor %edx, %ebx                  
: (orig=0x05656d61e)0x8b08                    mov (%eax), %ecx                
leal-based check (opsize = 4)
: (orig=0x05656d620)0x01de                    add %ebx, %esi                  
: (orig=0x05656d622)0xbffffefefe              mov $0xfefefeff, %edi           
: (orig=0x05656d627)0x734e                    jnc +0x4e                       
action_jcc
start fun: action_jcc(*addr=0x5656d627, *transl_addr=0x3ecab1da, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d677)
end fun: -> 0x3eca81ab
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d629)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99680, target: 0x5656d629, origin: 0x3ecab1e1end fun: -> close, transl_length=11
end fun: -> 0x3ecab1ba,   next_tu=0x5656d629 (len: 43)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d629)
end fun: -> 0x00000000
ff = 254
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d629)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab1ecstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d629, *transl_address=0x3ecab1ec)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISCAaaadEND FLAG ANALYSIS: (orig=0x05656d629)0x89fd                    mov %edi, %ebp                  
: (orig=0x05656d62b)0x31de                    xor %ebx, %esi                  
: (orig=0x05656d62d)0x01cd                    add %ecx, %ebp                  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
: (orig=0x05656d62f)0x81cefffefefe            or $0xfefefeff, %esi            
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656d635)0x83c601                  add $0x01, %esi                 
: (orig=0x05656d638)0x753d                    jnz +0x3d                       
action_jcc
start fun: action_jcc(*addr=0x5656d638, *transl_addr=0x3ecab1fb, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d677)
end fun: -> 0x3eca81ab
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d63a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec996b8, target: 0x5656d63a, origin: 0x3ecab202end fun: -> close, transl_length=11
end fun: -> 0x3ecab1ec,   next_tu=0x5656d63a (len: 26)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d63a)
end fun: -> 0x00000000
ff = 255
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d63a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab20dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d63a, *transl_address=0x3ecab20d)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCDAaEND FLAG ANALYSIS: (orig=0x05656d63a)0x31cd                    xor %ecx, %ebp                  
: (orig=0x05656d63c)0x01cf                    add %ecx, %edi                  
: (orig=0x05656d63e)0x8d4004                  lea 0x04(%eax), %eax            
: (orig=0x05656d641)0x734f                    jnc +0x4f                       
action_jcc
start fun: action_jcc(*addr=0x5656d641, *transl_addr=0x3ecab215, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99680, target: 0x5656d692, origin: 0x3ecab217start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d643)
end fun: -> 0x00000000
allocated trampoline: 0x3ec996f0, target: 0x5656d643, origin: 0x3ecab21cend fun: -> close, transl_length=11
end fun: -> 0x3ecab20d,   next_tu=0x5656d643 (len: 19)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d643)
end fun: -> 0x00000000
ff = 256
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d643)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab227start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d643, *transl_address=0x3ecab227)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05656d643)0x89cb                    mov %ecx, %ebx                  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
: (orig=0x05656d645)0x81cdfffefefe            or $0xfefefeff, %ebp            
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656d64b)0x83c501                  add $0x01, %ebp                 
: (orig=0x05656d64e)0x7542                    jnz +0x42                       
action_jcc
start fun: action_jcc(*addr=0x5656d64e, *transl_addr=0x3ecab232, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x00000000
allocated trampoline: 0x3ec996b8, target: 0x5656d692, origin: 0x3ecab234start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d650)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99728, target: 0x5656d650, origin: 0x3ecab239end fun: -> close, transl_length=11
end fun: -> 0x3ecab227,   next_tu=0x5656d650 (len: 22)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d650)
end fun: -> 0x00000000
ff = 257
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d650)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab244start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d650, *transl_address=0x3ecab244)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCDAdadEND FLAG ANALYSIS: (orig=0x05656d650)0xbefffefefe              mov $0xfefefeff, %esi           
: (orig=0x05656d655)0x31d3                    xor %edx, %ebx                  
: (orig=0x05656d657)0x8b08                    mov (%eax), %ecx                
leal-based check (opsize = 4)
: (orig=0x05656d659)0x01de                    add %ebx, %esi                  
: (orig=0x05656d65b)0xbffffefefe              mov $0xfefefeff, %edi           
: (orig=0x05656d660)0x7315                    jnc +0x15                       
action_jcc
start fun: action_jcc(*addr=0x5656d660, *transl_addr=0x3ecab264, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d677)
end fun: -> 0x3eca81ab
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d662)
end fun: -> 0x00000000
allocated trampoline: 0x3ec996f0, target: 0x5656d662, origin: 0x3ecab26bend fun: -> close, transl_length=11
end fun: -> 0x3ecab244,   next_tu=0x5656d662 (len: 43)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d662)
end fun: -> 0x00000000
ff = 258
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d662)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab276start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d662, *transl_address=0x3ecab276)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAaaadEND FLAG ANALYSIS: (orig=0x05656d662)0x89fd                    mov %edi, %ebp                  
: (orig=0x05656d664)0x31de                    xor %ebx, %esi                  
: (orig=0x05656d666)0x01cd                    add %ecx, %ebp                  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163e8)
: (orig=0x05656d668)0x81cefffefefe            or $0xfefefeff, %esi            
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656d66e)0x83c601                  add $0x01, %esi                 
opcode escape found: 0f: (orig=0x05656d671)0x0f84f8feffff            jz +0xfffffef8                  
action_jcc
start fun: action_jcc(*addr=0x5656d671, *transl_addr=0x3ecab285, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d56f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99728, target: 0x5656d56f, origin: 0x3ecab287start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d677)
end fun: -> 0x3eca81ab
end fun: -> close, transl_length=11
end fun: -> 0x3ecab276,   next_tu=0x5656d677 (len: 26)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d56f)
end fun: -> 0x00000000
ff = 259
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d56f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab297start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d56f, *transl_address=0x3ecab297)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCDAaEND FLAG ANALYSIS: (orig=0x05656d56f)0x31cd                    xor %ecx, %ebp                  
: (orig=0x05656d571)0x01cf                    add %ecx, %edi                  
: (orig=0x05656d573)0x8d4004                  lea 0x04(%eax), %eax            
opcode escape found: 0f: (orig=0x05656d576)0x0f8316010000            jnc +0x00000116                 
action_jcc
start fun: action_jcc(*addr=0x5656d576, *transl_addr=0x3ecab29f, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x00000000
allocated trampoline: 0x3ec996f0, target: 0x5656d692, origin: 0x3ecab2a1start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d57c)
end fun: -> 0x3eca813b
end fun: -> close, transl_length=11
end fun: -> 0x3ecab297,   next_tu=0x5656d57c (len: 19)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x00000000
ff = 260
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab2b1start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d692, *transl_address=0x3ecab2b1)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISCAaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05656d692)0x83e804                  sub $0x04, %eax                 
: (orig=0x05656d695)0x38d1                    cmp %edx, %ecx                  
: (orig=0x05656d697)0x74f4                    jz +0xf4                        
action_jcc
start fun: action_jcc(*addr=0x5656d697, *transl_addr=0x3ecab2b6, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d68d)
end fun: -> 0x3eca81d8
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d699)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99728, target: 0x5656d699, origin: 0x3ecab2bdend fun: -> close, transl_length=11
end fun: -> 0x3ecab2b1,   next_tu=0x5656d699 (len: 16)
ff = 261
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565601a3)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab2c8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565601a3, *transl_address=0x3ecab2c8)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x0565601a3)0x8078ff2f                cmp $0x2f, 0xff(%eax)           
leal-based check (opsize = 1)
: (orig=0x0565601a7)0x749f                    jz +0x9f                        
action_jcc
start fun: action_jcc(*addr=0x565601a7, *transl_addr=0x3ecab2dc, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560148)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99680, target: 0x56560148, origin: 0x3ecab2destart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565601a9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99760, target: 0x565601a9, origin: 0x3ecab2e3end fun: -> close, transl_length=11
end fun: -> 0x3ecab2c8,   next_tu=0x565601a9 (len: 31)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565601a9)
end fun: -> 0x00000000
ff = 262
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565601a9)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab2eestart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565601a9, *transl_address=0x3ecab2ee)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244ba8 -> 0x00216b40 (0x00216c08)


 opt flags pass 

BEGIN FLAG ANALYSISCAdddddddddddddadEND FLAG ANALYSIS: (orig=0x0565601a9)0xc6002f                  mov $0x2f, (%eax)               
leal-based check (opsize = 1)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x0565601ac)0x83c001                  add $0x01, %eax                 
: (orig=0x0565601af)0xeb97                    jmp +0x97                       
original_addr=0565601af / addr=0565601af
start fun: action_jmp(*addr=0x565601af, *transl_addr=0x3ecab303, length=2)
action_jmp
original jmp_target: 0x56560148start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560148)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x056560148)0x8b542420                mov 0x20(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656014c)0x8b4c2424                mov 0x24(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x056560150)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x056560153)0x89542408                mov %edx, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x056560157)0x894c2404                mov %ecx, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656015b)0xe8b0dc0000              call +0x0000dcb0                
action_call
start fun: action_call(*addr=0x5656015b, *transl_addr=0x3ecab36f, length=5)
original call_target: 0x5656de10return_address = 056560160
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de10)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656de10)0x8b4c240c                mov 0x0c(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656de14)0x89f8                    mov %edi, %eax                  
: (orig=0x05656de16)0x8b7c2404                mov 0x04(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x05656de1a)0x89f2                    mov %esi, %edx                  
: (orig=0x05656de1c)0x8b742408                mov 0x08(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656de20)0xfc                      cld                             
opcode table: 0x00244ba8 -> 0x00216b40 (0x00216c08)
: (orig=0x05656de21)0xd1e9                    shr $1, %ecx                    
: (orig=0x05656de23)0x7301                    jnc +0x01                       
action_jcc
start fun: action_jcc(*addr=0x5656de23, *transl_addr=0x3ecab3c5, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de26)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99798, target: 0x5656de26, origin: 0x3ecab3c7start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de25)
end fun: -> 0x00000000
allocated trampoline: 0x3ec997d0, target: 0x5656de25, origin: 0x3ecab3ccend fun: -> close, transl_length=11
end fun: -> 0x3ecab2ee,   next_tu=0x5656de25 (len: 226)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de26)
end fun: -> 0x00000000
ff = 263
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de26)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab3d7start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656de26, *transl_address=0x3ecab3d7)
end fun:  
opcode table: 0x00244ba8 -> 0x00216b40 (0x00216c08)


 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00244ba8 -> 0x00216b40 (0x00216c08)
: (orig=0x05656de26)0xd1e9                    shr $1, %ecx                    
: (orig=0x05656de28)0x7302                    jnc +0x02                       
action_jcc
start fun: action_jcc(*addr=0x5656de28, *transl_addr=0x3ecab3d9, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de2c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99760, target: 0x5656de2c, origin: 0x3ecab3dbstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de2a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99808, target: 0x5656de2a, origin: 0x3ecab3e0end fun: -> close, transl_length=11
end fun: -> 0x3ecab3d7,   next_tu=0x5656de2a (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de2a)
end fun: -> 0x00000000
ff = 264
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de2a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab3ebstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656de2a, *transl_address=0x3ecab3eb)
end fun:  
prefix found: 066prefix found: 0f3

 opt flags pass 

BEGIN FLAG ANALYSISdddddEND FLAG ANALYSISprefix found: 066: (orig=0x05656de2a)0x66a5                    movsd %es:(%edi), 1448533546s:(%esi) 
prefix found: 0f3: (orig=0x05656de2c)0xf3a5                    movsd %es:(%edi), 1448533548s:(%esi) 
: (orig=0x05656de2e)0x97                      xchg %edi, %eax                 
: (orig=0x05656de2f)0x89d6                    mov %edx, %esi                  
: (orig=0x05656de31)0xc3                      ret                             
start fun: action_ret(*addr=0x5656de31, *transl_addr=0x3ecab3fa, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecab3eb,   next_tu=0x5656de32 (len: 29)
ff = 265
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560160)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab40fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56560160, *transl_address=0x3ecab40f)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCDAdEND FLAG ANALYSIS: (orig=0x056560160)0xeb08                    jmp +0x08                       
original_addr=056560160 / addr=056560160
start fun: action_jmp(*addr=0x56560160, *transl_addr=0x3ecab40f, length=2)
action_jmp
original jmp_target: 0x5656016astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656016a)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656016a)0x8078ff2f                cmp $0x2f, 0xff(%eax)           
leal-based check (opsize = 1)
: (orig=0x05656016e)0x8d50ff                  lea 0xff(%eax), %edx            
: (orig=0x056560171)0x75f5                    jnz +0xf5                       
action_jcc
start fun: action_jcc(*addr=0x56560171, *transl_addr=0x3ecab427, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560168)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99808, target: 0x56560168, origin: 0x3ecab429start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560173)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99798, target: 0x56560173, origin: 0x3ecab42eend fun: -> close, transl_length=11
end fun: -> 0x3ecab40f,   next_tu=0x56560173 (len: 35)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560168)
end fun: -> 0x00000000
ff = 266
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560168)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab439start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56560168, *transl_address=0x3ecab439)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCDAdEND FLAG ANALYSIS: (orig=0x056560168)0x89d0                    mov %edx, %eax                  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656016a)0x8078ff2f                cmp $0x2f, 0xff(%eax)           
leal-based check (opsize = 1)
: (orig=0x05656016e)0x8d50ff                  lea 0xff(%eax), %edx            
: (orig=0x056560171)0x75f5                    jnz +0xf5                       
action_jcc
start fun: action_jcc(*addr=0x56560171, *transl_addr=0x3ecab453, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560168)
end fun: -> 0x3ecab439
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560173)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99840, target: 0x56560173, origin: 0x3ecab45aend fun: -> close, transl_length=11
end fun: -> 0x3ecab439,   next_tu=0x56560173 (len: 37)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560173)
end fun: -> 0x00000000
ff = 267
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56560173)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab465start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56560173, *transl_address=0x3ecab465)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... compares reg 2 with reg 7

BEGIN FLAG ANALYSISddddddadddcAEND FLAG ANALYSIS: (orig=0x056560173)0x39d7                    cmp %edx, %edi                  
opcode escape found: 0f: (orig=0x056560175)0x0f44d0                  cmovz %eax, %edx                
: (orig=0x056560178)0xc60200                  mov $0x00, (%edx)               
leal-based check (opsize = 1)
: (orig=0x05656017b)0x89bea8010000            mov %edi, 0x000001a8(%esi)      
leal-based check (opsize = 4)
: (orig=0x056560181)0xe92affffff              jmp +0xffffff2a                 
original_addr=056560181 / addr=056560181
start fun: action_jmp(*addr=0x56560181, *transl_addr=0x3ecab496, length=5)
action_jmp
jump_target = 0ffffff2a + 056560181 + 05original jmp_target: 0x565600b0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565600b0)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x0565600b0)0x83c43c                  add $0x3c, %esp                 
: (orig=0x0565600b3)0x89f0                    mov %esi, %eax                  
: (orig=0x0565600b5)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x0565600b6)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x0565600b7)0x5f                      pop %edi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x0565600b8)0x5d                      pop %ebp                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x0565600b9)0xc20c00                  ret $0x000c                     
start fun: action_ret(*addr=0x565600b9, *transl_addr=0x3ecab4e7, length=3)
we must remove additional bytes: 12
end fun: -> close, transl_length=22
end fun: -> 0x3ecab465,   next_tu=0x565600bc (len: 152)
ff = 268
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b518)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab504start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b518, *transl_address=0x3ecab504)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCDAaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655b518)0x83ec0c                  sub $0x0c, %esp                 
: (orig=0x05655b51b)0x85c0                    test %eax, %eax                 
: (orig=0x05655b51d)0x89c7                    mov %eax, %edi                  
opcode escape found: 0f: (orig=0x05655b51f)0x0f84db0c0000            jz +0x00000cdb                  
action_jcc
start fun: action_jcc(*addr=0x5655b51f, *transl_addr=0x3ecab50b, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c200)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99840, target: 0x5655c200, origin: 0x3ecab50dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b525)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99808, target: 0x5655b525, origin: 0x3ecab512end fun: -> close, transl_length=11
end fun: -> 0x3ecab504,   next_tu=0x5655b525 (len: 18)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b525)
end fun: -> 0x00000000
ff = 269
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b525)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab51dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b525, *transl_address=0x3ecab51d)
end fun:  
opcode escape found: 0fopcode escape found: 0fprefix found: 066opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
prefix found: 066opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAddaddddddddEND FLAG ANALYSIS: (orig=0x05655b525)0x8b5508                  mov 0x08(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655b528)0x8b4d08                  mov 0x08(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655b52b)0x8b421c                  mov 0x1c(%edx), %eax            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655b52e)0x0fb77130                movzx 0x30(%ecx), %esi          
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655b532)0x0fb75214                movzx 0x14(%edx), %edx          
leal-based check (opsize = 4)
: (orig=0x05655b536)0x898754010000            mov %eax, 0x00000154(%edi)      
leal-based check (opsize = 4)
: (orig=0x05655b53c)0x8b4120                  mov 0x20(%ecx), %eax            
leal-based check (opsize = 4)
prefix found: 066: (orig=0x05655b53f)0x6689b758010000          mov %esi, 0x00000158(%di)       
leal-based check (opsize = 4)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655b546)0xc1e605                  shl $0x05, %esi                 
prefix found: 066: (orig=0x05655b549)0x6689952effffff          mov %edx, 0xffffff2e(%bp)       
leal-based check (opsize = 4)
: (orig=0x05655b550)0x8d1406                  lea (%esi, %eax), %edx          
: (orig=0x05655b553)0x3b11                    cmp (%ecx), %edx                
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655b555)0x0f87cc070000            ja +0x000007cc                  
action_jcc
start fun: action_jcc(*addr=0x5655b555, *transl_addr=0x3ecab600, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd27)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99878, target: 0x5655bd27, origin: 0x3ecab602start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b55b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec998b0, target: 0x5655b55b, origin: 0x3ecab607end fun: -> close, transl_length=11
end fun: -> 0x3ecab51d,   next_tu=0x5655b55b (len: 238)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b55b)
end fun: -> 0x00000000
ff = 270
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b55b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab612start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b55b, *transl_address=0x3ecab612)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 
cmp reg mem

BEGIN FLAG ANALYSISCAaadaddaadddddddEND FLAG ANALYSIS: (orig=0x05655b55b)0x8d440104                lea 0x04(%ecx, %eax), %eax      
: (orig=0x05655b55f)0x898570ffffff            mov %eax, 0xffffff70(%ebp)      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655b565)0x0fb78758010000          movzx 0x00000158(%edi), %eax    
leal-based check (opsize = 4)
: (orig=0x05655b56c)0x89a528ffffff            mov %esp, 0xffffff28(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b572)0x898574ffffff            mov %eax, 0xffffff74(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b578)0x8d0440                  lea (%eax, %eax*2), %eax        
: (orig=0x05655b57b)0x8d04c51e000000          lea 0x0000001e(, %eax*8), %eax  
: (orig=0x05655b582)0x25f0ffff00              and $0x00fffff0, %eax           
: (orig=0x05655b587)0x29c4                    sub %eax, %esp                  
: (orig=0x05655b589)0x8b8574ffffff            mov 0xffffff74(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b58f)0x8d542443                lea 0x43(%esp), %edx            
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655b593)0x83e2f0                  and $0xf0, %edx                 
: (orig=0x05655b596)0x899554ffffff            mov %edx, 0xffffff54(%ebp)      
leal-based check (opsize = 4)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655b59c)0xc1e005                  shl $0x05, %eax                 
: (orig=0x05655b59f)0x038570ffffff            add 0xffffff70(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b5a5)0x398570ffffff            cmp %eax, 0xffffff70(%ebp)      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655b5ab)0x0f83f8090000            jnc +0x000009f8                 
action_jcc
start fun: action_jcc(*addr=0x5655b5ab, *transl_addr=0x3ecab706, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bfa9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99808, target: 0x5655bfa9, origin: 0x3ecab708start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5b1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec998e8, target: 0x5655b5b1, origin: 0x3ecab70dend fun: -> close, transl_length=11
end fun: -> 0x3ecab612,   next_tu=0x5655b5b1 (len: 255)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5b1)
end fun: -> 0x00000000
ff = 271
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5b1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab718start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b5b1, *transl_address=0x3ecab718)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 06 with reg 0

BEGIN FLAG ANALYSISCAddddddddEND FLAG ANALYSIS: (orig=0x05655b5b1)0x8d932c02feff            lea 0xfffe022c(%ebx), %edx      
: (orig=0x05655b5b7)0x8bb570ffffff            mov 0xffffff70(%ebp), %esi      
leal-based check (opsize = 4)
: (orig=0x05655b5bd)0xc68538ffffff00          mov $0x00, 0xffffff38(%ebp)     
leal-based check (opsize = 1)
: (orig=0x05655b5c4)0xc78568ffffff00000000    mov $0x00000000, 0xffffff68(%ebp) 
leal-based check (opsize = 4)
: (orig=0x05655b5ce)0xc78550ffffff07000000    mov $0x00000007, 0xffffff50(%ebp) 
leal-based check (opsize = 4)
: (orig=0x05655b5d8)0x899524ffffff            mov %edx, 0xffffff24(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b5de)0xeb42                    jmp +0x42                       
original_addr=05655b5de / addr=05655b5de
start fun: action_jmp(*addr=0x5655b5de, *transl_addr=0x3ecab7a9, length=2)
action_jmp
original jmp_target: 0x5655b622start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b622)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655b622)0x8b06                    mov (%esi), %eax                
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655b624)0x83f806                  cmp $0x06, %eax                 
opcode escape found: 0f: (orig=0x05655b627)0x0f84a3010000            jz +0x000001a3                  
action_jcc
start fun: action_jcc(*addr=0x5655b627, *transl_addr=0x3ecab7be, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7d0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec998b0, target: 0x5655b7d0, origin: 0x3ecab7c0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b62d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99920, target: 0x5655b62d, origin: 0x3ecab7c5end fun: -> close, transl_length=11
end fun: -> 0x3ecab718,   next_tu=0x5655b62d (len: 177)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7d0)
end fun: -> 0x00000000
ff = 272
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7d0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab7d0start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b7d0, *transl_address=0x3ecab7d0)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 
... compares reg 0 with reg 6

BEGIN FLAG ANALYSISCAaaaddddEND FLAG ANALYSIS: (orig=0x05655b7d0)0x8b4608                  mov 0x08(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655b7d3)0x898750010000            mov %eax, 0x00000150(%edi)      
leal-based check (opsize = 4)
: (orig=0x05655b7d9)0xe92afeffff              jmp +0xfffffe2a                 
original_addr=05655b7d9 / addr=05655b7d9
start fun: action_jmp(*addr=0x5655b7d9, *transl_addr=0x3ecab7fe, length=5)
action_jmp
jump_target = 0fffffe2a + 05655b7d9 + 05original jmp_target: 0x5655b608start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655b608)0x8b8574ffffff            mov 0xffffff74(%ebp), %eax      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655b60e)0x83c620                  add $0x20, %esi                 
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655b611)0xc1e005                  shl $0x05, %eax                 
: (orig=0x05655b614)0x038570ffffff            add 0xffffff70(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b61a)0x39c6                    cmp %eax, %esi                  
opcode escape found: 0f: (orig=0x05655b61c)0x0f83fe010000            jnc +0x000001fe                 
action_jcc
start fun: action_jcc(*addr=0x5655b61c, *transl_addr=0x3ecab83a, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b820)
end fun: -> 0x00000000
allocated trampoline: 0x3ec998e8, target: 0x5655b820, origin: 0x3ecab83cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b622)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99958, target: 0x5655b622, origin: 0x3ecab841end fun: -> close, transl_length=11
end fun: -> 0x3ecab7d0,   next_tu=0x5655b622 (len: 117)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b622)
end fun: -> 0x00000000
ff = 273
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b622)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab84cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b622, *transl_address=0x3ecab84c)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 06 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655b622)0x8b06                    mov (%esi), %eax                
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655b624)0x83f806                  cmp $0x06, %eax                 
opcode escape found: 0f: (orig=0x05655b627)0x0f84a3010000            jz +0x000001a3                  
action_jcc
start fun: action_jcc(*addr=0x5655b627, *transl_addr=0x3ecab861, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7d0)
end fun: -> 0x3ecab7d0
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b62d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec998b0, target: 0x5655b62d, origin: 0x3ecab868end fun: -> close, transl_length=11
end fun: -> 0x3ecab84c,   next_tu=0x5655b62d (len: 32)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b62d)
end fun: -> 0x00000000
ff = 274
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b62d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab873start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b62d, *transl_address=0x3ecab873)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCEND FLAG ANALYSIS: (orig=0x05655b62d)0x76b1                    jbe +0xb1                       
action_jcc
start fun: action_jcc(*addr=0x5655b62d, *transl_addr=0x3ecab873, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5e0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99958, target: 0x5655b5e0, origin: 0x3ecab875start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b62f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99990, target: 0x5655b62f, origin: 0x3ecab87aend fun: -> close, transl_length=11
end fun: -> 0x3ecab873,   next_tu=0x5655b62f (len: 11)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5e0)
end fun: -> 0x00000000
ff = 275
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5e0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab885start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b5e0, *transl_address=0x3ecab885)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 01 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655b5e0)0x83f801                  cmp $0x01, %eax                 
opcode escape found: 0f: (orig=0x05655b5e3)0x0f8407010000            jz +0x00000107                  
action_jcc
start fun: action_jcc(*addr=0x5655b5e3, *transl_addr=0x3ecab888, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6f0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec998b0, target: 0x5655b6f0, origin: 0x3ecab88astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5e9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec999c8, target: 0x5655b5e9, origin: 0x3ecab88fend fun: -> close, transl_length=11
end fun: -> 0x3ecab885,   next_tu=0x5655b5e9 (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5e9)
end fun: -> 0x00000000
ff = 276
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5e9)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab89astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b5e9, *transl_address=0x3ecab89a)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 02 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655b5e9)0x83f802                  cmp $0x02, %eax                 
: (orig=0x05655b5ec)0x751a                    jnz +0x1a                       
action_jcc
start fun: action_jcc(*addr=0x5655b5ec, *transl_addr=0x3ecab89d, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99958, target: 0x5655b608, origin: 0x3ecab89fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5ee)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99a00, target: 0x5655b5ee, origin: 0x3ecab8a4end fun: -> close, transl_length=11
end fun: -> 0x3ecab89a,   next_tu=0x5655b5ee (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x00000000
ff = 277
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab8afstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b608, *transl_address=0x3ecab8af)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 
... compares reg 0 with reg 6

BEGIN FLAG ANALYSISCAaaadEND FLAG ANALYSIS: (orig=0x05655b608)0x8b8574ffffff            mov 0xffffff74(%ebp), %eax      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655b60e)0x83c620                  add $0x20, %esi                 
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655b611)0xc1e005                  shl $0x05, %eax                 
: (orig=0x05655b614)0x038570ffffff            add 0xffffff70(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b61a)0x39c6                    cmp %eax, %esi                  
opcode escape found: 0f: (orig=0x05655b61c)0x0f83fe010000            jnc +0x000001fe                 
action_jcc
start fun: action_jcc(*addr=0x5655b61c, *transl_addr=0x3ecab8eb, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b820)
end fun: -> 0x00000000
allocated trampoline: 0x3ec999c8, target: 0x5655b820, origin: 0x3ecab8edstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b622)
end fun: -> 0x3ecab84c
end fun: -> close, transl_length=11
end fun: -> 0x3ecab8af,   next_tu=0x5655b622 (len: 71)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6f0)
end fun: -> 0x00000000
ff = 278
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b6f0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab8fdstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b6f0, *transl_address=0x3ecab8fd)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 0

BEGIN FLAG ANALYSISAdaadddEND FLAG ANALYSIS: (orig=0x05655b6f0)0x8b83bcfcffff            mov 0xfffffcbc(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b6f6)0x8b4e1c                  mov 0x1c(%esi), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655b6f9)0x89856cffffff            mov %eax, 0xffffff6c(%ebp)      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655b6ff)0x83e801                  sub $0x01, %eax                 
: (orig=0x05655b702)0x85c8                    test %ecx, %eax                 
PATCHING TST REG REG
: (orig=0x05655b704)0x898564ffffff            mov %eax, 0xffffff64(%ebp)      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655b70a)0x0f85eb080000            jnz +0x000008eb                 
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655b70a, *transl_addr=0x3ecab96d, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bffb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99958, target: 0x5655bffb, origin: 0x3ecab96fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b710)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99a38, target: 0x5655b710, origin: 0x3ecab974end fun: -> close, transl_length=11
end fun: -> 0x3ecab8fd,   next_tu=0x5655b710 (len: 123)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b710)
end fun: -> 0x00000000
ff = 279
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b710)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab97fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b710, *transl_address=0x3ecab97f)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 1

BEGIN FLAG ANALYSISCAadddadEND FLAG ANALYSIS: (orig=0x05655b710)0x8b4604                  mov 0x04(%esi), %eax            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655b713)0x83e901                  sub $0x01, %ecx                 
: (orig=0x05655b716)0x8b5608                  mov 0x08(%esi), %edx            
leal-based check (opsize = 4)
: (orig=0x05655b719)0x898560ffffff            mov %eax, 0xffffff60(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b71f)0x89d0                    mov %edx, %eax                  
: (orig=0x05655b721)0x2b8560ffffff            sub 0xffffff60(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b727)0x85c1                    test %eax, %ecx                 
opcode escape found: 0f: (orig=0x05655b729)0x0f85d6080000            jnz +0x000008d6                 
action_jcc
start fun: action_jcc(*addr=0x5655b729, *transl_addr=0x3ecab9e2, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c005)
end fun: -> 0x00000000
allocated trampoline: 0x3ec998b0, target: 0x5655c005, origin: 0x3ecab9e4start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b72f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99a70, target: 0x5655b72f, origin: 0x3ecab9e9end fun: -> close, transl_length=11
end fun: -> 0x3ecab97f,   next_tu=0x5655b72f (len: 110)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b72f)
end fun: -> 0x00000000
ff = 280
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b72f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecab9f4start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b72f, *transl_address=0x3ecab9f4)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 

BEGIN FLAG ANALYSISCD4.1.aaddadaadddadaddddadEND FLAG ANALYSIS: (orig=0x05655b72f)0x8b8d68ffffff            mov 0xffffff68(%ebp), %ecx      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655b735)0x838568ffffff01          add $0x01, 0xffffff68(%ebp)     
leal-based check (opsize = 4)
: (orig=0x05655b73c)0x8d0449                  lea (%ecx, %ecx*2), %eax        
: (orig=0x05655b73f)0x8b8d54ffffff            mov 0xffffff54(%ebp), %ecx      
leal-based check (opsize = 4)
: (orig=0x05655b745)0x8d04c1                  lea (%ecx, %eax*8), %eax        
: (orig=0x05655b748)0x8b8d6cffffff            mov 0xffffff6c(%ebp), %ecx      
leal-based check (opsize = 4)
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
: (orig=0x05655b74e)0xf7d9                    neg %ecx                        
: (orig=0x05655b750)0x898d6cffffff            mov %ecx, 0xffffff6c(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b756)0x21d1                    and %edx, %ecx                  
: (orig=0x05655b758)0x898d58ffffff            mov %ecx, 0xffffff58(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b75e)0x8908                    mov %ecx, (%eax)                
leal-based check (opsize = 4)
: (orig=0x05655b760)0x8b4e10                  mov 0x10(%esi), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655b763)0x01d1                    add %edx, %ecx                  
: (orig=0x05655b765)0x035614                  add 0x14(%esi), %edx            
leal-based check (opsize = 4)
: (orig=0x05655b768)0x894808                  mov %ecx, 0x08(%eax)            
leal-based check (opsize = 4)
: (orig=0x05655b76b)0x038d64ffffff            add 0xffffff64(%ebp), %ecx      
leal-based check (opsize = 4)
: (orig=0x05655b771)0x89500c                  mov %edx, 0x0c(%eax)            
leal-based check (opsize = 4)
: (orig=0x05655b774)0x8b9560ffffff            mov 0xffffff60(%ebp), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b77a)0x238d6cffffff            and 0xffffff6c(%ebp), %ecx      
leal-based check (opsize = 4)
: (orig=0x05655b780)0x23956cffffff            and 0xffffff6c(%ebp), %edx      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655b786)0x83bd68ffffff01          cmp $0x01, 0xffffff68(%ebp)     
leal-based check (opsize = 4)
: (orig=0x05655b78d)0x894804                  mov %ecx, 0x04(%eax)            
SAV
leal-based check (opsize = 4)
: (orig=0x05655b790)0x895010                  mov %edx, 0x10(%eax)            
leal-based check (opsize = 4)
RST
: (orig=0x05655b793)0x761e                    jbe +0x1e                       
action_jcc
start fun: action_jcc(*addr=0x5655b793, *transl_addr=0x3ecabbd9, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7b3)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99a38, target: 0x5655b7b3, origin: 0x3ecabbdbstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b795)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99aa8, target: 0x5655b795, origin: 0x3ecabbe0end fun: -> close, transl_length=11
end fun: -> 0x3ecab9f4,   next_tu=0x5655b795 (len: 496)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7b3)
end fun: -> 0x00000000
ff = 281
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7b3)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecabbebstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b7b3, *transl_address=0x3ecabbeb)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode table: 0x00244bf8 -> 0x00216dc0 (0x00216ed8)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 
... compares reg 0 with reg 6

BEGIN FLAG ANALYSISCAaaadddaaaaddEND FLAG ANALYSIS: (orig=0x05655b7b3)0x8b4e18                  mov 0x18(%esi), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655b7b6)0xba40625173              mov $0x73516240, %edx           
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655b7bb)0x83e107                  and $0x07, %ecx                 
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655b7be)0xc1e102                  shl $0x02, %ecx                 
opcode table: 0x00244bf8 -> 0x00216dc0 (0x00216ed8)
: (orig=0x05655b7c1)0xd3fa                    sar %cl, %edx                   
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655b7c3)0x83e20f                  and $0x0f, %edx                 
: (orig=0x05655b7c6)0x895014                  mov %edx, 0x14(%eax)            
leal-based check (opsize = 4)
: (orig=0x05655b7c9)0xe93afeffff              jmp +0xfffffe3a                 
original_addr=05655b7c9 / addr=05655b7c9
start fun: action_jmp(*addr=0x5655b7c9, *transl_addr=0x3ecabc23, length=5)
action_jmp
jump_target = 0fffffe3a + 05655b7c9 + 05original jmp_target: 0x5655b608start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x3ecab8af
translated jmp_target: 0x3ecab8afend fun: -> close, transl_length=5
prefix found: 066: (orig=0x05655b7ce)0x6690                    nop                             
: (orig=0x05655b7d0)0x8b4608                  mov 0x08(%esi), %eax            
: (orig=0x05655b7d3)0x898750010000            mov %eax, 0x00000150(%edi)      
: (orig=0x05655b7d9)0xe92afeffff              jmp +0xfffffe2a                 
Warning!!!!!
original_addr=05655b7d9 / addr=05655b7d9
start fun: action_jmp(*addr=0x5655b7d9, *transl_addr=0x3ecabc35, length=5)
action_jmp
jump_target = 0fffffe2a + 05655b7d9 + 05original jmp_target: 0x5655b608start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x3ecab8af
translated jmp_target: 0x3ecab8afend fun: -> close, transl_length=5
prefix found: 066: (orig=0x05655b7de)0x6690                    nop                             
: (orig=0x05655b7e0)0x8b4608                  mov 0x08(%esi), %eax            
finishing TU because instruction limit was hit, invokingtranslation function on 0x5655b7e3allocated trampoline: 0x3ec99a70, target: 0x5655b7e3, origin: 0x3ecabc48end fun: -> 0x3ecabbeb,   next_tu=0x5655b7e3 (len: 85)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b795)
end fun: -> 0x00000000
ff = 282
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b795)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecabc4cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b795, *transl_address=0x3ecabc4c)
end fun:  
opcode escape found: 0fopcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode table: 0x00244bf8 -> 0x00216dc0 (0x00216ed8)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 
... compares reg 0 with reg 6

BEGIN FLAG ANALYSISCAaaadddaaaadddcDAddEND FLAG ANALYSIS: (orig=0x05655b795)0x8b9558ffffff            mov 0xffffff58(%ebp), %edx      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655b79b)0x0fb68d38ffffff          movzx 0xffffff38(%ebp), %ecx    
leal-based check (opsize = 4)
: (orig=0x05655b7a2)0x3b50ec                  cmp 0xec(%eax), %edx            
leal-based check (opsize = 4)
: (orig=0x05655b7a5)0xba01000000              mov $0x00000001, %edx           
opcode escape found: 0f: (orig=0x05655b7aa)0x0f45ca                  cmovnz %edx, %ecx               
: (orig=0x05655b7ad)0x888d38ffffff            mov %ecx, 0xffffff38(%ebp)      
leal-based check (opsize = 1)
: (orig=0x05655b7b3)0x8b4e18                  mov 0x18(%esi), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655b7b6)0xba40625173              mov $0x73516240, %edx           
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655b7bb)0x83e107                  and $0x07, %ecx                 
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655b7be)0xc1e102                  shl $0x02, %ecx                 
opcode table: 0x00244bf8 -> 0x00216dc0 (0x00216ed8)
: (orig=0x05655b7c1)0xd3fa                    sar %cl, %edx                   
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655b7c3)0x83e20f                  and $0x0f, %edx                 
: (orig=0x05655b7c6)0x895014                  mov %edx, 0x14(%eax)            
leal-based check (opsize = 4)
: (orig=0x05655b7c9)0xe93afeffff              jmp +0xfffffe3a                 
original_addr=05655b7c9 / addr=05655b7c9
start fun: action_jmp(*addr=0x5655b7c9, *transl_addr=0x3ecabcee, length=5)
action_jmp
jump_target = 0fffffe3a + 05655b7c9 + 05original jmp_target: 0x5655b608start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x3ecab8af
translated jmp_target: 0x3ecab8afend fun: -> close, transl_length=5
prefix found: 066: (orig=0x05655b7ce)0x6690                    nop                             
: (orig=0x05655b7d0)0x8b4608                  mov 0x08(%esi), %eax            
: (orig=0x05655b7d3)0x898750010000            mov %eax, 0x00000150(%edi)      
: (orig=0x05655b7d9)0xe92afeffff              jmp +0xfffffe2a                 
Warning!!!!!
original_addr=05655b7d9 / addr=05655b7d9
start fun: action_jmp(*addr=0x5655b7d9, *transl_addr=0x3ecabd00, length=5)
action_jmp
jump_target = 0fffffe2a + 05655b7d9 + 05original jmp_target: 0x5655b608start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x3ecab8af
translated jmp_target: 0x3ecab8afend fun: -> close, transl_length=5
prefix found: 066: (orig=0x05655b7de)0x6690                    nop                             
: (orig=0x05655b7e0)0x8b4608                  mov 0x08(%esi), %eax            
finishing TU because instruction limit was hit, invokingtranslation function on 0x5655b7e3allocated trampoline: 0x3ec99a38, target: 0x5655b7e3, origin: 0x3ecabd13end fun: -> 0x3ecabc4c,   next_tu=0x5655b7e3 (len: 191)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5ee)
end fun: -> 0x00000000
ff = 283
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b5ee)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecabd17start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b5ee, *transl_address=0x3ecabd17)
end fun:  
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
prefix found: 066opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 
... compares reg 0 with reg 6

BEGIN FLAG ANALYSISCAaaadddadddEND FLAG ANALYSIS: (orig=0x05655b5ee)0x8b4608                  mov 0x08(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655b5f1)0x894708                  mov %eax, 0x08(%edi)            
leal-based check (opsize = 4)
: (orig=0x05655b5f4)0x8b4614                  mov 0x14(%esi), %eax            
leal-based check (opsize = 4)
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
: (orig=0x05655b5f7)0xc1e803                  shr $0x03, %eax                 
prefix found: 066: (orig=0x05655b5fa)0x6689875a010000          mov %eax, 0x0000015a(%di)       
leal-based check (opsize = 4)
: (orig=0x05655b601)0x8db42600000000          lea 0x00000000(%esi), %esi      
: (orig=0x05655b608)0x8b8574ffffff            mov 0xffffff74(%ebp), %eax      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655b60e)0x83c620                  add $0x20, %esi                 
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655b611)0xc1e005                  shl $0x05, %eax                 
: (orig=0x05655b614)0x038570ffffff            add 0xffffff70(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b61a)0x39c6                    cmp %eax, %esi                  
opcode escape found: 0f: (orig=0x05655b61c)0x0f83fe010000            jnc +0x000001fe                 
action_jcc
start fun: action_jcc(*addr=0x5655b61c, *transl_addr=0x3ecabdb5, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b820)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99aa8, target: 0x5655b820, origin: 0x3ecabdb7start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b622)
end fun: -> 0x3ecab84c
end fun: -> close, transl_length=11
end fun: -> 0x3ecabd17,   next_tu=0x5655b622 (len: 169)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b62f)
end fun: -> 0x00000000
ff = 284
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b62f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecabdc7start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b62f, *transl_address=0x3ecabdc7)
end fun:  
opcode escape found: 0f

 opt flags pass 
... cmp imm 06474e551 with eax

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655b62f)0x3d51e57464              cmp $0x6474e551, %eax           
opcode escape found: 0f: (orig=0x05655b634)0x0f84be010000            jz +0x000001be                  
action_jcc
start fun: action_jcc(*addr=0x5655b634, *transl_addr=0x3ecabdcc, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7f8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99a00, target: 0x5655b7f8, origin: 0x3ecabdcestart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b63a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99ae0, target: 0x5655b63a, origin: 0x3ecabdd3end fun: -> close, transl_length=11
end fun: -> 0x3ecabdc7,   next_tu=0x5655b63a (len: 16)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b63a)
end fun: -> 0x00000000
ff = 285
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b63a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecabddestart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b63a, *transl_address=0x3ecabdde)
end fun:  
opcode escape found: 0f

 opt flags pass 
... cmp imm 06474e552 with eax

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655b63a)0x3d52e57464              cmp $0x6474e552, %eax           
opcode escape found: 0f: (orig=0x05655b63f)0x0f849b010000            jz +0x0000019b                  
action_jcc
start fun: action_jcc(*addr=0x5655b63f, *transl_addr=0x3ecabde3, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7e0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99990, target: 0x5655b7e0, origin: 0x3ecabde5start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b645)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99b18, target: 0x5655b645, origin: 0x3ecabdeaend fun: -> close, transl_length=11
end fun: -> 0x3ecabdde,   next_tu=0x5655b645 (len: 16)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b645)
end fun: -> 0x00000000
ff = 286
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b645)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecabdf5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b645, *transl_address=0x3ecabdf5)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 07 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655b645)0x83f807                  cmp $0x07, %eax                 
: (orig=0x05655b648)0x75be                    jnz +0xbe                       
action_jcc
start fun: action_jcc(*addr=0x5655b648, *transl_addr=0x3ecabdf8, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x3ecab8af
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b64a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99ae0, target: 0x5655b64a, origin: 0x3ecabdffend fun: -> close, transl_length=11
end fun: -> 0x3ecabdf5,   next_tu=0x5655b64a (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7f8)
end fun: -> 0x00000000
ff = 287
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7f8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecabe0astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b7f8, *transl_address=0x3ecabe0a)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 
... compares reg 0 with reg 6

BEGIN FLAG ANALYSISCAaaaddddEND FLAG ANALYSIS: (orig=0x05655b7f8)0x8b5618                  mov 0x18(%esi), %edx            
leal-based check (opsize = 4)
: (orig=0x05655b7fb)0x899550ffffff            mov %edx, 0xffffff50(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b801)0xe902feffff              jmp +0xfffffe02                 
original_addr=05655b801 / addr=05655b801
start fun: action_jmp(*addr=0x5655b801, *transl_addr=0x3ecabe38, length=5)
action_jmp
jump_target = 0fffffe02 + 05655b801 + 05original jmp_target: 0x5655b608start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x3ecab8af
translated jmp_target: 0x3ecab8afend fun: -> close, transl_length=5
prefix found: 066: (orig=0x05655b806)0x6690                    nop                             
: (orig=0x05655b808)0x8b5608                  mov 0x08(%esi), %edx            
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655b80b)0x83e801                  sub $0x01, %eax                 
: (orig=0x05655b80e)0x21d0                    and %edx, %eax                  
: (orig=0x05655b810)0x89873c020000            mov %eax, 0x0000023c(%edi)      
: (orig=0x05655b816)0xe95afeffff              jmp +0xfffffe5a                 
original_addr=05655b816 / addr=05655b816
start fun: action_jmp(*addr=0x5655b816, *transl_addr=0x3ecabe4f, length=5)
action_jmp
jump_target = 0fffffe5a + 05655b816 + 05original jmp_target: 0x5655b675start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b675)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
finishing TU because instruction limit was hit, invokingtranslation function on 0x5655b675allocated trampoline: 0x3ec99b18, target: 0x5655b675, origin: 0x3ecabe57end fun: -> 0x3ecabe0a,   next_tu=0x5655b675 (len: 69)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7e0)
end fun: -> 0x00000000
ff = 288
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b7e0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecabe5bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b7e0, *transl_address=0x3ecabe5b)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 
... compares reg 0 with reg 6

BEGIN FLAG ANALYSISCAaaaddddddEND FLAG ANALYSIS: (orig=0x05655b7e0)0x8b4608                  mov 0x08(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655b7e3)0x898748020000            mov %eax, 0x00000248(%edi)      
leal-based check (opsize = 4)
: (orig=0x05655b7e9)0x8b4614                  mov 0x14(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655b7ec)0x89874c020000            mov %eax, 0x0000024c(%edi)      
leal-based check (opsize = 4)
: (orig=0x05655b7f2)0xe911feffff              jmp +0xfffffe11                 
original_addr=05655b7f2 / addr=05655b7f2
start fun: action_jmp(*addr=0x5655b7f2, *transl_addr=0x3ecabeb7, length=5)
action_jmp
jump_target = 0fffffe11 + 05655b7f2 + 05original jmp_target: 0x5655b608start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x3ecab8af
translated jmp_target: 0x3ecab8afend fun: -> close, transl_length=5
: (orig=0x05655b7f7)0x90                      nop                             
: (orig=0x05655b7f8)0x8b5618                  mov 0x18(%esi), %edx            
: (orig=0x05655b7fb)0x899550ffffff            mov %edx, 0xffffff50(%ebp)      
: (orig=0x05655b801)0xe902feffff              jmp +0xfffffe02                 
Warning!!!!!
original_addr=05655b801 / addr=05655b801
start fun: action_jmp(*addr=0x5655b801, *transl_addr=0x3ecabec8, length=5)
action_jmp
jump_target = 0fffffe02 + 05655b801 + 05original jmp_target: 0x5655b608start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b608)
end fun: -> 0x3ecab8af
translated jmp_target: 0x3ecab8afend fun: -> close, transl_length=5
prefix found: 066: (orig=0x05655b806)0x6690                    nop                             
: (orig=0x05655b808)0x8b5608                  mov 0x08(%esi), %edx            
finishing TU because instruction limit was hit, invokingtranslation function on 0x5655b80ballocated trampoline: 0x3ec99a00, target: 0x5655b80b, origin: 0x3ecabedbend fun: -> 0x3ecabe5b,   next_tu=0x5655b80b (len: 120)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b820)
end fun: -> 0x00000000
ff = 289
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b820)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecabedfstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b820, *transl_address=0x3ecabedf)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655b820)0x8b8568ffffff            mov 0xffffff68(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b826)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655b828)0x0f847b070000            jz +0x0000077b                  
action_jcc
start fun: action_jcc(*addr=0x5655b828, *transl_addr=0x3ecabefb, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bfa9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99990, target: 0x5655bfa9, origin: 0x3ecabefdstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b82e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99b50, target: 0x5655b82e, origin: 0x3ecabf02end fun: -> close, transl_length=11
end fun: -> 0x3ecabedf,   next_tu=0x5655b82e (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b82e)
end fun: -> 0x00000000
ff = 290
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b82e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecabf0dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b82e, *transl_address=0x3ecabf0d)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCD1.adddddddddEND FLAG ANALYSIS: (orig=0x05655b82e)0x8b8d68ffffff            mov 0xffffff68(%ebp), %ecx      
leal-based check (opsize = 4)
: (orig=0x05655b834)0x8bb554ffffff            mov 0xffffff54(%ebp), %esi      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655b83a)0x0fb7952effffff          movzx 0xffffff2e(%ebp), %edx    
leal-based check (opsize = 4)
: (orig=0x05655b841)0x8d4c49fd                lea 0xfd(%ecx, %ecx*2), %ecx    
: (orig=0x05655b845)0x8d0cce                  lea (%esi, %ecx*8), %ecx        
: (orig=0x05655b848)0x89956cffffff            mov %edx, 0xffffff6c(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b84e)0x8b410c                  mov 0x0c(%ecx), %eax            
leal-based check (opsize = 4)
: (orig=0x05655b851)0x8b16                    mov (%esi), %edx                
leal-based check (opsize = 4)
: (orig=0x05655b853)0x898d60ffffff            mov %ecx, 0xffffff60(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b859)0x29d0                    sub %edx, %eax                  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655b85b)0x83bd6cffffff03          cmp $0x03, 0xffffff6c(%ebp)     
leal-based check (opsize = 4)
: (orig=0x05655b862)0x898574ffffff            mov %eax, 0xffffff74(%ebp)      
SAV
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x05655b868)0x0f85cc0c0000            jnz +0x00000ccc                 
action_jcc
start fun: action_jcc(*addr=0x5655b868, *transl_addr=0x3ecac023, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c53a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec999c8, target: 0x5655c53a, origin: 0x3ecac025start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b86e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99b88, target: 0x5655b86e, origin: 0x3ecac02aend fun: -> close, transl_length=11
end fun: -> 0x3ecabf0d,   next_tu=0x5655b86e (len: 289)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c53a)
end fun: -> 0x00000000
ff = 291
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c53a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac035start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655c53a, *transl_address=0x3ecac035)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x00217040)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00245198 -> 0x00217040 (0x00217040)
: (orig=0x05655c53a)0xf7451800000020          test $0x20000000, 0x18(%ebp)    
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655c541)0x0f8405010000            jz +0x00000105                  
action_jcc
start fun: action_jcc(*addr=0x5655c541, *transl_addr=0x3ecac04d, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c64c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99b50, target: 0x5655c64c, origin: 0x3ecac04fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c547)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99bc0, target: 0x5655c547, origin: 0x3ecac054end fun: -> close, transl_length=11
end fun: -> 0x3ecac035,   next_tu=0x5655c547 (len: 35)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c547)
end fun: -> 0x00000000
ff = 292
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c547)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac05fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655c547, *transl_address=0x3ecac05f)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x00216730)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 
... compares reg 0 with reg 6

BEGIN FLAG ANALYSISCAddddddaaaaddaaddaEND FLAG ANALYSIS: (orig=0x05655c547)0x0317                    add (%edi), %edx                
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655c549)0x0fb68795010000          movzx 0x00000195(%edi), %eax    
leal-based check (opsize = 4)
: (orig=0x05655c550)0x8997ac010000            mov %edx, 0x000001ac(%edi)      
leal-based check (opsize = 4)
: (orig=0x05655c556)0x039574ffffff            add 0xffffff74(%ebp), %edx      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655c55c)0x83e0bf                  and $0xbf, %eax                 
: (orig=0x05655c55f)0x8997b0010000            mov %edx, 0x000001b0(%edi)      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655c565)0x0fb69538ffffff          movzx 0xffffff38(%ebp), %edx    
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216730)
: (orig=0x05655c56c)0x83f201                  xor $0x01, %edx                 
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655c56f)0x83e201                  and $0x01, %edx                 
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655c572)0xc1e206                  shl $0x06, %edx                 
: (orig=0x05655c575)0x09d0                    or %edx, %eax                   
: (orig=0x05655c577)0x888795010000            mov %eax, 0x00000195(%edi)      
leal-based check (opsize = 1)
: (orig=0x05655c57d)0xe935f4ffff              jmp +0xfffff435                 
original_addr=05655c57d / addr=05655c57d
start fun: action_jmp(*addr=0x5655c57d, *transl_addr=0x3ecac11c, length=5)
action_jmp
jump_target = 0fffff435 + 05655c57d + 05original jmp_target: 0x5655b9b7start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9b7)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655b9b7)0x8b9568ffffff            mov 0xffffff68(%ebp), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b9bd)0x8d0452                  lea (%edx, %edx*2), %eax        
: (orig=0x05655b9c0)0x8b9554ffffff            mov 0xffffff54(%ebp), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b9c6)0x8d04c2                  lea (%edx, %eax*8), %eax        
: (orig=0x05655b9c9)0x39c6                    cmp %eax, %esi                  
opcode escape found: 0f: (orig=0x05655b9cb)0x0f8395000000            jnc +0x00000095                 
action_jcc
start fun: action_jcc(*addr=0x5655b9cb, *transl_addr=0x3ecac15a, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba66)
end fun: -> 0x00000000
allocated trampoline: 0x3ec999c8, target: 0x5655ba66, origin: 0x3ecac15cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9d1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99bf8, target: 0x5655b9d1, origin: 0x3ecac161end fun: -> close, transl_length=11
end fun: -> 0x3ecac05f,   next_tu=0x5655b9d1 (len: 262)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9d1)
end fun: -> 0x00000000
ff = 293
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9d1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac16cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b9d1, *transl_address=0x3ecac16c)
end fun:  
opcode escape found: 0f

 opt flags pass 
... compares reg 0 with reg 2

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05655b9d1)0x8b5604                  mov 0x04(%esi), %edx            
leal-based check (opsize = 4)
: (orig=0x05655b9d4)0x8b06                    mov (%esi), %eax                
leal-based check (opsize = 4)
: (orig=0x05655b9d6)0x39c2                    cmp %eax, %edx                  
opcode escape found: 0f: (orig=0x05655b9d8)0x0f8609ffffff            jbe +0xffffff09                 
action_jcc
start fun: action_jcc(*addr=0x5655b9d8, *transl_addr=0x3ecac194, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b8e7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99bc0, target: 0x5655b8e7, origin: 0x3ecac196start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9de)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99c30, target: 0x5655b9de, origin: 0x3ecac19bend fun: -> close, transl_length=11
end fun: -> 0x3ecac16c,   next_tu=0x5655b9de (len: 51)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9de)
end fun: -> 0x00000000
ff = 294
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9de)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac1a6start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b9de, *transl_address=0x3ecac1a6)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x00217040)


 opt flags pass 
... test imm 0fff with reg!=eax 5

BEGIN FLAG ANALYSISCDAddddddddddddadddddddadEND FLAG ANALYSIS: (orig=0x05655b9de)0x8b4e10                  mov 0x10(%esi), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655b9e1)0x29c2                    sub %eax, %edx                  
: (orig=0x05655b9e3)0x894c2414                mov %ecx, 0x14(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655b9e7)0x8b8d4cffffff            mov 0xffffff4c(%ebp), %ecx      
leal-based check (opsize = 4)
: (orig=0x05655b9ed)0xc744240c12080000        mov $0x00000812, 0x0c(%esp)     
leal-based check (opsize = 4)
: (orig=0x05655b9f5)0x894c2410                mov %ecx, 0x10(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655b9f9)0x8b4e14                  mov 0x14(%esi), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655b9fc)0x89542404                mov %edx, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655ba00)0x894c2408                mov %ecx, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655ba04)0x0307                    add (%edi), %eax                
leal-based check (opsize = 4)
: (orig=0x05655ba06)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655ba09)0xe8d2170100              call +0x000117d2                
action_call
start fun: action_call(*addr=0x5655ba09, *transl_addr=0x3ecac282, length=5)
original call_target: 0x5656d1e0return_address = 05655ba0e
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d1e0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d1e0)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05656d1e1)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656d1e2)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05656d1e3)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05656d1e4)0x8b5c2414                mov 0x14(%esp), %ebx            
leal-based check (opsize = 4)
: (orig=0x05656d1e8)0x8b4c2418                mov 0x18(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656d1ec)0x8b54241c                mov 0x1c(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656d1f0)0x8b742420                mov 0x20(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656d1f4)0x8b7c2424                mov 0x24(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x05656d1f8)0x8b6c2428                mov 0x28(%esp), %ebp            
leal-based check (opsize = 4)
opcode table: 0x00245198 -> 0x00217040 (0x00217040)
: (orig=0x05656d1fc)0xf7c5ff0f0000            test $0x00000fff, %ebp          
: (orig=0x05656d202)0xb8eaffffff              mov $0xffffffea, %eax           
: (orig=0x05656d207)0x750a                    jnz +0x0a                       
action_jcc
start fun: action_jcc(*addr=0x5656d207, *transl_addr=0x3ecac36a, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d213)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99bf8, target: 0x5656d213, origin: 0x3ecac36cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d209)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99c68, target: 0x5656d209, origin: 0x3ecac371end fun: -> close, transl_length=11
end fun: -> 0x3ecac1a6,   next_tu=0x5656d209 (len: 463)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d209)
end fun: -> 0x00000000
ff = 295
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d209)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac37cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d209, *transl_address=0x3ecac37c)
end fun:  
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)


 opt flags pass 

BEGIN FLAG ANALYSISBDAEND FLAG ANALYSISopcode table: 0x00244928 -> 0x002168c0 (0x00216988)
: (orig=0x05656d209)0xc1ed0c                  shr $0x0c, %ebp                 
: (orig=0x05656d20c)0xb8c0000000              mov $0x000000c0, %eax           
: (orig=0x05656d211)0xcd80                    int $0x80                       
closing TU upon request, invoking translation function on 0x5656d213allocated trampoline: 0x3ec99c30, target: 0x5656d213, origin: 0x3ecac3b5end fun: -> 0x3ecac37c,   next_tu=0x5656d213 (len: 49)
guest mmap
result = 08048000
Marking 08048000 as allocated
THE 8 ENTRIES:
 (08048000,08049000) (0a000000,0a020cc8) (040000000,070000000) (056555000,056574628) (056575000,056576918) (078000000,078010000) (080000000,081000000) (090000000,0b0000000)address space overlaps at 3
TOTAL USED 1359 MB

start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d213)
end fun: -> 0x00000000
ff = 296
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d213)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac3b9start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d213, *transl_address=0x3ecac3b9)
end fun:  


 opt flags pass 
... cmp imm 0fffff000 with eax

BEGIN FLAG ANALYSISCAddddEND FLAG ANALYSIS: (orig=0x05656d213)0x5f                      pop %edi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656d214)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656d215)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656d216)0x5d                      pop %ebp                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656d217)0x3d00f0ffff              cmp $0xfffff000, %eax           
: (orig=0x05656d21c)0x7701                    ja +0x01                        
action_jcc
start fun: action_jcc(*addr=0x5656d21c, *transl_addr=0x3ecac40a, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d21f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99c68, target: 0x5656d21f, origin: 0x3ecac40cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d21e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99ca0, target: 0x5656d21e, origin: 0x3ecac411end fun: -> close, transl_length=11
end fun: -> 0x3ecac3b9,   next_tu=0x5656d21e (len: 92)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d21e)
end fun: -> 0x00000000
ff = 297
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d21e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac41cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d21e, *transl_address=0x3ecac41c)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdEND FLAG ANALYSIS: (orig=0x05656d21e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656d21e, *transl_addr=0x3ecac41c, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecac41c,   next_tu=0x5656d21f (len: 14)
ff = 298
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba0e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac431start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ba0e, *transl_address=0x3ecac431)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 0ffffffff with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655ba0e)0x83f8ff                  cmp $0xff, %eax                 
opcode escape found: 0f: (orig=0x05655ba11)0x0f85d0feffff            jnz +0xfffffed0                 
action_jcc
start fun: action_jcc(*addr=0x5655ba11, *transl_addr=0x3ecac434, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b8e7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99ca0, target: 0x5655b8e7, origin: 0x3ecac436start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba17)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99c30, target: 0x5655ba17, origin: 0x3ecac43bend fun: -> close, transl_length=11
end fun: -> 0x3ecac431,   next_tu=0x5655ba17 (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b8e7)
end fun: -> 0x00000000
ff = 299
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b8e7)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac446start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b8e7, *transl_address=0x3ecac446)
end fun:  


 opt flags pass 
... test imm8 04 with eax

BEGIN FLAG ANALYSISAdadEND FLAG ANALYSIS: (orig=0x05655b8e7)0x8b4614                  mov 0x14(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655b8ea)0xa804                    test $0x04, %al                 
PATCHING TEST IMM REG
: (orig=0x05655b8ec)0x898524ffffff            mov %eax, 0xffffff24(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b8f2)0x740b                    jz +0x0b                        
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655b8f2, *transl_addr=0x3ecac482, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b8ff)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99cd8, target: 0x5655b8ff, origin: 0x3ecac484start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b8f4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99d10, target: 0x5655b8f4, origin: 0x3ecac489end fun: -> close, transl_length=11
end fun: -> 0x3ecac446,   next_tu=0x5655b8f4 (len: 71)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b8f4)
end fun: -> 0x00000000
ff = 300
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b8f4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac494start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b8f4, *transl_address=0x3ecac494)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAddadEND FLAG ANALYSIS: (orig=0x05655b8f4)0x8b4604                  mov 0x04(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655b8f7)0x0307                    add (%edi), %eax                
leal-based check (opsize = 4)
: (orig=0x05655b8f9)0x8987b4010000            mov %eax, 0x000001b4(%edi)      
leal-based check (opsize = 4)
: (orig=0x05655b8ff)0x8b8750010000            mov 0x00000150(%edi), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b905)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655b907)0x0f847f050000            jz +0x0000057f                  
action_jcc
start fun: action_jcc(*addr=0x5655b907, *transl_addr=0x3ecac4f0, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be8c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99ca0, target: 0x5655be8c, origin: 0x3ecac4f2start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b90d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99d48, target: 0x5655b90d, origin: 0x3ecac4f7end fun: -> close, transl_length=11
end fun: -> 0x3ecac494,   next_tu=0x5655b90d (len: 103)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b90d)
end fun: -> 0x00000000
ff = 301
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b90d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac502start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b90d, *transl_address=0x3ecac502)
end fun:  
opcode escape found: 0f

 opt flags pass 
... compares reg 0 with reg 2

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05655b90d)0x8b560c                  mov 0x0c(%esi), %edx            
leal-based check (opsize = 4)
: (orig=0x05655b910)0x8b4608                  mov 0x08(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655b913)0x39c2                    cmp %eax, %edx                  
opcode escape found: 0f: (orig=0x05655b915)0x0f8699000000            jbe +0x00000099                 
action_jcc
start fun: action_jcc(*addr=0x5655b915, *transl_addr=0x3ecac52c, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9b4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99d10, target: 0x5655b9b4, origin: 0x3ecac52estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b91b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99d80, target: 0x5655b91b, origin: 0x3ecac533end fun: -> close, transl_length=11
end fun: -> 0x3ecac502,   next_tu=0x5655b91b (len: 53)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9b4)
end fun: -> 0x00000000
ff = 302
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9b4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac53estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b9b4, *transl_address=0x3ecac53e)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... compares reg 0 with reg 6

BEGIN FLAG ANALYSISCAddddaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655b9b4)0x83c618                  add $0x18, %esi                 
: (orig=0x05655b9b7)0x8b9568ffffff            mov 0xffffff68(%ebp), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b9bd)0x8d0452                  lea (%edx, %edx*2), %eax        
: (orig=0x05655b9c0)0x8b9554ffffff            mov 0xffffff54(%ebp), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b9c6)0x8d04c2                  lea (%edx, %eax*8), %eax        
: (orig=0x05655b9c9)0x39c6                    cmp %eax, %esi                  
opcode escape found: 0f: (orig=0x05655b9cb)0x0f8395000000            jnc +0x00000095                 
action_jcc
start fun: action_jcc(*addr=0x5655b9cb, *transl_addr=0x3ecac57f, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba66)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99d48, target: 0x5655ba66, origin: 0x3ecac581start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9d1)
end fun: -> 0x3ecac16c
end fun: -> close, transl_length=11
end fun: -> 0x3ecac53e,   next_tu=0x5655b9d1 (len: 76)
guest mmap
result = 08049000
Marking 08049000 as allocated
THE 9 ENTRIES:
 (08048000,08049000) (08049000,0804b000) (0a000000,0a020cc8) (040000000,070000000) (056555000,056574628) (056575000,056576918) (078000000,078010000) (080000000,081000000)
 (090000000,0b0000000)address space overlaps at 4
TOTAL USED 1359 MB

start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b8ff)
end fun: -> 0x00000000
ff = 303
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b8ff)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac591start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b8ff, *transl_address=0x3ecac591)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655b8ff)0x8b8750010000            mov 0x00000150(%edi), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b905)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655b907)0x0f847f050000            jz +0x0000057f                  
action_jcc
start fun: action_jcc(*addr=0x5655b907, *transl_addr=0x3ecac5ad, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be8c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99d10, target: 0x5655be8c, origin: 0x3ecac5afstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b90d)
end fun: -> 0x3ecac502
end fun: -> close, transl_length=11
end fun: -> 0x3ecac591,   next_tu=0x5655b90d (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b91b)
end fun: -> 0x00000000
ff = 304
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b91b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac5bfstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b91b, *transl_address=0x3ecac5bf)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
opcode escape found: 0f

 opt flags pass 
cmp reg mem

BEGIN FLAG ANALYSISCAcAdaddadddddaaEND FLAG ANALYSIS: (orig=0x05655b91b)0x0317                    add (%edi), %edx                
leal-based check (opsize = 4)
: (orig=0x05655b91d)0x0307                    add (%edi), %eax                
leal-based check (opsize = 4)
: (orig=0x05655b91f)0x899560ffffff            mov %edx, 0xffffff60(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b925)0x8b93bcfcffff            mov 0xfffffcbc(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b92b)0x898564ffffff            mov %eax, 0xffffff64(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b931)0x89955cffffff            mov %edx, 0xffffff5c(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b937)0x8b8d5cffffff            mov 0xffffff5c(%ebp), %ecx      
leal-based check (opsize = 4)
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
: (orig=0x05655b93d)0xf7da                    neg %edx                        
: (orig=0x05655b93f)0x899558ffffff            mov %edx, 0xffffff58(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b945)0x8d4408ff                lea 0xff(%eax, %ecx), %eax      
: (orig=0x05655b949)0x21d0                    and %edx, %eax                  
: (orig=0x05655b94b)0x8b9560ffffff            mov 0xffffff60(%ebp), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b951)0x3b8560ffffff            cmp 0xffffff60(%ebp), %eax      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655b957)0x0f46d0                  cmovbe %eax, %edx               
: (orig=0x05655b95a)0x399564ffffff            cmp %edx, 0xffffff64(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b960)0x7346                    jnc +0x46                       
action_jcc
start fun: action_jcc(*addr=0x5655b960, *transl_addr=0x3ecac6d9, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9a8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99cd8, target: 0x5655b9a8, origin: 0x3ecac6dbstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b962)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99db8, target: 0x5655b962, origin: 0x3ecac6e0end fun: -> close, transl_length=11
end fun: -> 0x3ecac5bf,   next_tu=0x5655b962 (len: 293)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b962)
end fun: -> 0x00000000
ff = 305
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b962)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac6ebstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b962, *transl_address=0x3ecac6eb)
end fun:  
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
: (orig=0x05655b962)0xf68524ffffff02          test $0x02, 0xffffff24(%ebp)    
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x05655b969)0x0f84af070000            jz +0x000007af                  
action_jcc
start fun: action_jcc(*addr=0x5655b969, *transl_addr=0x3ecac705, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c11e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99d80, target: 0x5655c11e, origin: 0x3ecac707start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b96f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99df0, target: 0x5655b96f, origin: 0x3ecac70cend fun: -> close, transl_length=11
end fun: -> 0x3ecac6eb,   next_tu=0x5655b96f (len: 37)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b96f)
end fun: -> 0x00000000
ff = 306
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b96f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac717start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b96f, *transl_address=0x3ecac717)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISDD4.4.4.4.4.4.4.4.4.4.1.dEND FLAG ANALYSIS: (orig=0x05655b96f)0x89d0                    mov %edx, %eax                  
: (orig=0x05655b971)0x2b8564ffffff            sub 0xffffff64(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655b977)0xc744240400000000        mov $0x00000000, 0x04(%esp)     
SAV
leal-based check (opsize = 4)
: (orig=0x05655b97f)0x89442408                mov %eax, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655b983)0x8b8d64ffffff            mov 0xffffff64(%ebp), %ecx      
leal-based check (opsize = 4)
: (orig=0x05655b989)0x890c24                  mov %ecx, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655b98c)0x899520ffffff            mov %edx, 0xffffff20(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655b992)0xe829240100              call +0x00012429                
action_call
start fun: action_call(*addr=0x5655b992, *transl_addr=0x3ecac7c2, length=5)
original call_target: 0x5656ddc0return_address = 05655b997
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ddc0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656ddc0)0xfc                      cld                             
: (orig=0x05656ddc1)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05656ddc2)0x8b542408                mov 0x08(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656ddc6)0x8b4c2410                mov 0x10(%esp), %ecx            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05656ddca)0x0fb644240c              movzx 0x0c(%esp), %eax          
leal-based check (opsize = 4)
RST
: (orig=0x05656ddcf)0xe32c                    jcxz +0x2c                      
action_jcc
start fun: action_jcc(*addr=0x5656ddcf, *transl_addr=0x3ecac83c, length=2)
processing jecxzstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ddd1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99db8, target: 0x5656ddd1, origin: 0x3ecac83fjcc switching trick
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ddfd)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99e28, target: 0x5656ddfd, origin: 0x3ecac844end fun: -> close, transl_length=12
end fun: -> 0x3ecac717,   next_tu=0x5656ddd1 (len: 305)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ddd1)
end fun: -> 0x00000000
ff = 307
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ddd1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac84fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ddd1, *transl_address=0x3ecac84f)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)


 opt flags pass 

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656ddd1)0x89d7                    mov %edx, %edi                  
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656ddd3)0x83e203                  and $0x03, %edx                 
: (orig=0x05656ddd6)0x7411                    jz +0x11                        
action_jcc
start fun: action_jcc(*addr=0x5656ddd6, *transl_addr=0x3ecac854, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dde9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99df0, target: 0x5656dde9, origin: 0x3ecac856start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ddd8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99e60, target: 0x5656ddd8, origin: 0x3ecac85bend fun: -> close, transl_length=11
end fun: -> 0x3ecac84f,   next_tu=0x5656ddd8 (len: 16)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dde9)
end fun: -> 0x00000000
ff = 308
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656dde9)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac866start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656dde9, *transl_address=0x3ecac866)
end fun:  
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
prefix found: 0f3prefix found: 0f3

 opt flags pass 

BEGIN FLAG ANALYSISddddddaaadEND FLAG ANALYSIS: (orig=0x05656dde9)0x89ca                    mov %ecx, %edx                  
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
: (orig=0x05656ddeb)0xc1e902                  shr $0x02, %ecx                 
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656ddee)0x83e203                  and $0x03, %edx                 
: (orig=0x05656ddf1)0x69c001010101            imul %eax, $0x01010101, %eax    
prefix found: 0f3: (orig=0x05656ddf7)0xf3ab                    stosd                           
: (orig=0x05656ddf9)0x89d1                    mov %edx, %ecx                  
prefix found: 0f3: (orig=0x05656ddfb)0xf3aa                    stosb                           
: (orig=0x05656ddfd)0x8b442408                mov 0x08(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656de01)0x5f                      pop %edi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656de02)0xc3                      ret                             
start fun: action_ret(*addr=0x5656de02, *transl_addr=0x3ecac8ab, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecac866,   next_tu=0x5656de03 (len: 83)
ff = 309
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b997)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac8c0start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b997, *transl_address=0x3ecac8c0)
end fun:  
opcode escape found: 0f

 opt flags pass 
... test imm8 02 with eax

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05655b997)0x8b4614                  mov 0x14(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655b99a)0x8b9520ffffff            mov 0xffffff20(%ebp), %edx      
leal-based check (opsize = 4)
: (orig=0x05655b9a0)0xa802                    test $0x02, %al                 
opcode escape found: 0f: (orig=0x05655b9a2)0x0f84c0070000            jz +0x000007c0                  
action_jcc
start fun: action_jcc(*addr=0x5655b9a2, *transl_addr=0x3ecac8f0, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c168)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99df0, target: 0x5655c168, origin: 0x3ecac8f2start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9a8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99db8, target: 0x5655b9a8, origin: 0x3ecac8f7end fun: -> close, transl_length=11
end fun: -> 0x3ecac8c0,   next_tu=0x5655b9a8 (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9a8)
end fun: -> 0x00000000
ff = 310
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9a8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac902start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655b9a8, *transl_address=0x3ecac902)
end fun:  
opcode escape found: 0f

 opt flags pass 
cmp reg mem

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655b9a8)0x399560ffffff            cmp %edx, 0xffffff60(%ebp)      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655b9ae)0x0f8739050000            ja +0x00000539                  
action_jcc
start fun: action_jcc(*addr=0x5655b9ae, *transl_addr=0x3ecac91c, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655beed)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99e98, target: 0x5655beed, origin: 0x3ecac91estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655b9b4)
end fun: -> 0x3ecac53e
end fun: -> close, transl_length=11
end fun: -> 0x3ecac902,   next_tu=0x5655b9b4 (len: 37)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba66)
end fun: -> 0x00000000
ff = 311
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba66)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac92estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ba66, *transl_address=0x3ecac92e)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05655ba66)0x8b5708                  mov 0x08(%edi), %edx            
leal-based check (opsize = 4)
: (orig=0x05655ba69)0x8ba528ffffff            mov 0xffffff28(%ebp), %esp      
leal-based check (opsize = 4)
: (orig=0x05655ba6f)0x85d2                    test %edx, %edx                 
opcode escape found: 0f: (orig=0x05655ba71)0x0f84e1040000            jz +0x000004e1                  
action_jcc
start fun: action_jcc(*addr=0x5655ba71, *transl_addr=0x3ecac95e, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bf58)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99db8, target: 0x5655bf58, origin: 0x3ecac960start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba77)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99ed0, target: 0x5655ba77, origin: 0x3ecac965end fun: -> close, transl_length=11
end fun: -> 0x3ecac92e,   next_tu=0x5655ba77 (len: 59)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba77)
end fun: -> 0x00000000
ff = 312
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba77)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac970start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ba77, *transl_address=0x3ecac970)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISAddaadEND FLAG ANALYSIS: (orig=0x05655ba77)0x8b0f                    mov (%edi), %ecx                
leal-based check (opsize = 4)
: (orig=0x05655ba79)0x01ca                    add %ecx, %edx                  
: (orig=0x05655ba7b)0x85d2                    test %edx, %edx                 
PATCHING TST REG REG
: (orig=0x05655ba7d)0x898d68ffffff            mov %ecx, 0xffffff68(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655ba83)0x895708                  mov %edx, 0x08(%edi)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655ba86)0x0f848e010000            jz +0x0000018e                  
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655ba86, *transl_addr=0x3ecac9bd, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc1a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99d48, target: 0x5655bc1a, origin: 0x3ecac9bfstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba8c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99f08, target: 0x5655ba8c, origin: 0x3ecac9c4end fun: -> close, transl_length=11
end fun: -> 0x3ecac970,   next_tu=0x5655ba8c (len: 88)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba8c)
end fun: -> 0x00000000
ff = 313
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba8c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecac9cfstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ba8c, *transl_address=0x3ecac9cf)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdddEND FLAG ANALYSIS: (orig=0x05655ba8c)0x8d4720                  lea 0x20(%edi), %eax            
: (orig=0x05655ba8f)0x898564ffffff            mov %eax, 0xffffff64(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655ba95)0x8b02                    mov (%edx), %eax                
leal-based check (opsize = 4)
: (orig=0x05655ba97)0x85c0                    test %eax, %eax                 
: (orig=0x05655ba99)0x7446                    jz +0x46                        
action_jcc
start fun: action_jcc(*addr=0x5655ba99, *transl_addr=0x3ecaca01, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bae1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99ed0, target: 0x5655bae1, origin: 0x3ecaca03start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba9b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99f40, target: 0x5655ba9b, origin: 0x3ecaca08end fun: -> close, transl_length=11
end fun: -> 0x3ecac9cf,   next_tu=0x5655ba9b (len: 61)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba9b)
end fun: -> 0x00000000
ff = 314
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ba9b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaca13start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ba9b, *transl_address=0x3ecaca13)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 021 with reg 0

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05655ba9b)0xbe08000000              mov $0x00000008, %esi           
: (orig=0x05655baa0)0xeb15                    jmp +0x15                       
original_addr=05655baa0 / addr=05655baa0
start fun: action_jmp(*addr=0x5655baa0, *transl_addr=0x3ecaca18, length=2)
action_jmp
original jmp_target: 0x5655bab7start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bab7)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655bab7)0x83f821                  cmp $0x21, %eax                 
: (orig=0x05655baba)0x76ec                    jbe +0xec                       
action_jcc
start fun: action_jcc(*addr=0x5655baba, *transl_addr=0x3ecaca1b, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655baa8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99f08, target: 0x5655baa8, origin: 0x3ecaca1dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655babc)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99f78, target: 0x5655babc, origin: 0x3ecaca22end fun: -> close, transl_length=11
end fun: -> 0x3ecaca13,   next_tu=0x5655babc (len: 19)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655baa8)
end fun: -> 0x00000000
ff = 315
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655baa8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaca2dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655baa8, *transl_address=0x3ecaca2d)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdadEND FLAG ANALYSIS: (orig=0x05655baa8)0x89548720                mov %edx, 0x20(%edi, %eax*4)    
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655baac)0x83c208                  add $0x08, %edx                 
: (orig=0x05655baaf)0x8b4432f8                mov 0xf8(%edx, %esi), %eax      
leal-based check (opsize = 4)
: (orig=0x05655bab3)0x85c0                    test %eax, %eax                 
: (orig=0x05655bab5)0x742a                    jz +0x2a                        
action_jcc
start fun: action_jcc(*addr=0x5655bab5, *transl_addr=0x3ecaca5e, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bae1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99f40, target: 0x5655bae1, origin: 0x3ecaca60start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bab7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99fb0, target: 0x5655bab7, origin: 0x3ecaca65end fun: -> close, transl_length=11
end fun: -> 0x3ecaca2d,   next_tu=0x5655bab7 (len: 60)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bab7)
end fun: -> 0x00000000
ff = 316
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bab7)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaca70start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bab7, *transl_address=0x3ecaca70)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 021 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655bab7)0x83f821                  cmp $0x21, %eax                 
: (orig=0x05655baba)0x76ec                    jbe +0xec                       
action_jcc
start fun: action_jcc(*addr=0x5655baba, *transl_addr=0x3ecaca73, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655baa8)
end fun: -> 0x3ecaca2d
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655babc)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99f08, target: 0x5655babc, origin: 0x3ecaca7aend fun: -> close, transl_length=11
end fun: -> 0x3ecaca70,   next_tu=0x5655babc (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655babc)
end fun: -> 0x00000000
ff = 317
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655babc)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaca85start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655babc, *transl_address=0x3ecaca85)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 0f with reg 1

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05655babc)0xb9ffffff6f              mov $0x6fffffff, %ecx           
: (orig=0x05655bac1)0x29c1                    sub %eax, %ecx                  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655bac3)0x83f90f                  cmp $0x0f, %ecx                 
opcode escape found: 0f: (orig=0x05655bac6)0x0f875c030000            ja +0x0000035c                  
action_jcc
start fun: action_jcc(*addr=0x5655bac6, *transl_addr=0x3ecaca8f, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be28)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99fb0, target: 0x5655be28, origin: 0x3ecaca91start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bacc)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99fe8, target: 0x5655bacc, origin: 0x3ecaca96end fun: -> close, transl_length=11
end fun: -> 0x3ecaca85,   next_tu=0x5655bacc (len: 21)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be28)
end fun: -> 0x00000000
ff = 318
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be28)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacaa1start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655be28, *transl_address=0x3ecacaa1)
end fun:  
opcode table: 0x00244ba8 -> 0x00216b40 (0x00216c58)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 0fffffffc with reg 1

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05655be28)0x8d0c00                  lea (%eax, %eax), %ecx          
opcode table: 0x00244ba8 -> 0x00216b40 (0x00216c58)
: (orig=0x05655be2b)0xd1f9                    sar $1, %ecx                    
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655be2d)0x83f9fc                  cmp $0xfc, %ecx                 
: (orig=0x05655be30)0x7614                    jbe +0x14                       
action_jcc
start fun: action_jcc(*addr=0x5655be30, *transl_addr=0x3ecacaaa, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be46)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99f08, target: 0x5655be46, origin: 0x3ecacaacstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be32)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a020, target: 0x5655be32, origin: 0x3ecacab1end fun: -> close, transl_length=11
end fun: -> 0x3ecacaa1,   next_tu=0x5655be32 (len: 20)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be46)
end fun: -> 0x00000000
ff = 319
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be46)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacabcstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655be46, *transl_address=0x3ecacabc)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 0b with reg 1

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05655be46)0xb9fffdff6f              mov $0x6ffffdff, %ecx           
: (orig=0x05655be4b)0x29c1                    sub %eax, %ecx                  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655be4d)0x83f90b                  cmp $0x0b, %ecx                 
: (orig=0x05655be50)0x7715                    ja +0x15                        
action_jcc
start fun: action_jcc(*addr=0x5655be50, *transl_addr=0x3ecacac6, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be67)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99fb0, target: 0x5655be67, origin: 0x3ecacac8start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be52)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a058, target: 0x5655be52, origin: 0x3ecacacdend fun: -> close, transl_length=11
end fun: -> 0x3ecacabc,   next_tu=0x5655be52 (len: 21)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be67)
end fun: -> 0x00000000
ff = 320
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be67)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacad8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655be67, *transl_address=0x3ecacad8)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 0a with reg 1

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05655be67)0xb9fffeff6f              mov $0x6ffffeff, %ecx           
: (orig=0x05655be6c)0x29c1                    sub %eax, %ecx                  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655be6e)0x83f90a                  cmp $0x0a, %ecx                 
opcode escape found: 0f: (orig=0x05655be71)0x0f8735fcffff            ja +0xfffffc35                  
action_jcc
start fun: action_jcc(*addr=0x5655be71, *transl_addr=0x3ecacae2, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655baac)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99f08, target: 0x5655baac, origin: 0x3ecacae4start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be77)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a090, target: 0x5655be77, origin: 0x3ecacae9end fun: -> close, transl_length=11
end fun: -> 0x3ecacad8,   next_tu=0x5655be77 (len: 21)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be77)
end fun: -> 0x00000000
ff = 321
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be77)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacaf4start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655be77, *transl_address=0x3ecacaf4)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdaddaadEND FLAG ANALYSIS: (orig=0x05655be77)0x8b8d64ffffff            mov 0xffffff64(%ebp), %ecx      
leal-based check (opsize = 4)
: (orig=0x05655be7d)0x05c0000010              add $0x100000c0, %eax           
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
: (orig=0x05655be82)0xf7d8                    neg %eax                        
: (orig=0x05655be84)0x891481                  mov %edx, (%ecx, %eax*4)        
leal-based check (opsize = 4)
: (orig=0x05655be87)0xe920fcffff              jmp +0xfffffc20                 
original_addr=05655be87 / addr=05655be87
start fun: action_jmp(*addr=0x5655be87, *transl_addr=0x3ecacb29, length=5)
action_jmp
jump_target = 0fffffc20 + 05655be87 + 05original jmp_target: 0x5655baacstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655baac)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655baac)0x83c208                  add $0x08, %edx                 
: (orig=0x05655baaf)0x8b4432f8                mov 0xf8(%edx, %esi), %eax      
leal-based check (opsize = 4)
: (orig=0x05655bab3)0x85c0                    test %eax, %eax                 
: (orig=0x05655bab5)0x742a                    jz +0x2a                        
action_jcc
start fun: action_jcc(*addr=0x5655bab5, *transl_addr=0x3ecacb44, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bae1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99fb0, target: 0x5655bae1, origin: 0x3ecacb46start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bab7)
end fun: -> 0x3ecaca70
end fun: -> close, transl_length=11
end fun: -> 0x3ecacaf4,   next_tu=0x5655bab7 (len: 91)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bacc)
end fun: -> 0x00000000
ff = 322
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bacc)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacb56start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bacc, *transl_address=0x3ecacb56)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdadadEND FLAG ANALYSIS: (orig=0x05655bacc)0xb929000070              mov $0x70000029, %ecx           
: (orig=0x05655bad1)0x29c1                    sub %eax, %ecx                  
: (orig=0x05655bad3)0x89148f                  mov %edx, (%edi, %ecx*4)        
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655bad6)0x83c208                  add $0x08, %edx                 
: (orig=0x05655bad9)0x8b4432f8                mov 0xf8(%edx, %esi), %eax      
leal-based check (opsize = 4)
: (orig=0x05655badd)0x85c0                    test %eax, %eax                 
: (orig=0x05655badf)0x75d6                    jnz +0xd6                       
action_jcc
start fun: action_jcc(*addr=0x5655badf, *transl_addr=0x3ecacb8c, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bab7)
end fun: -> 0x3ecaca70
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bae1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a090, target: 0x5655bae1, origin: 0x3ecacb93end fun: -> close, transl_length=11
end fun: -> 0x3ecacb56,   next_tu=0x5655bae1 (len: 65)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bae1)
end fun: -> 0x00000000
ff = 323
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bae1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacb9estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bae1, *transl_address=0x3ecacb9e)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bae1)0x8b8568ffffff            mov 0xffffff68(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655bae7)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655bae9)0x0f8496000000            jz +0x00000096                  
action_jcc
start fun: action_jcc(*addr=0x5655bae9, *transl_addr=0x3ecacbba, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb85)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99fe8, target: 0x5655bb85, origin: 0x3ecacbbcstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655baef)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a0c8, target: 0x5655baef, origin: 0x3ecacbc1end fun: -> close, transl_length=11
end fun: -> 0x3ecacb9e,   next_tu=0x5655baef (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb85)
end fun: -> 0x00000000
ff = 324
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb85)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacbccstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bb85, *transl_address=0x3ecacbcc)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bb85)0x8b4770                  mov 0x70(%edi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655bb88)0x85c0                    test %eax, %eax                 
: (orig=0x05655bb8a)0x740c                    jz +0x0c                        
action_jcc
start fun: action_jcc(*addr=0x5655bb8a, *transl_addr=0x3ecacbe2, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb98)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a090, target: 0x5655bb98, origin: 0x3ecacbe4start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb8c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a100, target: 0x5655bb8c, origin: 0x3ecacbe9end fun: -> close, transl_length=11
end fun: -> 0x3ecacbcc,   next_tu=0x5655bb8c (len: 33)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb8c)
end fun: -> 0x00000000
ff = 325
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb8c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacbf4start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bb8c, *transl_address=0x3ecacbf4)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 07 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bb8c)0x8b4004                  mov 0x04(%eax), %eax            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655bb8f)0x83f807                  cmp $0x07, %eax                 
opcode escape found: 0f: (orig=0x05655bb92)0x0f852c080000            jnz +0x0000082c                 
action_jcc
start fun: action_jcc(*addr=0x5655bb92, *transl_addr=0x3ecacc0b, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c3c4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99fe8, target: 0x5655c3c4, origin: 0x3ecacc0dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb98)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a138, target: 0x5655bb98, origin: 0x3ecacc12end fun: -> close, transl_length=11
end fun: -> 0x3ecacbf4,   next_tu=0x5655bb98 (len: 34)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c3c4)
end fun: -> 0x00000000
ff = 326
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c3c4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacc1dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655c3c4, *transl_address=0x3ecacc1d)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 011 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655c3c4)0x83f811                  cmp $0x11, %eax                 
opcode escape found: 0f: (orig=0x05655c3c7)0x0f84cbf7ffff            jz +0xfffff7cb                  
action_jcc
start fun: action_jcc(*addr=0x5655c3c7, *transl_addr=0x3ecacc20, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb98)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a100, target: 0x5655bb98, origin: 0x3ecacc22start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c3cd)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a170, target: 0x5655c3cd, origin: 0x3ecacc27end fun: -> close, transl_length=11
end fun: -> 0x3ecacc1d,   next_tu=0x5655c3cd (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb98)
end fun: -> 0x00000000
ff = 327
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb98)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacc32start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bb98, *transl_address=0x3ecacc32)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bb98)0x8b473c                  mov 0x3c(%edi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655bb9b)0x85c0                    test %eax, %eax                 
: (orig=0x05655bb9d)0x740d                    jz +0x0d                        
action_jcc
start fun: action_jcc(*addr=0x5655bb9d, *transl_addr=0x3ecacc48, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbac)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99fe8, target: 0x5655bbac, origin: 0x3ecacc4astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bb9f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a1a8, target: 0x5655bb9f, origin: 0x3ecacc4fend fun: -> close, transl_length=11
end fun: -> 0x3ecacc32,   next_tu=0x5655bb9f (len: 33)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbac)
end fun: -> 0x00000000
ff = 328
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbac)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacc5astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bbac, *transl_address=0x3ecacc5a)
end fun:  


 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bbac)0x8b7764                  mov 0x64(%edi), %esi            
leal-based check (opsize = 4)
: (orig=0x05655bbaf)0x85f6                    test %esi, %esi                 
: (orig=0x05655bbb1)0x740d                    jz +0x0d                        
action_jcc
start fun: action_jcc(*addr=0x5655bbb1, *transl_addr=0x3ecacc70, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbc0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a100, target: 0x5655bbc0, origin: 0x3ecacc72start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbb3)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a1e0, target: 0x5655bbb3, origin: 0x3ecacc77end fun: -> close, transl_length=11
end fun: -> 0x3ecacc5a,   next_tu=0x5655bbb3 (len: 33)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbb3)
end fun: -> 0x00000000
ff = 329
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbb3)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacc82start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bbb3, *transl_address=0x3ecacc82)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bbb3)0x8b476c                  mov 0x6c(%edi), %eax            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655bbb6)0x83780408                cmp $0x08, 0x04(%eax)           
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655bbba)0x0f8561080000            jnz +0x00000861                 
action_jcc
start fun: action_jcc(*addr=0x5655bbba, *transl_addr=0x3ecaccab, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c421)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99fe8, target: 0x5655c421, origin: 0x3ecaccadstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbc0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a218, target: 0x5655bbc0, origin: 0x3ecaccb2end fun: -> close, transl_length=11
end fun: -> 0x3ecacc82,   next_tu=0x5655bbc0 (len: 52)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbc0)
end fun: -> 0x00000000
ff = 330
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbc0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaccbdstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bbc0, *transl_address=0x3ecaccbd)
end fun:  


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bbc0)0x8b9798000000            mov 0x00000098(%edi), %edx      
leal-based check (opsize = 4)
: (orig=0x05655bbc6)0x85d2                    test %edx, %edx                 
: (orig=0x05655bbc8)0x7421                    jz +0x21                        
action_jcc
start fun: action_jcc(*addr=0x5655bbc8, *transl_addr=0x3ecaccd9, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbeb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a1e0, target: 0x5655bbeb, origin: 0x3ecaccdbstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbca)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a250, target: 0x5655bbca, origin: 0x3ecacce0end fun: -> close, transl_length=11
end fun: -> 0x3ecaccbd,   next_tu=0x5655bbca (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbeb)
end fun: -> 0x00000000
ff = 331
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbeb)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaccebstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bbeb, *transl_address=0x3ecacceb)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bbeb)0x8b87b8000000            mov 0x000000b8(%edi), %eax      
leal-based check (opsize = 4)
: (orig=0x05655bbf1)0x85c0                    test %eax, %eax                 
: (orig=0x05655bbf3)0x7414                    jz +0x14                        
action_jcc
start fun: action_jcc(*addr=0x5655bbf3, *transl_addr=0x3ecacd07, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc09)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a218, target: 0x5655bc09, origin: 0x3ecacd09start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bbf5)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a288, target: 0x5655bbf5, origin: 0x3ecacd0eend fun: -> close, transl_length=11
end fun: -> 0x3ecacceb,   next_tu=0x5655bbf5 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc09)
end fun: -> 0x00000000
ff = 332
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc09)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacd19start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bc09, *transl_address=0x3ecacd19)
end fun:  


 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bc09)0x8b8f94000000            mov 0x00000094(%edi), %ecx      
leal-based check (opsize = 4)
: (orig=0x05655bc0f)0x85c9                    test %ecx, %ecx                 
: (orig=0x05655bc11)0x7407                    jz +0x07                        
action_jcc
start fun: action_jcc(*addr=0x5655bc11, *transl_addr=0x3ecacd35, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc1a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a1e0, target: 0x5655bc1a, origin: 0x3ecacd37start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc13)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a2c0, target: 0x5655bc13, origin: 0x3ecacd3cend fun: -> close, transl_length=11
end fun: -> 0x3ecacd19,   next_tu=0x5655bc13 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc1a)
end fun: -> 0x00000000
ff = 333
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc1a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacd47start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bc1a, *transl_address=0x3ecacd47)
end fun:  
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05655bc1a)0x8b4518                  mov 0x18(%ebp), %eax            
leal-based check (opsize = 4)
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
: (orig=0x05655bc1d)0xc1e81f                  shr $0x1f, %eax                 
: (orig=0x05655bc20)0x84c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655bc22)0x0f8557080000            jnz +0x00000857                 
action_jcc
start fun: action_jcc(*addr=0x5655bc22, *transl_addr=0x3ecacd60, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c47f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a218, target: 0x5655c47f, origin: 0x3ecacd62start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc28)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a2f8, target: 0x5655bc28, origin: 0x3ecacd67end fun: -> close, transl_length=11
end fun: -> 0x3ecacd47,   next_tu=0x5655bc28 (len: 36)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc28)
end fun: -> 0x00000000
ff = 334
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc28)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacd72start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bc28, *transl_address=0x3ecacd72)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bc28)0x8b8750010000            mov 0x00000150(%edi), %eax      
leal-based check (opsize = 4)
: (orig=0x05655bc2e)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655bc30)0x0f8483030000            jz +0x00000383                  
action_jcc
start fun: action_jcc(*addr=0x5655bc30, *transl_addr=0x3ecacd8e, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bfb9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a1e0, target: 0x5655bfb9, origin: 0x3ecacd90start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc36)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a330, target: 0x5655bc36, origin: 0x3ecacd95end fun: -> close, transl_length=11
end fun: -> 0x3ecacd72,   next_tu=0x5655bc36 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc36)
end fun: -> 0x00000000
ff = 335
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc36)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacda0start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bc36, *transl_address=0x3ecacda0)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x00217090)
opcode escape found: 0f

 opt flags pass 
... test imm8 01 with eax

BEGIN FLAG ANALYSISCAadddaEND FLAG ANALYSIS: (orig=0x05655bc36)0x0307                    add (%edi), %eax                
leal-based check (opsize = 4)
: (orig=0x05655bc38)0x898750010000            mov %eax, 0x00000150(%edi)      
leal-based check (opsize = 4)
: (orig=0x05655bc3e)0x8b832c080000            mov 0x0000082c(%ebx), %eax      
leal-based check (opsize = 4)
opcode table: 0x00245198 -> 0x00217040 (0x00217090)
: (orig=0x05655bc44)0xf7d0                    not %eax                        
: (orig=0x05655bc46)0x238550ffffff            and 0xffffff50(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655bc4c)0xa801                    test $0x01, %al                 
opcode escape found: 0f: (orig=0x05655bc4e)0x0f8545050000            jnz +0x00000545                 
action_jcc
start fun: action_jcc(*addr=0x5655bc4e, *transl_addr=0x3ecace04, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c199)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a2f8, target: 0x5655c199, origin: 0x3ecace06start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc54)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a368, target: 0x5655bc54, origin: 0x3ecace0bend fun: -> close, transl_length=11
end fun: -> 0x3ecacda0,   next_tu=0x5655bc54 (len: 111)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc54)
end fun: -> 0x00000000
ff = 336
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc54)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecace16start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bc54, *transl_address=0x3ecace16)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bc54)0x8b872c020000            mov 0x0000022c(%edi), %eax      
leal-based check (opsize = 4)
: (orig=0x05655bc5a)0x85c0                    test %eax, %eax                 
: (orig=0x05655bc5c)0x7408                    jz +0x08                        
action_jcc
start fun: action_jcc(*addr=0x5655bc5c, *transl_addr=0x3ecace32, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc66)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a330, target: 0x5655bc66, origin: 0x3ecace34start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc5e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a3a0, target: 0x5655bc5e, origin: 0x3ecace39end fun: -> close, transl_length=11
end fun: -> 0x3ecace16,   next_tu=0x5655bc5e (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc66)
end fun: -> 0x00000000
ff = 337
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc66)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecace44start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bc66, *transl_address=0x3ecace44)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISBDD4.4.4.4.END FLAG ANALYSIS: (orig=0x05655bc66)0x8b954cffffff            mov 0xffffff4c(%ebp), %edx      
SAV
leal-based check (opsize = 4)
: (orig=0x05655bc6c)0x891424                  mov %edx, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655bc6f)0xe8dc130100              call +0x000113dc                
action_call
start fun: action_call(*addr=0x5655bc6f, *transl_addr=0x3ecace89, length=5)
original call_target: 0x5656d050return_address = 05655bc74
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d050)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d050)0x89da                    mov %ebx, %edx                  
: (orig=0x05656d052)0x8b5c2404                mov 0x04(%esp), %ebx            
leal-based check (opsize = 4)
RST
: (orig=0x05656d056)0xb806000000              mov $0x00000006, %eax           
: (orig=0x05656d05b)0xcd80                    int $0x80                       
closing TU upon request, invoking translation function on 0x5656d05dallocated trampoline: 0x3ec9a368, target: 0x5656d05d, origin: 0x3ecacefaend fun: -> 0x3ecace44,   next_tu=0x5656d05d (len: 174)
SYSCALL 6
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d05d)
end fun: -> 0x00000000
ff = 338
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d05d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacefestart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d05d, *transl_address=0x3ecacefe)
end fun:  


 opt flags pass 
... cmp imm 0fffff001 with eax

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656d05d)0x89d3                    mov %edx, %ebx                  
: (orig=0x05656d05f)0x3d01f0ffff              cmp $0xfffff001, %eax           
: (orig=0x05656d064)0x7301                    jnc +0x01                       
action_jcc
start fun: action_jcc(*addr=0x5656d064, *transl_addr=0x3ecacf05, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d067)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a330, target: 0x5656d067, origin: 0x3ecacf07start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d066)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a3d8, target: 0x5656d066, origin: 0x3ecacf0cend fun: -> close, transl_length=11
end fun: -> 0x3ecacefe,   next_tu=0x5656d066 (len: 18)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d066)
end fun: -> 0x00000000
ff = 339
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d066)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacf17start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d066, *transl_address=0x3ecacf17)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdEND FLAG ANALYSIS: (orig=0x05656d066)0xc3                      ret                             
start fun: action_ret(*addr=0x5656d066, *transl_addr=0x3ecacf17, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecacf17,   next_tu=0x5656d067 (len: 14)
ff = 340
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc74)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacf2cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bc74, *transl_address=0x3ecacf2c)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655bc74)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655bc76)0x0f8506090000            jnz +0x00000906                 
action_jcc
start fun: action_jcc(*addr=0x5655bc76, *transl_addr=0x3ecacf2e, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c582)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a3d8, target: 0x5655c582, origin: 0x3ecacf30start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc7c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a368, target: 0x5655bc7c, origin: 0x3ecacf35end fun: -> close, transl_length=11
end fun: -> 0x3ecacf2c,   next_tu=0x5655bc7c (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc7c)
end fun: -> 0x00000000
ff = 341
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc7c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacf40start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bc7c, *transl_address=0x3ecacf40)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655bc7c)0x83bd6cffffff02          cmp $0x02, 0xffffff6c(%ebp)     
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655bc83)0x0f8477010000            jz +0x00000177                  
action_jcc
start fun: action_jcc(*addr=0x5655bc83, *transl_addr=0x3ecacf5b, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be00)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a410, target: 0x5655be00, origin: 0x3ecacf5dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc89)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a448, target: 0x5655bc89, origin: 0x3ecacf62end fun: -> close, transl_length=11
end fun: -> 0x3ecacf40,   next_tu=0x5655bc89 (len: 38)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be00)
end fun: -> 0x00000000
ff = 342
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be00)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacf6dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655be00, *transl_address=0x3ecacf6d)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAaddEND FLAG ANALYSISopcode escape found: 0f: (orig=0x05655be00)0x0fb68794010000          movzx 0x00000194(%edi), %eax    
leal-based check (opsize = 4)
: (orig=0x05655be07)0x89c2                    mov %eax, %edx                  
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655be09)0x83e203                  and $0x03, %edx                 
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05655be0c)0x80fa01                  cmp $0x01, %edx                 
opcode escape found: 0f: (orig=0x05655be0f)0x0f8574feffff            jnz +0xfffffe74                 
action_jcc
start fun: action_jcc(*addr=0x5655be0f, *transl_addr=0x3ecacf90, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc89)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a368, target: 0x5655bc89, origin: 0x3ecacf92start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be15)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a480, target: 0x5655be15, origin: 0x3ecacf97end fun: -> close, transl_length=11
end fun: -> 0x3ecacf6d,   next_tu=0x5655be15 (len: 46)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be15)
end fun: -> 0x00000000
ff = 343
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655be15)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecacfa2start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655be15, *transl_address=0x3ecacfa2)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCD1.addddaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655be15)0x83e0fc                  and $0xfc, %eax                 
: (orig=0x05655be18)0x888794010000            mov %eax, 0x00000194(%edi)      
leal-based check (opsize = 1)
: (orig=0x05655be1e)0xe966feffff              jmp +0xfffffe66                 
original_addr=05655be1e / addr=05655be1e
start fun: action_jmp(*addr=0x5655be1e, *transl_addr=0x3ecacfbe, length=5)
action_jmp
jump_target = 0fffffe66 + 05655be1e + 05original jmp_target: 0x5655bc89start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bc89)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655bc89)0x8b9754010000            mov 0x00000154(%edi), %edx      
leal-based check (opsize = 4)
: (orig=0x05655bc8f)0x8b07                    mov (%edi), %eax                
leal-based check (opsize = 4)
: (orig=0x05655bc91)0x01c2                    add %eax, %edx                  
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
: (orig=0x05655bc93)0xf683acfcffff40          test $0x40, 0xfffffcac(%ebx)    
leal-based check (opsize = 1)
: (orig=0x05655bc9a)0x899754010000            mov %edx, 0x00000154(%edi)      
SAV
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x05655bca0)0x0f8507040000            jnz +0x00000407                 
action_jcc
start fun: action_jcc(*addr=0x5655bca0, *transl_addr=0x3ecad04d, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c0ad)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a410, target: 0x5655c0ad, origin: 0x3ecad04fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bca6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a4b8, target: 0x5655bca6, origin: 0x3ecad054end fun: -> close, transl_length=11
end fun: -> 0x3ecacfa2,   next_tu=0x5655bca6 (len: 182)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bca6)
end fun: -> 0x00000000
ff = 344
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bca6)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad05fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bca6, *transl_address=0x3ecad05f)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISdddddaddEND FLAG ANALYSIS: (orig=0x05655bca6)0x89f8                    mov %edi, %eax                  
: (orig=0x05655bca8)0xe853400000              call +0x00004053                
action_call
start fun: action_call(*addr=0x5655bca8, *transl_addr=0x3ecad061, length=5)
original call_target: 0x5655fd00return_address = 05655bcad
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fd00)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655fd00)0x83ec2c                  sub $0x2c, %esp                 
: (orig=0x05655fd03)0x8b904c010000            mov 0x0000014c(%eax), %edx      
leal-based check (opsize = 4)
: (orig=0x05655fd09)0x895c241c                mov %ebx, 0x1c(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fd0d)0xe839e30000              call +0x0000e339                
action_call
start fun: action_call(*addr=0x5655fd0d, *transl_addr=0x3ecad0a1, length=5)
original call_target: 0x5656e04breturn_address = 05655fd12
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecad0c2, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecad05f,   next_tu=0x5656e04f (len: 113)
ff = 345
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bcad)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad0d7start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bcad, *transl_address=0x3ecad0d7)
end fun:  
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
: (orig=0x05655bcad)0xf6451808                test $0x08, 0x18(%ebp)          
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x05655bcb1)0x0f84d9000000            jz +0x000000d9                  
action_jcc
start fun: action_jcc(*addr=0x5655bcb1, *transl_addr=0x3ecad0eb, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd90)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a4b8, target: 0x5655bd90, origin: 0x3ecad0edstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bcb7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a480, target: 0x5655bcb7, origin: 0x3ecad0f2end fun: -> close, transl_length=11
end fun: -> 0x3ecad0d7,   next_tu=0x5655bcb7 (len: 31)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd90)
end fun: -> 0x00000000
ff = 346
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd90)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad0fdstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bd90, *transl_address=0x3ecad0fd)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bd90)0x8b7760                  mov 0x60(%edi), %esi            
leal-based check (opsize = 4)
: (orig=0x05655bd93)0x85f6                    test %esi, %esi                 
opcode escape found: 0f: (orig=0x05655bd95)0x0f841cffffff            jz +0xffffff1c                  
action_jcc
start fun: action_jcc(*addr=0x5655bd95, *transl_addr=0x3ecad113, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bcb7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a4f0, target: 0x5655bcb7, origin: 0x3ecad115start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd9b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a528, target: 0x5655bd9b, origin: 0x3ecad11aend fun: -> close, transl_length=11
end fun: -> 0x3ecad0fd,   next_tu=0x5655bd9b (len: 33)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bcb7)
end fun: -> 0x00000000
ff = 347
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bcb7)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad125start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bcb7, *transl_address=0x3ecad125)
end fun:  
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
opcode escape found: 0fopcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISAddddaddddcD4.1.dEND FLAG ANALYSIS: (orig=0x05655bcb7)0x8b8328050000            mov 0x00000528(%ebx), %eax      
leal-based check (opsize = 4)
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
: (orig=0x05655bcbd)0xf6870402000020          test $0x20, 0x00000204(%edi)    
leal-based check (opsize = 1)
: (orig=0x05655bcc4)0x8b957cffffff            mov 0xffffff7c(%ebp), %edx      
SAV
leal-based check (opsize = 4)
: (orig=0x05655bcca)0x8b8b18feffff            mov 0xfffffe18(%ebx), %ecx      
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x05655bcd0)0x0f45c7                  cmovnz %edi, %eax               
: (orig=0x05655bcd3)0x898328050000            mov %eax, 0x00000528(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05655bcd9)0x8b8578ffffff            mov 0xffffff78(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655bcdf)0x8997dc010000            mov %edx, 0x000001dc(%edi)      
leal-based check (opsize = 4)
: (orig=0x05655bce5)0x8b55d4                  mov 0xd4(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655bce8)0x85c9                    test %ecx, %ecx                 
PATCHING TST REG REG
: (orig=0x05655bcea)0x8987d8010000            mov %eax, 0x000001d8(%edi)      
leal-based check (opsize = 4)
: (orig=0x05655bcf0)0x8b45d0                  mov 0xd0(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x05655bcf3)0x8997e4010000            mov %edx, 0x000001e4(%edi)      
leal-based check (opsize = 4)
: (orig=0x05655bcf9)0x8987e0010000            mov %eax, 0x000001e0(%edi)      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655bcff)0x0f8546070000            jnz +0x00000746                 
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655bcff, *transl_addr=0x3ecad28c, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c44b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a4b8, target: 0x5655c44b, origin: 0x3ecad28estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd05)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a560, target: 0x5655bd05, origin: 0x3ecad293end fun: -> close, transl_length=11
end fun: -> 0x3ecad125,   next_tu=0x5655bd05 (len: 370)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd05)
end fun: -> 0x00000000
ff = 348
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd05)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad29estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bd05, *transl_address=0x3ecad29e)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISddddadddEND FLAG ANALYSIS: (orig=0x05655bd05)0x8b5520                  mov 0x20(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655bd08)0x89f8                    mov %edi, %eax                  
: (orig=0x05655bd0a)0xe8d1400000              call +0x000040d1                
action_call
start fun: action_call(*addr=0x5655bd0a, *transl_addr=0x3ecad2b4, length=5)
original call_target: 0x5655fde0return_address = 05655bd0f
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fde0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655fde0)0x83ec2c                  sub $0x2c, %esp                 
: (orig=0x05655fde3)0x895c241c                mov %ebx, 0x1c(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fde7)0xe85fe20000              call +0x0000e25f                
action_call
start fun: action_call(*addr=0x5655fde7, *transl_addr=0x3ecad2da, length=5)
original call_target: 0x5656e04breturn_address = 05655fdec
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecad2fb, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecad29e,   next_tu=0x5656e04f (len: 107)
ff = 349
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fdec)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad310start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655fdec, *transl_address=0x3ecad310)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217310)


 opt flags pass 

BEGIN FLAG ANALYSISddddddddaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05655fdec)0x81c308620100            add $0x00016208, %ebx           
: (orig=0x05655fdf2)0x897c2424                mov %edi, 0x24(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fdf6)0x896c2428                mov %ebp, 0x28(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fdfa)0x89d5                    mov %edx, %ebp                  
: (orig=0x05655fdfc)0x89742420                mov %esi, 0x20(%esp)            
leal-based check (opsize = 4)
: (orig=0x05655fe00)0x89c6                    mov %eax, %esi                  
: (orig=0x05655fe02)0x8dbb08050000            lea 0x00000508(%ebx), %edi      
: (orig=0x05655fe08)0x893c24                  mov %edi, (%esp)                
leal-based check (opsize = 4)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217310)
: (orig=0x05655fe0b)0xff9320080000            call 0x00000820(%ebx)           
start fun: action_jmp_indirect(*addr=0x5655fe0b, *transl_addr=0x3ecad377, length=6)
end fun: -> close, transl_length=25
end fun: -> 0x3ecad310,   next_tu=0x5655fe11 (len: 128)
ff = 350
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556240)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad397start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56556240, *transl_address=0x3ecad397)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISdadEND FLAG ANALYSIS: (orig=0x056556240)0x8b442404                mov 0x04(%esp), %eax            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056556244)0x83400401                add $0x01, 0x04(%eax)           
leal-based check (opsize = 4)
: (orig=0x056556248)0xc3                      ret                             
start fun: action_ret(*addr=0x56556248, *transl_addr=0x3ecad3c2, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecad397,   next_tu=0x56556249 (len: 57)
ff = 351
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fe11)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad3d7start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655fe11, *transl_address=0x3ecad3d7)
end fun:  


 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAddaEND FLAG ANALYSIS: (orig=0x05655fe11)0x6bc54c                  imul %ebp, $0x4c, %eax          
: (orig=0x05655fe14)0x8d84032c000000          lea 0x0000002c(%ebx, %eax), %eax 
: (orig=0x05655fe1b)0x8b08                    mov (%eax), %ecx                
leal-based check (opsize = 4)
: (orig=0x05655fe1d)0x85c9                    test %ecx, %ecx                 
: (orig=0x05655fe1f)0x7509                    jnz +0x09                       
action_jcc
start fun: action_jcc(*addr=0x5655fe1f, *transl_addr=0x3ecad3f6, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fe2a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a560, target: 0x5655fe2a, origin: 0x3ecad3f8start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fe21)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a4f0, target: 0x5655fe21, origin: 0x3ecad3fdend fun: -> close, transl_length=11
end fun: -> 0x3ecad3d7,   next_tu=0x5655fe21 (len: 42)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fe21)
end fun: -> 0x00000000
ff = 352
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fe21)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad408start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655fe21, *transl_address=0x3ecad408)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f78 -> 0x00216640 (0x00216690)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217310)


 opt flags pass 

BEGIN FLAG ANALYSISdddfaD1.ddaddadddEND FLAG ANALYSIS: (orig=0x05655fe21)0xeb66                    jmp +0x66                       
original_addr=05655fe21 / addr=05655fe21
start fun: action_jmp(*addr=0x5655fe21, *transl_addr=0x3ecad408, length=2)
action_jmp
original jmp_target: 0x5655fe89start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fe89)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655fe89)0x8930                    mov %esi, (%eax)                
leal-based check (opsize = 4)
: (orig=0x05655fe8b)0xebaa                    jmp +0xaa                       
original_addr=05655fe8b / addr=05655fe8b
start fun: action_jmp(*addr=0x5655fe8b, *transl_addr=0x3ecad41a, length=2)
action_jmp
original jmp_target: 0x5655fe37start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fe37)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655fe37)0x6bd54c                  imul %ebp, $0x4c, %edx          
: (orig=0x05655fe3a)0x8b8320050000            mov 0x00000520(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05655fe40)0x893c24                  mov %edi, (%esp)                
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655fe43)0x8384133000000001        add $0x01, 0x00000030(%ebx, %edx) 
leal-based check (opsize = 4)
: (orig=0x05655fe4b)0x8b9324050000            mov 0x00000524(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x05655fe51)0x898650020000            mov %eax, 0x00000250(%esi)      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655fe57)0x83c001                  add $0x01, %eax                 
: (orig=0x05655fe5a)0x899654020000            mov %edx, 0x00000254(%esi)      
SAV
leal-based check (opsize = 4)
RST
opcode table: 0x00243f78 -> 0x00216640 (0x00216690)
: (orig=0x05655fe60)0x83d200                  adc $0x00, %edx                 
: (orig=0x05655fe63)0x898320050000            mov %eax, 0x00000520(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05655fe69)0x899324050000            mov %edx, 0x00000524(%ebx)      
leal-based check (opsize = 4)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217310)
: (orig=0x05655fe6f)0xff9324080000            call 0x00000824(%ebx)           
start fun: action_jmp_indirect(*addr=0x5655fe6f, *transl_addr=0x3ecad51d, length=6)
end fun: -> close, transl_length=25
end fun: -> 0x3ecad408,   next_tu=0x5655fe75 (len: 302)
ff = 353
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556250)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad53dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56556250, *transl_address=0x3ecad53d)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISdadEND FLAG ANALYSIS: (orig=0x056556250)0x8b442404                mov 0x04(%esp), %eax            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056556254)0x83680401                sub $0x01, 0x04(%eax)           
leal-based check (opsize = 4)
: (orig=0x056556258)0xc3                      ret                             
start fun: action_ret(*addr=0x56556258, *transl_addr=0x3ecad568, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecad53d,   next_tu=0x56556259 (len: 57)
ff = 354
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655fe75)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad57dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655fe75, *transl_address=0x3ecad57d)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISdaddddEND FLAG ANALYSIS: (orig=0x05655fe75)0x8b5c241c                mov 0x1c(%esp), %ebx            
leal-based check (opsize = 4)
: (orig=0x05655fe79)0x8b742420                mov 0x20(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05655fe7d)0x8b7c2424                mov 0x24(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x05655fe81)0x8b6c2428                mov 0x28(%esp), %ebp            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655fe85)0x83c42c                  add $0x2c, %esp                 
: (orig=0x05655fe88)0xc3                      ret                             
start fun: action_ret(*addr=0x5655fe88, *transl_addr=0x3ecad5d8, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecad57d,   next_tu=0x5655fe89 (len: 105)
ff = 355
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd0f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad5edstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bd0f, *transl_address=0x3ecad5ed)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655bd0f)0x8b9368feffff            mov 0xfffffe68(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x05655bd15)0x85d2                    test %edx, %edx                 
opcode escape found: 0f: (orig=0x05655bd17)0x0f85f2020000            jnz +0x000002f2                 
action_jcc
start fun: action_jcc(*addr=0x5655bd17, *transl_addr=0x3ecad609, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655c00f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a4f0, target: 0x5655c00f, origin: 0x3ecad60bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd1d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a598, target: 0x5655bd1d, origin: 0x3ecad610end fun: -> close, transl_length=11
end fun: -> 0x3ecad5ed,   next_tu=0x5655bd1d (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd1d)
end fun: -> 0x00000000
ff = 356
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655bd1d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad61bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655bd1d, *transl_address=0x3ecad61b)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddddddEND FLAG ANALYSIS: (orig=0x05655bd1d)0x8d65f4                  lea 0xf4(%ebp), %esp            
: (orig=0x05655bd20)0x89f8                    mov %edi, %eax                  
: (orig=0x05655bd22)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655bd23)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655bd24)0x5f                      pop %edi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655bd25)0x5d                      pop %ebp                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655bd26)0xc3                      ret                             
start fun: action_ret(*addr=0x5655bd26, *transl_addr=0x3ecad66d, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecad61b,   next_tu=0x5655bd27 (len: 96)
ff = 357
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d480)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad682start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d480, *transl_address=0x3ecad682)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 

BEGIN FLAG ANALYSISdddddddaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05655d480)0x81c46c020000            add $0x0000026c, %esp           
: (orig=0x05655d486)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655d487)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655d488)0x89c7                    mov %eax, %edi                  
: (orig=0x05655d48a)0x89f8                    mov %edi, %eax                  
: (orig=0x05655d48c)0x5f                      pop %edi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655d48d)0x5d                      pop %ebp                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655d48e)0xc20c00                  ret $0x000c                     
start fun: action_ret(*addr=0x5655d48e, *transl_addr=0x3ecad6d8, length=3)
we must remove additional bytes: 12
end fun: -> close, transl_length=22
end fun: -> 0x3ecad682,   next_tu=0x5655d491 (len: 108)
ff = 358
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559154)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad6f5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559154, *transl_address=0x3ecad6f5)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode escape found: 0fopcode escape found: 0f

 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISAdaddddfa1.daEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056559154)0x83ec0c                  sub $0x0c, %esp                 
opcode escape found: 0f: (orig=0x056559157)0x0f31                    rdtsc                           
: (orig=0x056559159)0x2b8570ffffff            sub 0xffffff70(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655915f)0x1b9574ffffff            sbb 0xffffff74(%ebp), %edx      
SAV
leal-based check (opsize = 4)
RST
: (orig=0x056559165)0x898394feffff            mov %eax, 0xfffffe94(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05655916b)0x899398feffff            mov %edx, 0xfffffe98(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056559171)0x8b93a0050000            mov 0x000005a0(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x056559177)0x8b832c000000            mov 0x0000002c(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05655917d)0x85d2                    test %edx, %edx                 
PATCHING TST REG REG
: (orig=0x05655917f)0x894584                  mov %eax, 0x84(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056559182)0x0f84e8000000            jz +0x000000e8                  
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x56559182, *transl_addr=0x3ecad7e2, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559270)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a598, target: 0x56559270, origin: 0x3ecad7e4start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559188)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a5d0, target: 0x56559188, origin: 0x3ecad7e9end fun: -> close, transl_length=11
end fun: -> 0x3ecad6f5,   next_tu=0x56559188 (len: 248)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559188)
end fun: -> 0x00000000
ff = 359
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559188)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad7f4start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559188, *transl_address=0x3ecad7f4)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056559188)0x8b4858                  mov 0x58(%eax), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655918b)0x85c9                    test %ecx, %ecx                 
opcode escape found: 0f: (orig=0x05655918d)0x0f84dd000000            jz +0x000000dd                  
action_jcc
start fun: action_jcc(*addr=0x5655918d, *transl_addr=0x3ecad80a, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559270)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a608, target: 0x56559270, origin: 0x3ecad80cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559193)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a640, target: 0x56559193, origin: 0x3ecad811end fun: -> close, transl_length=11
end fun: -> 0x3ecad7f4,   next_tu=0x56559193 (len: 33)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559270)
end fun: -> 0x00000000
ff = 360
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559270)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad81cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56559270, *transl_address=0x3ecad81c)
end fun:  
opcode escape found: 0fopcode escape found: 0f

 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdddddddddddddddEND FLAG ANALYSIS: (orig=0x056559270)0x8b4584                  mov 0x84(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x056559273)0x8b5584                  mov 0x84(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x056559276)0x8b4d10                  mov 0x10(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x056559279)0x8b7514                  mov 0x14(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05655927c)0x8b8050010000            mov 0x00000150(%eax), %eax      
leal-based check (opsize = 4)
: (orig=0x056559282)0xc68568ffffff01          mov $0x01, 0xffffff68(%ebp)     
leal-based check (opsize = 1)
: (orig=0x056559289)0x894508                  mov %eax, 0x08(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655928c)0x8b4584                  mov 0x84(%ebp), %eax            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655928f)0x0fb78058010000          movzx 0x00000158(%eax), %eax    
leal-based check (opsize = 4)
: (orig=0x056559296)0x89450c                  mov %eax, 0x0c(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056559299)0x8d83d58bffff            lea 0xffff8bd5(%ebx), %eax      
: (orig=0x05655929f)0x894204                  mov %eax, 0x04(%edx)            
leal-based check (opsize = 4)
: (orig=0x0565592a2)0x8b8254010000            mov 0x00000154(%edx), %eax      
leal-based check (opsize = 4)
: (orig=0x0565592a8)0x8901                    mov %eax, (%ecx)                
leal-based check (opsize = 4)
: (orig=0x0565592aa)0x8b16                    mov (%esi), %edx                
leal-based check (opsize = 4)
: (orig=0x0565592ac)0x85d2                    test %edx, %edx                 
opcode escape found: 0f: (orig=0x0565592ae)0x0f8414e0ffff            jz +0xffffe014                  
action_jcc
start fun: action_jcc(*addr=0x565592ae, *transl_addr=0x3ecad952, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565572c8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a5d0, target: 0x565572c8, origin: 0x3ecad954start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592b4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a678, target: 0x565592b4, origin: 0x3ecad959end fun: -> close, transl_length=11
end fun: -> 0x3ecad81c,   next_tu=0x565592b4 (len: 321)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592b4)
end fun: -> 0x00000000
ff = 361
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592b4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad964start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565592b4, *transl_address=0x3ecad964)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 05 with reg 2

BEGIN FLAG ANALYSISCAddddEND FLAG ANALYSIS: (orig=0x0565592b4)0x89f0                    mov %esi, %eax                  
: (orig=0x0565592b6)0x8d4e08                  lea 0x08(%esi), %ecx            
: (orig=0x0565592b9)0x8b7510                  mov 0x10(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x0565592bc)0xeb20                    jmp +0x20                       
original_addr=0565592bc / addr=0565592bc
start fun: action_jmp(*addr=0x565592bc, *transl_addr=0x3ecad97e, length=2)
action_jmp
original jmp_target: 0x565592destart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592de)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x0565592de)0x83fa05                  cmp $0x05, %edx                 
: (orig=0x0565592e1)0x75db                    jnz +0xdb                       
action_jcc
start fun: action_jcc(*addr=0x565592e1, *transl_addr=0x3ecad981, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592be)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a608, target: 0x565592be, origin: 0x3ecad983start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592e3)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a6b0, target: 0x565592e3, origin: 0x3ecad988end fun: -> close, transl_length=11
end fun: -> 0x3ecad964,   next_tu=0x565592e3 (len: 40)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592be)
end fun: -> 0x00000000
ff = 362
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592be)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad993start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565592be, *transl_address=0x3ecad993)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 09 with reg 2

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x0565592be)0x83fa09                  cmp $0x09, %edx                 
: (orig=0x0565592c1)0x7442                    jz +0x42                        
action_jcc
start fun: action_jcc(*addr=0x565592c1, *transl_addr=0x3ecad996, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559305)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a678, target: 0x56559305, origin: 0x3ecad998start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592c3)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a6e8, target: 0x565592c3, origin: 0x3ecad99dend fun: -> close, transl_length=11
end fun: -> 0x3ecad993,   next_tu=0x565592c3 (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592c3)
end fun: -> 0x00000000
ff = 363
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592c3)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad9a8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565592c3, *transl_address=0x3ecad9a8)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 03 with reg 2

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x0565592c3)0x83fa03                  cmp $0x03, %edx                 
: (orig=0x0565592c6)0x7506                    jnz +0x06                       
action_jcc
start fun: action_jcc(*addr=0x565592c6, *transl_addr=0x3ecad9ab, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592ce)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a608, target: 0x565592ce, origin: 0x3ecad9adstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592c8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a720, target: 0x565592c8, origin: 0x3ecad9b2end fun: -> close, transl_length=11
end fun: -> 0x3ecad9a8,   next_tu=0x565592c8 (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592ce)
end fun: -> 0x00000000
ff = 364
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592ce)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecad9bdstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565592ce, *transl_address=0x3ecad9bd)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdadaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x0565592ce)0x83c008                  add $0x08, %eax                 
: (orig=0x0565592d1)0x89c2                    mov %eax, %edx                  
: (orig=0x0565592d3)0x2b5514                  sub 0x14(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x0565592d6)0x8b5411f8                mov 0xf8(%ecx, %edx), %edx      
leal-based check (opsize = 4)
: (orig=0x0565592da)0x85d2                    test %edx, %edx                 
: (orig=0x0565592dc)0x741b                    jz +0x1b                        
action_jcc
start fun: action_jcc(*addr=0x565592dc, *transl_addr=0x3ecad9ee, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592f9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a6e8, target: 0x565592f9, origin: 0x3ecad9f0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592de)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a758, target: 0x565592de, origin: 0x3ecad9f5end fun: -> close, transl_length=11
end fun: -> 0x3ecad9bd,   next_tu=0x565592de (len: 60)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592de)
end fun: -> 0x00000000
ff = 365
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592de)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecada00start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565592de, *transl_address=0x3ecada00)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 05 with reg 2

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x0565592de)0x83fa05                  cmp $0x05, %edx                 
: (orig=0x0565592e1)0x75db                    jnz +0xdb                       
action_jcc
start fun: action_jcc(*addr=0x565592e1, *transl_addr=0x3ecada03, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592be)
end fun: -> 0x3ecad993
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592e3)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a608, target: 0x565592e3, origin: 0x3ecada0aend fun: -> close, transl_length=11
end fun: -> 0x3ecada00,   next_tu=0x565592e3 (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592f9)
end fun: -> 0x00000000
ff = 366
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565592f9)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecada15start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565592f9, *transl_address=0x3ecada15)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCD4.4.1.aaaddddEND FLAG ANALYSIS: (orig=0x0565592f9)0xc68568ffffff01          mov $0x01, 0xffffff68(%ebp)     
leal-based check (opsize = 1)
: (orig=0x056559300)0xe9c3dfffff              jmp +0xffffdfc3                 
original_addr=056559300 / addr=056559300
start fun: action_jmp(*addr=0x56559300, *transl_addr=0x3ecada2f, length=5)
action_jmp
jump_target = 0ffffdfc3 + 056559300 + 05original jmp_target: 0x565572c8start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565572c8)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x0565572c8)0x8b4584                  mov 0x84(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x0565572cb)0x8b4d0c                  mov 0x0c(%ebp), %ecx            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x0565572ce)0x83809001000001          add $0x01, 0x00000190(%eax)     
leal-based check (opsize = 4)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x0565572d5)0xc1e105                  shl $0x05, %ecx                 
: (orig=0x0565572d8)0x034d08                  add 0x08(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x0565572db)0x394d08                  cmp %ecx, 0x08(%ebp)            
leal-based check (opsize = 4)
: (orig=0x0565572de)0xc780b001000000000000    mov $0x00000000, 0x000001b0(%eax) 
SAV
leal-based check (opsize = 4)
: (orig=0x0565572e8)0xc780b401000000000000    mov $0x00000000, 0x000001b4(%eax) 
leal-based check (opsize = 4)
: (orig=0x0565572f2)0xc780ac010000ffffffff    mov $0xffffffff, 0x000001ac(%eax) 
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x0565572fc)0x0f83a9250000            jnc +0x000025a9                 
action_jcc
start fun: action_jcc(*addr=0x565572fc, *transl_addr=0x3ecadb24, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565598ab)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a758, target: 0x565598ab, origin: 0x3ecadb26start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557302)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a790, target: 0x56557302, origin: 0x3ecadb2bend fun: -> close, transl_length=11
end fun: -> 0x3ecada15,   next_tu=0x56557302 (len: 282)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557302)
end fun: -> 0x00000000
ff = 367
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557302)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadb36start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557302, *transl_address=0x3ecadb36)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 06 with reg 6

BEGIN FLAG ANALYSISCAdddddaddddddEND FLAG ANALYSIS: (orig=0x056557302)0x8b93bcfcffff            mov 0xfffffcbc(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x056557308)0x8db364080000            lea 0x00000864(%ebx), %esi      
: (orig=0x05655730e)0x8dbb70080000            lea 0x00000870(%ebx), %edi      
: (orig=0x056557314)0x8b4508                  mov 0x08(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x056557317)0xc68564ffffff00          mov $0x00, 0xffffff64(%ebp)     
leal-based check (opsize = 1)
: (orig=0x05655731e)0x897580                  mov %esi, 0x80(%ebp)            
leal-based check (opsize = 4)
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
: (orig=0x056557321)0xf7da                    neg %edx                        
: (orig=0x056557323)0x899578ffffff            mov %edx, 0xffffff78(%ebp)      
leal-based check (opsize = 4)
: (orig=0x056557329)0x8b5584                  mov 0x84(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655732c)0x89bd58ffffff            mov %edi, 0xffffff58(%ebp)      
leal-based check (opsize = 4)
: (orig=0x056557332)0xeb26                    jmp +0x26                       
original_addr=056557332 / addr=056557332
start fun: action_jmp(*addr=0x56557332, *transl_addr=0x3ecadbea, length=2)
action_jmp
original jmp_target: 0x5655735astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655735a)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655735a)0x8b30                    mov (%eax), %esi                
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655735c)0x83fe06                  cmp $0x06, %esi                 
opcode escape found: 0f: (orig=0x05655735f)0x0f84ad010000            jz +0x000001ad                  
action_jcc
start fun: action_jcc(*addr=0x5655735f, *transl_addr=0x3ecadbff, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557512)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a6e8, target: 0x56557512, origin: 0x3ecadc01start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557365)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a7c8, target: 0x56557365, origin: 0x3ecadc06end fun: -> close, transl_length=11
end fun: -> 0x3ecadb36,   next_tu=0x56557365 (len: 212)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557512)
end fun: -> 0x00000000
ff = 368
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557512)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadc11start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557512, *transl_address=0x3ecadc11)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAaddadEND FLAG ANALYSIS: (orig=0x056557512)0x8b7508                  mov 0x08(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x056557515)0x2b7008                  sub 0x08(%eax), %esi            
leal-based check (opsize = 4)
: (orig=0x056557518)0x8932                    mov %esi, (%edx)                
leal-based check (opsize = 4)
: (orig=0x05655751a)0xe930feffff              jmp +0xfffffe30                 
original_addr=05655751a / addr=05655751a
start fun: action_jmp(*addr=0x5655751a, *transl_addr=0x3ecadc4b, length=5)
action_jmp
jump_target = 0fffffe30 + 05655751a + 05original jmp_target: 0x5655734fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655734f)0x83c020                  add $0x20, %eax                 
: (orig=0x056557352)0x39c8                    cmp %ecx, %eax                  
opcode escape found: 0f: (orig=0x056557354)0x0f8385000000            jnc +0x00000085                 
action_jcc
start fun: action_jcc(*addr=0x56557354, *transl_addr=0x3ecadc50, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565573df)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a790, target: 0x565573df, origin: 0x3ecadc52start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655735a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a800, target: 0x5655735a, origin: 0x3ecadc57end fun: -> close, transl_length=11
end fun: -> 0x3ecadc11,   next_tu=0x5655735a (len: 74)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655735a)
end fun: -> 0x00000000
ff = 369
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655735a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadc62start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655735a, *transl_address=0x3ecadc62)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 06 with reg 6

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655735a)0x8b30                    mov (%eax), %esi                
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655735c)0x83fe06                  cmp $0x06, %esi                 
opcode escape found: 0f: (orig=0x05655735f)0x0f84ad010000            jz +0x000001ad                  
action_jcc
start fun: action_jcc(*addr=0x5655735f, *transl_addr=0x3ecadc77, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557512)
end fun: -> 0x3ecadc11
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557365)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a6e8, target: 0x56557365, origin: 0x3ecadc7eend fun: -> close, transl_length=11
end fun: -> 0x3ecadc62,   next_tu=0x56557365 (len: 32)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557365)
end fun: -> 0x00000000
ff = 370
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557365)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadc89start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557365, *transl_address=0x3ecadc89)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCEND FLAG ANALYSIS: (orig=0x056557365)0x76cd                    jbe +0xcd                       
action_jcc
start fun: action_jcc(*addr=0x56557365, *transl_addr=0x3ecadc89, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557334)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a800, target: 0x56557334, origin: 0x3ecadc8bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557367)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a838, target: 0x56557367, origin: 0x3ecadc90end fun: -> close, transl_length=11
end fun: -> 0x3ecadc89,   next_tu=0x56557367 (len: 11)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557334)
end fun: -> 0x00000000
ff = 371
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557334)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadc9bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557334, *transl_address=0x3ecadc9b)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 02 with reg 6

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056557334)0x83fe02                  cmp $0x02, %esi                 
opcode escape found: 0f: (orig=0x056557337)0x0f845f020000            jz +0x0000025f                  
action_jcc
start fun: action_jcc(*addr=0x56557337, *transl_addr=0x3ecadc9e, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655759c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a6e8, target: 0x5655759c, origin: 0x3ecadca0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655733d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a870, target: 0x5655733d, origin: 0x3ecadca5end fun: -> close, transl_length=11
end fun: -> 0x3ecadc9b,   next_tu=0x5655733d (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655733d)
end fun: -> 0x00000000
ff = 372
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655733d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadcb0start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655733d, *transl_address=0x3ecadcb0)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 03 with reg 6

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655733d)0x83fe03                  cmp $0x03, %esi                 
opcode escape found: 0f: (orig=0x056557340)0x0f8428020000            jz +0x00000228                  
action_jcc
start fun: action_jcc(*addr=0x56557340, *transl_addr=0x3ecadcb3, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655756e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a800, target: 0x5655756e, origin: 0x3ecadcb5start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557346)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a8a8, target: 0x56557346, origin: 0x3ecadcbaend fun: -> close, transl_length=11
end fun: -> 0x3ecadcb0,   next_tu=0x56557346 (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655756e)
end fun: -> 0x00000000
ff = 373
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655756e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadcc5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655756e, *transl_address=0x3ecadcc5)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 7 with reg 7

BEGIN FLAG ANALYSISCAdddaddEND FLAG ANALYSIS: (orig=0x05655756e)0x8b7d80                  mov 0x80(%ebp), %edi            
leal-based check (opsize = 4)
: (orig=0x056557571)0x8b7008                  mov 0x08(%eax), %esi            
leal-based check (opsize = 4)
: (orig=0x056557574)0x0332                    add (%edx), %esi                
leal-based check (opsize = 4)
: (orig=0x056557576)0x89bb64050000            mov %edi, 0x00000564(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05655757c)0x8bbb50050000            mov 0x00000550(%ebx), %edi      
leal-based check (opsize = 4)
: (orig=0x056557582)0x89b364080000            mov %esi, 0x00000864(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056557588)0x85ff                    test %edi, %edi                 
opcode escape found: 0f: (orig=0x05655758a)0x0f8404100000            jz +0x00001004                  
action_jcc
start fun: action_jcc(*addr=0x5655758a, *transl_addr=0x3ecadd4f, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56558594)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a870, target: 0x56558594, origin: 0x3ecadd51start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557590)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a8e0, target: 0x56557590, origin: 0x3ecadd56end fun: -> close, transl_length=11
end fun: -> 0x3ecadcc5,   next_tu=0x56557590 (len: 149)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557590)
end fun: -> 0x00000000
ff = 374
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557590)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadd61start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557590, *transl_address=0x3ecadd61)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAaddEND FLAG ANALYSIS: (orig=0x056557590)0xc68564ffffff01          mov $0x01, 0xffffff64(%ebp)     
leal-based check (opsize = 1)
: (orig=0x056557597)0xe9b3fdffff              jmp +0xfffffdb3                 
original_addr=056557597 / addr=056557597
start fun: action_jmp(*addr=0x56557597, *transl_addr=0x3ecadd7b, length=5)
action_jmp
jump_target = 0fffffdb3 + 056557597 + 05original jmp_target: 0x5655734fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655734f)0x83c020                  add $0x20, %eax                 
: (orig=0x056557352)0x39c8                    cmp %ecx, %eax                  
opcode escape found: 0f: (orig=0x056557354)0x0f8385000000            jnc +0x00000085                 
action_jcc
start fun: action_jcc(*addr=0x56557354, *transl_addr=0x3ecadd80, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565573df)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a800, target: 0x565573df, origin: 0x3ecadd82start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655735a)
end fun: -> 0x3ecadc62
end fun: -> close, transl_length=11
end fun: -> 0x3ecadd61,   next_tu=0x5655735a (len: 42)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557346)
end fun: -> 0x00000000
ff = 375
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557346)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadd92start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557346, *transl_address=0x3ecadd92)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 01 with reg 6

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056557346)0x83fe01                  cmp $0x01, %esi                 
opcode escape found: 0f: (orig=0x056557349)0x0f84d0010000            jz +0x000001d0                  
action_jcc
start fun: action_jcc(*addr=0x56557349, *transl_addr=0x3ecadd95, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655751f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a8e0, target: 0x5655751f, origin: 0x3ecadd97start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a918, target: 0x5655734f, origin: 0x3ecadd9cend fun: -> close, transl_length=11
end fun: -> 0x3ecadd92,   next_tu=0x5655734f (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655751f)
end fun: -> 0x00000000
ff = 376
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655751f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadda7start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655751f, *transl_address=0x3ecadda7)
end fun:  


 opt flags pass 
cmp reg mem

BEGIN FLAG ANALYSISCAaaddEND FLAG ANALYSIS: (orig=0x05655751f)0x8b7808                  mov 0x08(%eax), %edi            
leal-based check (opsize = 4)
: (orig=0x056557522)0x8bb578ffffff            mov 0xffffff78(%ebp), %esi      
leal-based check (opsize = 4)
: (orig=0x056557528)0x21fe                    and %edi, %esi                  
: (orig=0x05655752a)0x0332                    add (%edx), %esi                
leal-based check (opsize = 4)
: (orig=0x05655752c)0x3bb2ac010000            cmp 0x000001ac(%edx), %esi      
leal-based check (opsize = 4)
: (orig=0x056557532)0x7306                    jnc +0x06                       
action_jcc
start fun: action_jcc(*addr=0x56557532, *transl_addr=0x3ecade03, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655753a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a8a8, target: 0x5655753a, origin: 0x3ecade05start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557534)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a950, target: 0x56557534, origin: 0x3ecade0aend fun: -> close, transl_length=11
end fun: -> 0x3ecadda7,   next_tu=0x56557534 (len: 103)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557534)
end fun: -> 0x00000000
ff = 377
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557534)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecade15start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557534, *transl_address=0x3ecade15)
end fun:  


 opt flags pass 
cmp reg mem

BEGIN FLAG ANALYSISCAaadEND FLAG ANALYSIS: (orig=0x056557534)0x89b2ac010000            mov %esi, 0x000001ac(%edx)      
leal-based check (opsize = 4)
: (orig=0x05655753a)0x037814                  add 0x14(%eax), %edi            
leal-based check (opsize = 4)
: (orig=0x05655753d)0x033a                    add (%edx), %edi                
leal-based check (opsize = 4)
: (orig=0x05655753f)0x3bbab0010000            cmp 0x000001b0(%edx), %edi      
leal-based check (opsize = 4)
: (orig=0x056557545)0x7606                    jbe +0x06                       
action_jcc
start fun: action_jcc(*addr=0x56557545, *transl_addr=0x3ecade6f, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655754d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a8e0, target: 0x5655754d, origin: 0x3ecade71start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557547)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a988, target: 0x56557547, origin: 0x3ecade76end fun: -> close, transl_length=11
end fun: -> 0x3ecade15,   next_tu=0x56557547 (len: 101)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557547)
end fun: -> 0x00000000
ff = 378
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557547)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecade81start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557547, *transl_address=0x3ecade81)
end fun:  
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056557547)0x89bab0010000            mov %edi, 0x000001b0(%edx)      
leal-based check (opsize = 4)
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
: (orig=0x05655754d)0xf6401801                test $0x01, 0x18(%eax)          
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x056557551)0x0f84f8fdffff            jz +0xfffffdf8                  
action_jcc
start fun: action_jcc(*addr=0x56557551, *transl_addr=0x3ecadeaf, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a950, target: 0x5655734f, origin: 0x3ecadeb1start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557557)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a9c0, target: 0x56557557, origin: 0x3ecadeb6end fun: -> close, transl_length=11
end fun: -> 0x3ecade81,   next_tu=0x56557557 (len: 57)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557557)
end fun: -> 0x00000000
ff = 379
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557557)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadec1start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557557, *transl_address=0x3ecadec1)
end fun:  
opcode escape found: 0f

 opt flags pass 
cmp reg mem

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x056557557)0x3bbab4010000            cmp 0x000001b4(%edx), %edi      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655755d)0x0f86ecfdffff            jbe +0xfffffdec                 
action_jcc
start fun: action_jcc(*addr=0x5655755d, *transl_addr=0x3ecadedb, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a988, target: 0x5655734f, origin: 0x3ecadeddstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557563)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a9f8, target: 0x56557563, origin: 0x3ecadee2end fun: -> close, transl_length=11
end fun: -> 0x3ecadec1,   next_tu=0x56557563 (len: 37)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557563)
end fun: -> 0x00000000
ff = 380
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557563)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadeedstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557563, *transl_address=0x3ecadeed)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAaddEND FLAG ANALYSIS: (orig=0x056557563)0x89bab4010000            mov %edi, 0x000001b4(%edx)      
leal-based check (opsize = 4)
: (orig=0x056557569)0xe9e1fdffff              jmp +0xfffffde1                 
original_addr=056557569 / addr=056557569
start fun: action_jmp(*addr=0x56557569, *transl_addr=0x3ecadf07, length=5)
action_jmp
jump_target = 0fffffde1 + 056557569 + 05original jmp_target: 0x5655734fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655734f)0x83c020                  add $0x20, %eax                 
: (orig=0x056557352)0x39c8                    cmp %ecx, %eax                  
opcode escape found: 0f: (orig=0x056557354)0x0f8385000000            jnc +0x00000085                 
action_jcc
start fun: action_jcc(*addr=0x56557354, *transl_addr=0x3ecadf0c, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565573df)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a9c0, target: 0x565573df, origin: 0x3ecadf0estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655735a)
end fun: -> 0x3ecadc62
end fun: -> close, transl_length=11
end fun: -> 0x3ecadeed,   next_tu=0x5655735a (len: 42)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655753a)
end fun: -> 0x00000000
ff = 381
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655753a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadf1estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655753a, *transl_address=0x3ecadf1e)
end fun:  


 opt flags pass 
cmp reg mem

BEGIN FLAG ANALYSISCAaaEND FLAG ANALYSIS: (orig=0x05655753a)0x037814                  add 0x14(%eax), %edi            
leal-based check (opsize = 4)
: (orig=0x05655753d)0x033a                    add (%edx), %edi                
leal-based check (opsize = 4)
: (orig=0x05655753f)0x3bbab0010000            cmp 0x000001b0(%edx), %edi      
leal-based check (opsize = 4)
: (orig=0x056557545)0x7606                    jbe +0x06                       
action_jcc
start fun: action_jcc(*addr=0x56557545, *transl_addr=0x3ecadf5e, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655754d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a9f8, target: 0x5655754d, origin: 0x3ecadf60start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557547)
end fun: -> 0x3ecade81
end fun: -> close, transl_length=11
end fun: -> 0x3ecadf1e,   next_tu=0x56557547 (len: 75)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x00000000
ff = 382
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadf70start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655734f, *transl_address=0x3ecadf70)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655734f)0x83c020                  add $0x20, %eax                 
: (orig=0x056557352)0x39c8                    cmp %ecx, %eax                  
opcode escape found: 0f: (orig=0x056557354)0x0f8385000000            jnc +0x00000085                 
action_jcc
start fun: action_jcc(*addr=0x56557354, *transl_addr=0x3ecadf75, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565573df)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a8a8, target: 0x565573df, origin: 0x3ecadf77start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655735a)
end fun: -> 0x3ecadc62
end fun: -> close, transl_length=11
end fun: -> 0x3ecadf70,   next_tu=0x5655735a (len: 16)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655759c)
end fun: -> 0x00000000
ff = 383
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655759c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadf87start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655759c, *transl_address=0x3ecadf87)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAaddadEND FLAG ANALYSIS: (orig=0x05655759c)0x8b7008                  mov 0x08(%eax), %esi            
leal-based check (opsize = 4)
: (orig=0x05655759f)0x0332                    add (%edx), %esi                
leal-based check (opsize = 4)
: (orig=0x0565575a1)0x897208                  mov %esi, 0x08(%edx)            
leal-based check (opsize = 4)
: (orig=0x0565575a4)0xe9a6fdffff              jmp +0xfffffda6                 
original_addr=0565575a4 / addr=0565575a4
start fun: action_jmp(*addr=0x565575a4, *transl_addr=0x3ecadfc1, length=5)
action_jmp
jump_target = 0fffffda6 + 0565575a4 + 05original jmp_target: 0x5655734fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x3ecadf70
translated jmp_target: 0x3ecadf70end fun: -> close, transl_length=5
: (orig=0x0565575a9)0x8b7d84                  mov 0x84(%ebp), %edi            
: (orig=0x0565575ac)0x8b07                    mov (%edi), %eax                
: (orig=0x0565575ae)0x85c0                    test %eax, %eax                 
finishing TU because instruction limit was hit, invokingtranslation function on 0x565575b0allocated trampoline: 0x3ec9a950, target: 0x565575b0, origin: 0x3ecadfd7end fun: -> 0x3ecadf87,   next_tu=0x565575b0 (len: 72)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x3ecadf70
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557367)
end fun: -> 0x00000000
ff = 384
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557367)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadfdbstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557367, *transl_address=0x3ecadfdb)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002164d8)
opcode escape found: 0f

 opt flags pass 
... cmp imm 06474e551 with reg!=eax 6

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002164d8)
: (orig=0x056557367)0x81fe51e57464            cmp $0x6474e551, %esi           
opcode escape found: 0f: (orig=0x05655736d)0x0f8491010000            jz +0x00000191                  
action_jcc
start fun: action_jcc(*addr=0x5655736d, *transl_addr=0x3ecadfe1, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557504)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a918, target: 0x56557504, origin: 0x3ecadfe3start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557373)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a6e8, target: 0x56557373, origin: 0x3ecadfe8end fun: -> close, transl_length=11
end fun: -> 0x3ecadfdb,   next_tu=0x56557373 (len: 17)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557373)
end fun: -> 0x00000000
ff = 385
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557373)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecadff3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557373, *transl_address=0x3ecadff3)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002164d8)
opcode escape found: 0f

 opt flags pass 
... cmp imm 06474e552 with reg!=eax 6

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002164d8)
: (orig=0x056557373)0x81fe52e57464            cmp $0x6474e552, %esi           
opcode escape found: 0f: (orig=0x056557379)0x0f846e010000            jz +0x0000016e                  
action_jcc
start fun: action_jcc(*addr=0x56557379, *transl_addr=0x3ecadff9, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565574ed)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a838, target: 0x565574ed, origin: 0x3ecadffbstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655737f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9aa30, target: 0x5655737f, origin: 0x3ecae000end fun: -> close, transl_length=11
end fun: -> 0x3ecadff3,   next_tu=0x5655737f (len: 17)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655737f)
end fun: -> 0x00000000
ff = 386
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655737f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae00bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655737f, *transl_address=0x3ecae00b)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 07 with reg 6

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655737f)0x83fe07                  cmp $0x07, %esi                 
: (orig=0x056557382)0x75cb                    jnz +0xcb                       
action_jcc
start fun: action_jcc(*addr=0x56557382, *transl_addr=0x3ecae00e, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x3ecadf70
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557384)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a6e8, target: 0x56557384, origin: 0x3ecae015end fun: -> close, transl_length=11
end fun: -> 0x3ecae00b,   next_tu=0x56557384 (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557504)
end fun: -> 0x00000000
ff = 387
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557504)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae020start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557504, *transl_address=0x3ecae020)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAadddEND FLAG ANALYSIS: (orig=0x056557504)0x8b7018                  mov 0x18(%eax), %esi            
leal-based check (opsize = 4)
: (orig=0x056557507)0x89b32c080000            mov %esi, 0x0000082c(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05655750d)0xe93dfeffff              jmp +0xfffffe3d                 
original_addr=05655750d / addr=05655750d
start fun: action_jmp(*addr=0x5655750d, *transl_addr=0x3ecae04e, length=5)
action_jmp
jump_target = 0fffffe3d + 05655750d + 05original jmp_target: 0x5655734fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x3ecadf70
translated jmp_target: 0x3ecadf70end fun: -> close, transl_length=5
: (orig=0x056557512)0x8b7508                  mov 0x08(%ebp), %esi            
: (orig=0x056557515)0x2b7008                  sub 0x08(%eax), %esi            
: (orig=0x056557518)0x8932                    mov %esi, (%edx)                
finishing TU because instruction limit was hit, invokingtranslation function on 0x5655751aallocated trampoline: 0x3ec9aa30, target: 0x5655751a, origin: 0x3ecae066end fun: -> 0x3ecae020,   next_tu=0x5655751a (len: 62)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565574ed)
end fun: -> 0x00000000
ff = 388
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565574ed)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae06astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565574ed, *transl_address=0x3ecae06a)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0f

 opt flags pass 
... compares reg 1 with reg 0

BEGIN FLAG ANALYSISCAadddddEND FLAG ANALYSIS: (orig=0x0565574ed)0x8b7008                  mov 0x08(%eax), %esi            
leal-based check (opsize = 4)
: (orig=0x0565574f0)0x89b248020000            mov %esi, 0x00000248(%edx)      
leal-based check (opsize = 4)
: (orig=0x0565574f6)0x8b7014                  mov 0x14(%eax), %esi            
leal-based check (opsize = 4)
: (orig=0x0565574f9)0x89b24c020000            mov %esi, 0x0000024c(%edx)      
leal-based check (opsize = 4)
: (orig=0x0565574ff)0xe94bfeffff              jmp +0xfffffe4b                 
original_addr=0565574ff / addr=0565574ff
start fun: action_jmp(*addr=0x565574ff, *transl_addr=0x3ecae0c6, length=5)
action_jmp
jump_target = 0fffffe4b + 0565574ff + 05original jmp_target: 0x5655734fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x3ecadf70
translated jmp_target: 0x3ecadf70end fun: -> close, transl_length=5
: (orig=0x056557504)0x8b7018                  mov 0x18(%eax), %esi            
: (orig=0x056557507)0x89b32c080000            mov %esi, 0x0000082c(%ebx)      
: (orig=0x05655750d)0xe93dfeffff              jmp +0xfffffe3d                 
original_addr=05655750d / addr=05655750d
start fun: action_jmp(*addr=0x5655750d, *transl_addr=0x3ecae0d6, length=5)
action_jmp
jump_target = 0fffffe3d + 05655750d + 05original jmp_target: 0x5655734fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655734f)
end fun: -> 0x3ecadf70
translated jmp_target: 0x3ecadf70end fun: -> close, transl_length=5
end fun: -> 0x3ecae06a,   next_tu=0x56557512 (len: 113)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565573df)
end fun: -> 0x00000000
ff = 389
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565573df)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae0e2start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565573df, *transl_address=0x3ecae0e2)
end fun:  


 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdddddEND FLAG ANALYSIS: (orig=0x0565573df)0x8b4584                  mov 0x84(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x0565573e2)0x8b90b0010000            mov 0x000001b0(%eax), %edx      
leal-based check (opsize = 4)
: (orig=0x0565573e8)0x8b80b4010000            mov 0x000001b4(%eax), %eax      
leal-based check (opsize = 4)
: (orig=0x0565573ee)0x8b7584                  mov 0x84(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x0565573f1)0x8b8e2c020000            mov 0x0000022c(%esi), %ecx      
leal-based check (opsize = 4)
: (orig=0x0565573f7)0x85c9                    test %ecx, %ecx                 
: (orig=0x0565573f9)0x7408                    jz +0x08                        
action_jcc
start fun: action_jcc(*addr=0x565573f9, *transl_addr=0x3ecae15a, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557403)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a838, target: 0x56557403, origin: 0x3ecae15cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565573fb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a918, target: 0x565573fb, origin: 0x3ecae161end fun: -> close, transl_length=11
end fun: -> 0x3ecae0e2,   next_tu=0x565573fb (len: 131)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557403)
end fun: -> 0x00000000
ff = 390
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557403)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae16cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557403, *transl_address=0x3ecae16c)
end fun:  


 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x056557403)0x85d2                    test %edx, %edx                 
: (orig=0x056557405)0x750d                    jnz +0x0d                       
action_jcc
start fun: action_jcc(*addr=0x56557405, *transl_addr=0x3ecae16e, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557414)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a8a8, target: 0x56557414, origin: 0x3ecae170start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557407)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9aa68, target: 0x56557407, origin: 0x3ecae175end fun: -> close, transl_length=11
end fun: -> 0x3ecae16c,   next_tu=0x56557407 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557414)
end fun: -> 0x00000000
ff = 391
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557414)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae180start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557414, *transl_address=0x3ecae180)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x056557414)0x85c0                    test %eax, %eax                 
: (orig=0x056557416)0x750d                    jnz +0x0d                       
action_jcc
start fun: action_jcc(*addr=0x56557416, *transl_addr=0x3ecae182, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557425)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a838, target: 0x56557425, origin: 0x3ecae184start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557418)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9aaa0, target: 0x56557418, origin: 0x3ecae189end fun: -> close, transl_length=11
end fun: -> 0x3ecae180,   next_tu=0x56557418 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557425)
end fun: -> 0x00000000
ff = 392
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557425)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae194start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557425, *transl_address=0x3ecae194)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056557425)0x8b8364050000            mov 0x00000564(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05655742b)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655742d)0x0f843c110000            jz +0x0000113c                  
action_jcc
start fun: action_jcc(*addr=0x5655742d, *transl_addr=0x3ecae1b0, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655856f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a8a8, target: 0x5655856f, origin: 0x3ecae1b2start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557433)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9aad8, target: 0x56557433, origin: 0x3ecae1b7end fun: -> close, transl_length=11
end fun: -> 0x3ecae194,   next_tu=0x56557433 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557433)
end fun: -> 0x00000000
ff = 393
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557433)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae1c2start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557433, *transl_address=0x3ecae1c2)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056557433)0x8b83a0050000            mov 0x000005a0(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056557439)0x85c0                    test %eax, %eax                 
: (orig=0x05655743b)0x7428                    jz +0x28                        
action_jcc
start fun: action_jcc(*addr=0x5655743b, *transl_addr=0x3ecae1de, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557465)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9a838, target: 0x56557465, origin: 0x3ecae1e0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655743d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ab10, target: 0x5655743d, origin: 0x3ecae1e5end fun: -> close, transl_length=11
end fun: -> 0x3ecae1c2,   next_tu=0x5655743d (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655743d)
end fun: -> 0x00000000
ff = 394
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655743d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae1f0start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655743d, *transl_address=0x3ecae1f0)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCAdddddddadddEND FLAG ANALYSIS: (orig=0x05655743d)0x8b937c050000            mov 0x0000057c(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x056557443)0x8bbb64050000            mov 0x00000564(%ebx), %edi      
leal-based check (opsize = 4)
: (orig=0x056557449)0x8b7204                  mov 0x04(%edx), %esi            
leal-based check (opsize = 4)
: (orig=0x05655744c)0x037004                  add 0x04(%eax), %esi            
leal-based check (opsize = 4)
: (orig=0x05655744f)0x89742404                mov %esi, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x056557453)0x8b07                    mov (%edi), %eax                
leal-based check (opsize = 4)
: (orig=0x056557455)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x056557458)0xe863620100              call +0x00016263                
action_call
start fun: action_call(*addr=0x56557458, *transl_addr=0x3ecae288, length=5)
original call_target: 0x5656d6c0return_address = 05655745d
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6c0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d6c0)0x8b4c2404                mov 0x04(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656d6c4)0x8b542408                mov 0x08(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656d6c8)0x8a01                    mov (%ecx), %eax                
leal-based check (opsize = 1)
: (orig=0x05656d6ca)0x3a02                    cmp (%edx), %eax                
leal-based check (opsize = 1)
: (orig=0x05656d6cc)0x7509                    jnz +0x09                       
action_jcc
start fun: action_jcc(*addr=0x5656d6cc, *transl_addr=0x3ecae2e3, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6d7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9aad8, target: 0x5656d6d7, origin: 0x3ecae2e5start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6ce)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ab48, target: 0x5656d6ce, origin: 0x3ecae2eaend fun: -> close, transl_length=11
end fun: -> 0x3ecae1f0,   next_tu=0x5656d6ce (len: 254)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6d7)
end fun: -> 0x00000000
ff = 395
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6d7)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae2f5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d6d7, *transl_address=0x3ecae2f5)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISdcDDEND FLAG ANALYSIS: (orig=0x05656d6d7)0xb801000000              mov $0x00000001, %eax           
: (orig=0x05656d6dc)0xb9ffffffff              mov $0xffffffff, %ecx           
opcode escape found: 0f: (orig=0x05656d6e1)0x0f42c1                  cmovc %ecx, %eax                
: (orig=0x05656d6e4)0xc3                      ret                             
start fun: action_ret(*addr=0x5656d6e4, *transl_addr=0x3ecae302, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecae2f5,   next_tu=0x5656d6e5 (len: 27)
ff = 396
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655745d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae317start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655745d, *transl_address=0x3ecae317)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655745d)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655745f)0x0f85b60c0000            jnz +0x00000cb6                 
action_jcc
start fun: action_jcc(*addr=0x5655745f, *transl_addr=0x3ecae319, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655811b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9aad8, target: 0x5655811b, origin: 0x3ecae31bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557465)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ab10, target: 0x56557465, origin: 0x3ecae320end fun: -> close, transl_length=11
end fun: -> 0x3ecae317,   next_tu=0x56557465 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655811b)
end fun: -> 0x00000000
ff = 397
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655811b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae32bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655811b, *transl_address=0x3ecae32b)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAddddEND FLAG ANALYSIS: (orig=0x05655811b)0xc7838008000000000000    mov $0x00000000, 0x00000880(%ebx) 
leal-based check (opsize = 4)
: (orig=0x056558125)0x8b4704                  mov 0x04(%edi), %eax            
leal-based check (opsize = 4)
: (orig=0x056558128)0x89b37c080000            mov %esi, 0x0000087c(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05655812e)0xc7838408000001000000    mov $0x00000001, 0x00000884(%ebx) 
leal-based check (opsize = 4)
: (orig=0x056558138)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655813a)0x0f85db150000            jnz +0x000015db                 
action_jcc
start fun: action_jcc(*addr=0x5655813a, *transl_addr=0x3ecae397, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655971b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ab80, target: 0x5655971b, origin: 0x3ecae399start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56558140)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9abb8, target: 0x56558140, origin: 0x3ecae39eend fun: -> close, transl_length=11
end fun: -> 0x3ecae32b,   next_tu=0x56558140 (len: 119)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56558140)
end fun: -> 0x00000000
ff = 398
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56558140)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae3a9start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56558140, *transl_address=0x3ecae3a9)
end fun:  
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x056558140)0x8d837c080000            lea 0x0000087c(%ebx), %eax      
: (orig=0x056558146)0x894704                  mov %eax, 0x04(%edi)            
leal-based check (opsize = 4)
opcode table: 0x00245170 -> 0x00216f00 (0x00216f00)
: (orig=0x056558149)0xf683dc06000004          test $0x04, 0x000006dc(%ebx)    
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x056558150)0x0f851cf3ffff            jnz +0xfffff31c                 
action_jcc
start fun: action_jcc(*addr=0x56558150, *transl_addr=0x3ecae3de, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557472)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9aad8, target: 0x56557472, origin: 0x3ecae3e0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56558156)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9abf0, target: 0x56558156, origin: 0x3ecae3e5end fun: -> close, transl_length=11
end fun: -> 0x3ecae3a9,   next_tu=0x56558156 (len: 64)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557472)
end fun: -> 0x00000000
ff = 399
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557472)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae3f0start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557472, *transl_address=0x3ecae3f0)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x056557472)0x80bd68ffffff00          cmp $0x00, 0xffffff68(%ebp)     
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x056557479)0x0f8566020000            jnz +0x00000266                 
action_jcc
start fun: action_jcc(*addr=0x56557479, *transl_addr=0x3ecae40a, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565576e5)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9abb8, target: 0x565576e5, origin: 0x3ecae40cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655747f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ac28, target: 0x5655747f, origin: 0x3ecae411end fun: -> close, transl_length=11
end fun: -> 0x3ecae3f0,   next_tu=0x5655747f (len: 37)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565576e5)
end fun: -> 0x00000000
ff = 400
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565576e5)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae41cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565576e5, *transl_address=0x3ecae41c)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x0565576e5)0x837dd402                cmp $0x02, 0xd4(%ebp)           
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x0565576e9)0x0f84aa200000            jz +0x000020aa                  
action_jcc
start fun: action_jcc(*addr=0x565576e9, *transl_addr=0x3ecae431, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559799)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9aad8, target: 0x56559799, origin: 0x3ecae433start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565576ef)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ac60, target: 0x565576ef, origin: 0x3ecae438end fun: -> close, transl_length=11
end fun: -> 0x3ecae41c,   next_tu=0x565576ef (len: 32)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565576ef)
end fun: -> 0x00000000
ff = 401
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565576ef)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae443start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565576ef, *transl_address=0x3ecae443)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x0565576ef)0x8b8b38feffff            mov 0xfffffe38(%ebx), %ecx      
leal-based check (opsize = 4)
: (orig=0x0565576f5)0x85c9                    test %ecx, %ecx                 
opcode escape found: 0f: (orig=0x0565576f7)0x0f84420e0000            jz +0x00000e42                  
action_jcc
start fun: action_jcc(*addr=0x565576f7, *transl_addr=0x3ecae45f, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655853f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9abb8, target: 0x5655853f, origin: 0x3ecae461start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565576fd)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ac98, target: 0x565576fd, origin: 0x3ecae466end fun: -> close, transl_length=11
end fun: -> 0x3ecae443,   next_tu=0x565576fd (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655853f)
end fun: -> 0x00000000
ff = 402
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655853f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae471start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655853f, *transl_address=0x3ecae471)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddddddddddEND FLAG ANALYSIS: (orig=0x05655853f)0x8db354050000            lea 0x00000554(%ebx), %esi      
: (orig=0x056558545)0x89b560ffffff            mov %esi, 0xffffff60(%ebp)      
leal-based check (opsize = 4)
: (orig=0x05655854b)0xe94af6ffff              jmp +0xfffff64a                 
original_addr=05655854b / addr=05655854b
start fun: action_jmp(*addr=0x5655854b, *transl_addr=0x3ecae492, length=5)
action_jmp
jump_target = 0fffff64a + 05655854b + 05original jmp_target: 0x56557b9astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557b9a)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x056557b9a)0xe8b12d0100              call +0x00012db1                
action_call
start fun: action_call(*addr=0x56557b9a, *transl_addr=0x3ecae492, length=5)
original call_target: 0x5656a950return_address = 056557b9f
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a950)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656a950)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05656a951)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05656a952)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05656a953)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656a954)0xe8f2360000              call +0x000036f2                
action_call
start fun: action_call(*addr=0x5656a954, *transl_addr=0x3ecae4eb, length=5)
original call_target: 0x5656e04breturn_address = 05656a959
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecae50c, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecae471,   next_tu=0x5656e04f (len: 169)
ff = 403
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a959)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae521start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a959, *transl_address=0x3ecae521)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
opcode escape found: 0f

 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISAdadaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656a959)0x81c39bb60000            add $0x0000b69b, %ebx           
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
: (orig=0x05656a95f)0x81ec0c020000            sub $0x0000020c, %esp           
: (orig=0x05656a965)0x8b933cfeffff            mov 0xfffffe3c(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x05656a96b)0x85d2                    test %edx, %edx                 
PATCHING TST REG REG
: (orig=0x05656a96d)0x89542424                mov %edx, 0x24(%esp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05656a971)0x0f84d1000000            jz +0x000000d1                  
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5656a971, *transl_addr=0x3ecae568, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa48)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9abb8, target: 0x5656aa48, origin: 0x3ecae56astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a977)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ac60, target: 0x5656a977, origin: 0x3ecae56fend fun: -> close, transl_length=11
end fun: -> 0x3ecae521,   next_tu=0x5656a977 (len: 82)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa48)
end fun: -> 0x00000000
ff = 404
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa48)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae57astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aa48, *transl_address=0x3ecae57a)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISBDD4.4.4.4.END FLAG ANALYSIS: (orig=0x05656aa48)0x8d44243a                lea 0x3a(%esp), %eax            
SAV
: (orig=0x05656aa4c)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05656aa4f)0xe86c280000              call +0x0000286c                
action_call
start fun: action_call(*addr=0x5656aa4f, *transl_addr=0x3ecae5aa, length=5)
original call_target: 0x5656d2c0return_address = 05656aa54
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d2c0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d2c0)0x89da                    mov %ebx, %edx                  
: (orig=0x05656d2c2)0x8b5c2404                mov 0x04(%esp), %ebx            
leal-based check (opsize = 4)
RST
: (orig=0x05656d2c6)0xb87a000000              mov $0x0000007a, %eax           
: (orig=0x05656d2cb)0xcd80                    int $0x80                       
closing TU upon request, invoking translation function on 0x5656d2cdallocated trampoline: 0x3ec9acd0, target: 0x5656d2cd, origin: 0x3ecae61bend fun: -> 0x3ecae57a,   next_tu=0x5656d2cd (len: 153)
SYSCALL 122
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d2cd)
end fun: -> 0x00000000
ff = 405
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d2cd)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae61fstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d2cd, *transl_address=0x3ecae61f)
end fun:  


 opt flags pass 
... cmp imm 0fffff001 with eax

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656d2cd)0x89d3                    mov %edx, %ebx                  
: (orig=0x05656d2cf)0x3d01f0ffff              cmp $0xfffff001, %eax           
: (orig=0x05656d2d4)0x7301                    jnc +0x01                       
action_jcc
start fun: action_jcc(*addr=0x5656d2d4, *transl_addr=0x3ecae626, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d2d7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9abb8, target: 0x5656d2d7, origin: 0x3ecae628start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d2d6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ad08, target: 0x5656d2d6, origin: 0x3ecae62dend fun: -> close, transl_length=11
end fun: -> 0x3ecae61f,   next_tu=0x5656d2d6 (len: 18)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d2d6)
end fun: -> 0x00000000
ff = 406
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d2d6)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae638start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d2d6, *transl_address=0x3ecae638)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdEND FLAG ANALYSIS: (orig=0x05656d2d6)0xc3                      ret                             
start fun: action_ret(*addr=0x5656d2d6, *transl_addr=0x3ecae638, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecae638,   next_tu=0x5656d2d7 (len: 14)
ff = 407
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa54)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae64dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aa54, *transl_address=0x3ecae64d)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656aa54)0x8d9424bc000000          lea 0x000000bc(%esp), %edx      
: (orig=0x05656aa5b)0x85c0                    test %eax, %eax                 
: (orig=0x05656aa5d)0x757e                    jnz +0x7e                       
action_jcc
start fun: action_jcc(*addr=0x5656aa5d, *transl_addr=0x3ecae657, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aadd)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ad08, target: 0x5656aadd, origin: 0x3ecae659start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa5f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9acd0, target: 0x5656aa5f, origin: 0x3ecae65eend fun: -> close, transl_length=11
end fun: -> 0x3ecae64d,   next_tu=0x5656aa5f (len: 21)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa5f)
end fun: -> 0x00000000
ff = 408
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa5f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae669start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aa5f, *transl_address=0x3ecae669)
end fun:  
opcode escape found: 0fopcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCAdddaaEND FLAG ANALYSIS: (orig=0x05656aa5f)0x31ed                    xor %ebp, %ebp                  
: (orig=0x05656aa61)0x31c0                    xor %eax, %eax                  
opcode escape found: 0f: (orig=0x05656aa63)0x0fb63a                  movzx (%edx), %edi              
leal-based check (opsize = 4)
: (orig=0x05656aa66)0x8d77d0                  lea 0xd0(%edi), %esi            
: (orig=0x05656aa69)0x89f1                    mov %esi, %ecx                  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656aa6b)0x80f909                  cmp $0x09, %ecx                 
: (orig=0x05656aa6e)0x7759                    ja +0x59                        
action_jcc
start fun: action_jcc(*addr=0x5656aa6e, *transl_addr=0x3ecae689, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aac9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ad40, target: 0x5656aac9, origin: 0x3ecae68bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa70)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ad78, target: 0x5656aa70, origin: 0x3ecae690end fun: -> close, transl_length=11
end fun: -> 0x3ecae669,   next_tu=0x5656aa70 (len: 43)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa70)
end fun: -> 0x00000000
ff = 409
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa70)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae69bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aa70, *transl_address=0x3ecae69b)
end fun:  
opcode escape found: 0fopcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCAdaddddEND FLAG ANALYSIS: (orig=0x05656aa70)0x89f9                    mov %edi, %ecx                  
opcode escape found: 0f: (orig=0x05656aa72)0x0fbef9                  movsx %ecx, %edi                
opcode escape found: 0f: (orig=0x05656aa75)0x0fb64a01                movzx 0x01(%edx), %ecx          
leal-based check (opsize = 4)
: (orig=0x05656aa79)0x8d7201                  lea 0x01(%edx), %esi            
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05656aa7c)0x83ef30                  sub $0x30, %edi                 
: (orig=0x05656aa7f)0x8d51d0                  lea 0xd0(%ecx), %edx            
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656aa82)0x80fa09                  cmp $0x09, %edx                 
: (orig=0x05656aa85)0x7719                    ja +0x19                        
action_jcc
start fun: action_jcc(*addr=0x5656aa85, *transl_addr=0x3ecae6c3, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aaa0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9acd0, target: 0x5656aaa0, origin: 0x3ecae6c5start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa87)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9adb0, target: 0x5656aa87, origin: 0x3ecae6caend fun: -> close, transl_length=11
end fun: -> 0x3ecae69b,   next_tu=0x5656aa87 (len: 51)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aaa0)
end fun: -> 0x00000000
ff = 410
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aaa0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae6d5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aaa0, *transl_address=0x3ecae6d5)
end fun:  
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCDAaaaEND FLAG ANALYSISopcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05656aaa0)0xc1e008                  shl $0x08, %eax                 
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656aaa3)0x83c501                  add $0x01, %ebp                 
: (orig=0x05656aaa6)0x09f8                    or %edi, %eax                   
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656aaa8)0x80f92e                  cmp $0x2e, %ecx                 
: (orig=0x05656aaab)0x8d5601                  lea 0x01(%esi), %edx            
: (orig=0x05656aaae)0x7514                    jnz +0x14                       
action_jcc
start fun: action_jcc(*addr=0x5656aaae, *transl_addr=0x3ecae6e4, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aac4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ad78, target: 0x5656aac4, origin: 0x3ecae6e6start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aab0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ade8, target: 0x5656aab0, origin: 0x3ecae6ebend fun: -> close, transl_length=11
end fun: -> 0x3ecae6d5,   next_tu=0x5656aab0 (len: 26)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aab0)
end fun: -> 0x00000000
ff = 411
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aab0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae6f6start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aab0, *transl_address=0x3ecae6f6)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 03 with reg 5

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05656aab0)0x83fd03                  cmp $0x03, %ebp                 
: (orig=0x05656aab3)0x75ae                    jnz +0xae                       
action_jcc
start fun: action_jcc(*addr=0x5656aab3, *transl_addr=0x3ecae6f9, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa63)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9acd0, target: 0x5656aa63, origin: 0x3ecae6fbstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aab5)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ae20, target: 0x5656aab5, origin: 0x3ecae700end fun: -> close, transl_length=11
end fun: -> 0x3ecae6f6,   next_tu=0x5656aab5 (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa63)
end fun: -> 0x00000000
ff = 412
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa63)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae70bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aa63, *transl_address=0x3ecae70b)
end fun:  
opcode escape found: 0fopcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCAdddEND FLAG ANALYSISopcode escape found: 0f: (orig=0x05656aa63)0x0fb63a                  movzx (%edx), %edi              
leal-based check (opsize = 4)
: (orig=0x05656aa66)0x8d77d0                  lea 0xd0(%edi), %esi            
: (orig=0x05656aa69)0x89f1                    mov %esi, %ecx                  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656aa6b)0x80f909                  cmp $0x09, %ecx                 
: (orig=0x05656aa6e)0x7759                    ja +0x59                        
action_jcc
start fun: action_jcc(*addr=0x5656aa6e, *transl_addr=0x3ecae727, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aac9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ade8, target: 0x5656aac9, origin: 0x3ecae729start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aa70)
end fun: -> 0x3ecae69b
end fun: -> close, transl_length=11
end fun: -> 0x3ecae70b,   next_tu=0x5656aa70 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aac4)
end fun: -> 0x00000000
ff = 413
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aac4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae739start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aac4, *transl_address=0x3ecae739)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 03 with reg 5

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05656aac4)0x83fd03                  cmp $0x03, %ebp                 
: (orig=0x05656aac7)0x74ec                    jz +0xec                        
action_jcc
start fun: action_jcc(*addr=0x5656aac7, *transl_addr=0x3ecae73c, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aab5)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9acd0, target: 0x5656aab5, origin: 0x3ecae73estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aac9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ae58, target: 0x5656aac9, origin: 0x3ecae743end fun: -> close, transl_length=11
end fun: -> 0x3ecae739,   next_tu=0x5656aac9 (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aab5)
end fun: -> 0x00000000
ff = 414
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aab5)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae74estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aab5, *transl_address=0x3ecae74e)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 

BEGIN FLAG ANALYSISddddddadEND FLAG ANALYSIS: (orig=0x05656aab5)0x89c6                    mov %eax, %esi                  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656aab7)0x81c40c020000            add $0x0000020c, %esp           
: (orig=0x05656aabd)0x89f0                    mov %esi, %eax                  
: (orig=0x05656aabf)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656aac0)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656aac1)0x5f                      pop %edi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656aac2)0x5d                      pop %ebp                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656aac3)0xc3                      ret                             
start fun: action_ret(*addr=0x5656aac3, *transl_addr=0x3ecae7a4, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecae74e,   next_tu=0x5656aac4 (len: 100)
ff = 415
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557b9f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae7b9start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557b9f, *transl_address=0x3ecae7b9)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x056557b9f)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056557ba1)0x0f882d060000            js +0x0000062d                  
action_jcc
start fun: action_jcc(*addr=0x56557ba1, *transl_addr=0x3ecae7bb, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565581d4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9acd0, target: 0x565581d4, origin: 0x3ecae7bdstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557ba7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ad78, target: 0x56557ba7, origin: 0x3ecae7c2end fun: -> close, transl_length=11
end fun: -> 0x3ecae7b9,   next_tu=0x56557ba7 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557ba7)
end fun: -> 0x00000000
ff = 416
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557ba7)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae7cdstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557ba7, *transl_address=0x3ecae7cd)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 2 with reg 2

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056557ba7)0x8b93b0fcffff            mov 0xfffffcb0(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x056557bad)0x85d2                    test %edx, %edx                 
opcode escape found: 0f: (orig=0x056557baf)0x0f8506190000            jnz +0x00001906                 
action_jcc
start fun: action_jcc(*addr=0x56557baf, *transl_addr=0x3ecae7e9, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565594bb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ae90, target: 0x565594bb, origin: 0x3ecae7ebstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557bb5)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9aec8, target: 0x56557bb5, origin: 0x3ecae7f0end fun: -> close, transl_length=11
end fun: -> 0x3ecae7cd,   next_tu=0x56557bb5 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557bb5)
end fun: -> 0x00000000
ff = 417
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557bb5)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae7fbstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557bb5, *transl_address=0x3ecae7fb)
end fun:  
opcode escape found: 0f

 opt flags pass 
... cmp imm 020617 with eax

BEGIN FLAG ANALYSISAdaEND FLAG ANALYSIS: (orig=0x056557bb5)0x3d17060200              cmp $0x00020617, %eax           
PATCHING CMP IMM REG
: (orig=0x056557bba)0x8983b0fcffff            mov %eax, 0xfffffcb0(%ebx)      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x056557bc0)0x0f8e08190000            jle +0x00001908                 
RESTORING VIA CMP
action_jcc
start fun: action_jcc(*addr=0x56557bc0, *transl_addr=0x3ecae826, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565594ce)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9ad78, target: 0x565594ce, origin: 0x3ecae828start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557bc6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9af00, target: 0x56557bc6, origin: 0x3ecae82dend fun: -> close, transl_length=11
end fun: -> 0x3ecae7fb,   next_tu=0x56557bc6 (len: 54)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557bc6)
end fun: -> 0x00000000
ff = 418
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557bc6)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae838start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557bc6, *transl_address=0x3ecae838)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISddddddddddEND FLAG ANALYSIS: (orig=0x056557bc6)0x8b838cfeffff            mov 0xfffffe8c(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056557bcc)0xe83f520000              call +0x0000523f                
action_call
start fun: action_call(*addr=0x56557bcc, *transl_addr=0x3ecae852, length=5)
original call_target: 0x5655ce10return_address = 056557bd1
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ce10)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05655ce10)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05655ce11)0x89e5                    mov %esp, %ebp                  
: (orig=0x05655ce13)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05655ce14)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05655ce15)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05655ce16)0xe830120100              call +0x00011230                
action_call
start fun: action_call(*addr=0x5655ce16, *transl_addr=0x3ecae8ad, length=5)
original call_target: 0x5656e04breturn_address = 05655ce1b
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecae8ce, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecae838,   next_tu=0x5656e04f (len: 164)
ff = 419
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ce1b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae8e3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ce1b, *transl_address=0x3ecae8e3)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISdddddddddddddddaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05655ce1b)0x81c3d9910100            add $0x000191d9, %ebx           
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655ce21)0x83ec3c                  sub $0x3c, %esp                 
: (orig=0x05655ce24)0x8945d0                  mov %eax, 0xd0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655ce27)0x8d8300ffffff            lea 0xffffff00(%ebx), %eax      
: (orig=0x05655ce2d)0x8b93b8fcffff            mov 0xfffffcb8(%ebx), %edx      
leal-based check (opsize = 4)
: (orig=0x05655ce33)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05655ce36)0x8b83b4fcffff            mov 0xfffffcb4(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05655ce3c)0x8d8bfcfeffff            lea 0xfffffefc(%ebx), %ecx      
: (orig=0x05655ce42)0xe8c9d30000              call +0x0000d3c9                
action_call
start fun: action_call(*addr=0x5655ce42, *transl_addr=0x3ecae956, length=5)
original call_target: 0x5656a210return_address = 05655ce47
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a210)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656a210)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05656a211)0x89e5                    mov %esp, %ebp                  
: (orig=0x05656a213)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05656a214)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05656a215)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656a216)0xe8303e0000              call +0x00003e30                
action_call
start fun: action_call(*addr=0x5656a216, *transl_addr=0x3ecae9b1, length=5)
original call_target: 0x5656e04breturn_address = 05656a21b
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecae9d2, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecae8e3,   next_tu=0x5656e04f (len: 253)
ff = 420
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a21b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecae9e7start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a21b, *transl_address=0x3ecae9e7)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCD1.ddcAaddadaddddaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656a21b)0x81c3d9bd0000            add $0x0000bdd9, %ebx           
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05656a221)0x83ec5c                  sub $0x5c, %esp                 
: (orig=0x05656a224)0x8945c0                  mov %eax, 0xc0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656a227)0x894dbc                  mov %ecx, 0xbc(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656a22a)0x8b4dc0                  mov 0xc0(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656a22d)0x8955b8                  mov %edx, 0xb8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656a230)0x31d2                    xor %edx, %edx                  
: (orig=0x05656a232)0x8b83f0fcffff            mov 0xfffffcf0(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05656a238)0x2383e8fcffff            and 0xfffffce8(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05656a23e)0x8945d8                  mov %eax, 0xd8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656a241)0x8b83f4fcffff            mov 0xfffffcf4(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05656a247)0x2383ecfcffff            and 0xfffffcec(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05656a24d)0x85c9                    test %ecx, %ecx                 
opcode escape found: 0f: (orig=0x05656a24f)0x0f95c2                  setnz %edx                      
: (orig=0x05656a252)0x8955d0                  mov %edx, 0xd0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656a255)0x89c1                    mov %eax, %ecx                  
: (orig=0x05656a257)0x0b4dd8                  or 0xd8(%ebp), %ecx             
leal-based check (opsize = 4)
: (orig=0x05656a25a)0x8945dc                  mov %eax, 0xdc(%ebp)            
SAV
leal-based check (opsize = 4)
RST
: (orig=0x05656a25d)0x7450                    jz +0x50                        
action_jcc
start fun: action_jcc(*addr=0x5656a25d, *transl_addr=0x3ecaeb2e, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a2af)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9af00, target: 0x5656a2af, origin: 0x3ecaeb30start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a25f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9aec8, target: 0x5656a25f, origin: 0x3ecaeb35end fun: -> close, transl_length=11
end fun: -> 0x3ecae9e7,   next_tu=0x5656a25f (len: 338)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a2af)
end fun: -> 0x00000000
ff = 421
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a2af)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaeb40start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a2af, *transl_address=0x3ecaeb40)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAaddadEND FLAG ANALYSIS: (orig=0x05656a2af)0x8bb33cfeffff            mov 0xfffffe3c(%ebx), %esi      
leal-based check (opsize = 4)
: (orig=0x05656a2b5)0x31c9                    xor %ecx, %ecx                  
: (orig=0x05656a2b7)0x8975c8                  mov %esi, 0xc8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656a2ba)0x8b45c8                  mov 0xc8(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656a2bd)0x31f6                    xor %esi, %esi                  
: (orig=0x05656a2bf)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05656a2c1)0x0f84e1000000            jz +0x000000e1                  
action_jcc
start fun: action_jcc(*addr=0x5656a2c1, *transl_addr=0x3ecaeb88, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a3a8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9af38, target: 0x5656a3a8, origin: 0x3ecaeb8astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a2c7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9af70, target: 0x5656a2c7, origin: 0x3ecaeb8fend fun: -> close, transl_length=11
end fun: -> 0x3ecaeb40,   next_tu=0x5656a2c7 (len: 83)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a3a8)
end fun: -> 0x00000000
ff = 422
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a3a8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaeb9astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a3a8, *transl_address=0x3ecaeb9a)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISBDD4.4.4.4.4.4.4.END FLAG ANALYSIS: (orig=0x05656a3a8)0x8d830c91ffff            lea 0xffff910c(%ebx), %eax      
SAV
: (orig=0x05656a3ae)0x894db4                  mov %ecx, 0xb4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656a3b1)0xc744240400000000        mov $0x00000000, 0x04(%esp)     
leal-based check (opsize = 4)
: (orig=0x05656a3b9)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05656a3bc)0xe88f2d0000              call +0x00002d8f                
action_call
start fun: action_call(*addr=0x5656a3bc, *transl_addr=0x3ecaebfa, length=5)
original call_target: 0x5656d150return_address = 05656a3c1
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d150)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d150)0x89da                    mov %ebx, %edx                  
: (orig=0x05656d152)0x8b4c2408                mov 0x08(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656d156)0x8b5c2404                mov 0x04(%esp), %ebx            
leal-based check (opsize = 4)
RST
: (orig=0x05656d15a)0xb821000000              mov $0x00000021, %eax           
: (orig=0x05656d15f)0xcd80                    int $0x80                       
closing TU upon request, invoking translation function on 0x5656d161allocated trampoline: 0x3ec9af00, target: 0x5656d161, origin: 0x3ecaec81end fun: -> 0x3ecaeb9a,   next_tu=0x5656d161 (len: 223)
SYSCALL 33
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d161)
end fun: -> 0x00000000
ff = 423
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d161)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaec85start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d161, *transl_address=0x3ecaec85)
end fun:  


 opt flags pass 
... cmp imm 0fffff001 with eax

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656d161)0x89d3                    mov %edx, %ebx                  
: (orig=0x05656d163)0x3d01f0ffff              cmp $0xfffff001, %eax           
: (orig=0x05656d168)0x7301                    jnc +0x01                       
action_jcc
start fun: action_jcc(*addr=0x5656d168, *transl_addr=0x3ecaec8c, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d16b)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9af38, target: 0x5656d16b, origin: 0x3ecaec8estart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d16a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9afa8, target: 0x5656d16a, origin: 0x3ecaec93end fun: -> close, transl_length=11
end fun: -> 0x3ecaec85,   next_tu=0x5656d16a (len: 18)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d16b)
end fun: -> 0x00000000
ff = 424
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d16b)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaec9estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d16b, *transl_address=0x3ecaec9e)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddEND FLAG ANALYSIS: (orig=0x05656d16b)0xe8d70e0000              call +0x00000ed7                
action_call
start fun: action_call(*addr=0x5656d16b, *transl_addr=0x3ecaec9e, length=5)
original call_target: 0x5656e047return_address = 05656d170
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e047)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e047)0x8b0c24                  mov (%esp), %ecx                
leal-based check (opsize = 4)
: (orig=0x05656e04a)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04a, *transl_addr=0x3ecaecbf, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecaec9e,   next_tu=0x5656e04b (len: 47)
ff = 425
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d170)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaecd4start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d170, *transl_address=0x3ecaecd4)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216668)


 opt flags pass 

BEGIN FLAG ANALYSISddadaaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656d170)0x81c1848e0000            add $0x00008e84, %ecx           
: (orig=0x05656d176)0x31d2                    xor %edx, %edx                  
: (orig=0x05656d178)0x29c2                    sub %eax, %edx                  
: (orig=0x05656d17a)0x89910c090000            mov %edx, 0x0000090c(%ecx)      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216668)
: (orig=0x05656d180)0x83c8ff                  or $0xff, %eax                  
: (orig=0x05656d183)0xebe5                    jmp +0xe5                       
original_addr=05656d183 / addr=05656d183
start fun: action_jmp(*addr=0x5656d183, *transl_addr=0x3ecaecfb, length=2)
action_jmp
original jmp_target: 0x5656d16astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d16a)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05656d16a)0xc3                      ret                             
start fun: action_ret(*addr=0x5656d16a, *transl_addr=0x3ecaecfb, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecaecd4,   next_tu=0x5656d16b (len: 53)
ff = 426
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a3c1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaed10start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a3c1, *transl_address=0x3ecaed10)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656a3c1)0x8b4db4                  mov 0xb4(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656a3c4)0x85c0                    test %eax, %eax                 
: (orig=0x05656a3c6)0x753c                    jnz +0x3c                       
action_jcc
start fun: action_jcc(*addr=0x5656a3c6, *transl_addr=0x3ecaed26, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a404)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9af38, target: 0x5656a404, origin: 0x3ecaed28start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a3c8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9af00, target: 0x5656a3c8, origin: 0x3ecaed2dend fun: -> close, transl_length=11
end fun: -> 0x3ecaed10,   next_tu=0x5656a3c8 (len: 33)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a404)
end fun: -> 0x00000000
ff = 427
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a404)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaed38start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a404, *transl_address=0x3ecaed38)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode escape found: 0f

 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAaddaadadEND FLAG ANALYSIS: (orig=0x05656a404)0x8b7dd0                  mov 0xd0(%ebp), %edi            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656a407)0x83c701                  add $0x01, %edi                 
: (orig=0x05656a40a)0x8d04fd1e000000          lea 0x0000001e(, %edi*8), %eax  
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656a411)0x83e0f0                  and $0xf0, %eax                 
: (orig=0x05656a414)0x29c4                    sub %eax, %esp                  
: (orig=0x05656a416)0x897dd4                  mov %edi, 0xd4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656a419)0x8d7c241f                lea 0x1f(%esp), %edi            
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656a41d)0x83e7f0                  and $0xf0, %edi                 
: (orig=0x05656a420)0x85f6                    test %esi, %esi                 
opcode escape found: 0f: (orig=0x05656a422)0x0f8416040000            jz +0x00000416                  
action_jcc
start fun: action_jcc(*addr=0x5656a422, *transl_addr=0x3ecaed7a, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a83e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9afe0, target: 0x5656a83e, origin: 0x3ecaed7cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a428)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b018, target: 0x5656a428, origin: 0x3ecaed81end fun: -> close, transl_length=11
end fun: -> 0x3ecaed38,   next_tu=0x5656a428 (len: 77)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a83e)
end fun: -> 0x00000000
ff = 428
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a83e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaed8cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a83e, *transl_address=0x3ecaed8c)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdddadEND FLAG ANALYSIS: (orig=0x05656a83e)0xb801000000              mov $0x00000001, %eax           
: (orig=0x05656a843)0x31d2                    xor %edx, %edx                  
: (orig=0x05656a845)0xc745e400000000          mov $0x00000000, 0xe4(%ebp)     
leal-based check (opsize = 4)
: (orig=0x05656a84c)0xe951fcffff              jmp +0xfffffc51                 
original_addr=05656a84c / addr=05656a84c
start fun: action_jmp(*addr=0x5656a84c, *transl_addr=0x3ecaedab, length=5)
action_jmp
jump_target = 0fffffc51 + 05656a84c + 05original jmp_target: 0x5656a4a2start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a4a2)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05656a4a2)0x8b75dc                  mov 0xdc(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656a4a5)0x0b75d8                  or 0xd8(%ebp), %esi             
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05656a4a8)0x0f84bb000000            jz +0x000000bb                  
action_jcc
start fun: action_jcc(*addr=0x5656a4a8, *transl_addr=0x3ecaedd3, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a569)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9af38, target: 0x5656a569, origin: 0x3ecaedd5start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a4ae)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b050, target: 0x5656a4ae, origin: 0x3ecaeddaend fun: -> close, transl_length=11
end fun: -> 0x3ecaed8c,   next_tu=0x5656a4ae (len: 82)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a569)
end fun: -> 0x00000000
ff = 429
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a569)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaede5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a569, *transl_address=0x3ecaede5)
end fun:  


 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656a569)0x8b4dc0                  mov 0xc0(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656a56c)0x85c9                    test %ecx, %ecx                 
: (orig=0x05656a56e)0x7417                    jz +0x17                        
action_jcc
start fun: action_jcc(*addr=0x5656a56e, *transl_addr=0x3ecaedfb, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a587)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9afe0, target: 0x5656a587, origin: 0x3ecaedfdstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a570)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b088, target: 0x5656a570, origin: 0x3ecaee02end fun: -> close, transl_length=11
end fun: -> 0x3ecaede5,   next_tu=0x5656a570 (len: 33)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a587)
end fun: -> 0x00000000
ff = 430
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a587)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaee0dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a587, *transl_address=0x3ecaee0d)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCD4.4.1.aEND FLAG ANALYSIS: (orig=0x05656a587)0x01fa                    add %edi, %edx                  
: (orig=0x05656a589)0x3945d4                  cmp %eax, 0xd4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656a58c)0x8d8baa92ffff            lea 0xffff92aa(%ebx), %ecx      
SAV
: (orig=0x05656a592)0x890a                    mov %ecx, (%edx)                
leal-based check (opsize = 4)
: (orig=0x05656a594)0xc7420403000000          mov $0x00000003, 0x04(%edx)     
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x05656a59b)0x0f8557030000            jnz +0x00000357                 
action_jcc
start fun: action_jcc(*addr=0x5656a59b, *transl_addr=0x3ecaee81, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a8f8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9af38, target: 0x5656a8f8, origin: 0x3ecaee83start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a5a1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b0c0, target: 0x5656a5a1, origin: 0x3ecaee88end fun: -> close, transl_length=11
end fun: -> 0x3ecaee0d,   next_tu=0x5656a5a1 (len: 127)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a5a1)
end fun: -> 0x00000000
ff = 431
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a5a1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaee93start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a5a1, *transl_address=0x3ecaee93)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCD1.END FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05656a5a1)0x837dd401                cmp $0x01, 0xd4(%ebp)           
leal-based check (opsize = 4)
: (orig=0x05656a5a5)0x8b4704                  mov 0x04(%edi), %eax            
SAV
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x05656a5a8)0x0f84a3020000            jz +0x000002a3                  
action_jcc
start fun: action_jcc(*addr=0x5656a5a8, *transl_addr=0x3ecaeee9, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a851)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9afe0, target: 0x5656a851, origin: 0x3ecaeeebstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a5ae)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b0f8, target: 0x5656a5ae, origin: 0x3ecaeef0end fun: -> close, transl_length=11
end fun: -> 0x3ecaee93,   next_tu=0x5656a5ae (len: 97)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a851)
end fun: -> 0x00000000
ff = 432
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a851)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaeefbstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a851, *transl_address=0x3ecaeefb)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode escape found: 0fopcode table: 0x00244bf8 -> 0x00216dc0 (0x00216e60)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 

BEGIN FLAG ANALYSIS4.4.4.4.1.adddaddddaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656a851)0x83c001                  add $0x01, %eax                 
: (orig=0x05656a854)0xe968fdffff              jmp +0xfffffd68                 
original_addr=05656a854 / addr=05656a854
start fun: action_jmp(*addr=0x5656a854, *transl_addr=0x3ecaeefe, length=5)
action_jmp
jump_target = 0fffffd68 + 05656a854 + 05original jmp_target: 0x5656a5c1start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a5c1)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode escape found: 0f: (orig=0x05656a5c1)0x0fb64dd4                movzx 0xd4(%ebp), %ecx          
leal-based check (opsize = 4)
: (orig=0x05656a5c5)0xba01000000              mov $0x00000001, %edx           
: (orig=0x05656a5ca)0x89d6                    mov %edx, %esi                  
opcode table: 0x00244bf8 -> 0x00216dc0 (0x00216e60)
: (orig=0x05656a5cc)0xd3e6                    shl %cl, %esi                   
: (orig=0x05656a5ce)0x8b4dbc                  mov 0xbc(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656a5d1)0x8975e0                  mov %esi, 0xe0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656a5d4)0x8931                    mov %esi, (%ecx)                
leal-based check (opsize = 4)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05656a5d6)0xc1e603                  shl $0x03, %esi                 
: (orig=0x05656a5d9)0x01f0                    add %esi, %eax                  
: (orig=0x05656a5db)0x8955b4                  mov %edx, 0xb4(%ebp)            
SAV
leal-based check (opsize = 4)
: (orig=0x05656a5de)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05656a5e1)0xe8eab1feff              call +0xfffeb1ea                
action_call
start fun: action_call(*addr=0x5656a5e1, *transl_addr=0x3ecaef9a, length=5)
original call_target: 0x565557d0return_address = 05656a5e6
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565557d0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x0565557d0)0xffa310000000            jmp 0x00000010(%ebx)            
start fun: action_jmp_indirect(*addr=0x565557d0, *transl_addr=0x3ecaefa7, length=6)
action jmp ind
end fun: -> close, transl_length=13
end fun: -> 0x3ecaeefb,   next_tu=0x565557d6 (len: 185)
ff = 433
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a5e6)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaefbbstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a5e6, *transl_address=0x3ecaefbb)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISAdadEND FLAG ANALYSIS: (orig=0x05656a5e6)0x8b55b4                  mov 0xb4(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656a5e9)0x85c0                    test %eax, %eax                 
PATCHING TST REG REG
: (orig=0x05656a5eb)0x8945d8                  mov %eax, 0xd8(%ebp)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05656a5ee)0x0f842e030000            jz +0x0000032e                  
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5656a5ee, *transl_addr=0x3ecaefee, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a922)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9afe0, target: 0x5656a922, origin: 0x3ecaeff0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a5f4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b0c0, target: 0x5656a5f4, origin: 0x3ecaeff5end fun: -> close, transl_length=11
end fun: -> 0x3ecaefbb,   next_tu=0x5656a5f4 (len: 62)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a5f4)
end fun: -> 0x00000000
ff = 434
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a5f4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf000start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a5f4, *transl_address=0x3ecaf000)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05656a5f4)0x837dd401                cmp $0x01, 0xd4(%ebp)           
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05656a5f8)0x0f84a1020000            jz +0x000002a1                  
action_jcc
start fun: action_jcc(*addr=0x5656a5f8, *transl_addr=0x3ecaf015, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a89f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b130, target: 0x5656a89f, origin: 0x3ecaf017start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a5fe)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b168, target: 0x5656a5fe, origin: 0x3ecaf01cend fun: -> close, transl_length=11
end fun: -> 0x3ecaf000,   next_tu=0x5656a5fe (len: 32)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a89f)
end fun: -> 0x00000000
ff = 435
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a89f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf027start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a89f, *transl_address=0x3ecaf027)
end fun:  
opcode table: 0x00244ba8 -> 0x00216b40 (0x00216c08)


 opt flags pass 

BEGIN FLAG ANALYSISCAddddddddddddddddddddddddadEND FLAG ANALYSIS: (orig=0x05656a89f)0x8b45d8                  mov 0xd8(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656a8a2)0x0375d8                  add 0xd8(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656a8a5)0x8b4dd8                  mov 0xd8(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656a8a8)0x8930                    mov %esi, (%eax)                
leal-based check (opsize = 4)
: (orig=0x05656a8aa)0x8b4704                  mov 0x04(%edi), %eax            
leal-based check (opsize = 4)
: (orig=0x05656a8ad)0x8b75d8                  mov 0xd8(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656a8b0)0x8d5001                  lea 0x01(%eax), %edx            
: (orig=0x05656a8b3)0x895104                  mov %edx, 0x04(%ecx)            
leal-based check (opsize = 4)
: (orig=0x05656a8b6)0x8b4dbc                  mov 0xbc(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656a8b9)0x8b11                    mov (%ecx), %edx                
leal-based check (opsize = 4)
: (orig=0x05656a8bb)0xc7460c00000000          mov $0x00000000, 0x0c(%esi)     
leal-based check (opsize = 4)
: (orig=0x05656a8c2)0x8d14d6                  lea (%esi, %edx*8), %edx        
: (orig=0x05656a8c5)0x895608                  mov %edx, 0x08(%esi)            
leal-based check (opsize = 4)
: (orig=0x05656a8c8)0x89442408                mov %eax, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656a8cc)0x8b07                    mov (%edi), %eax                
leal-based check (opsize = 4)
: (orig=0x05656a8ce)0x89442404                mov %eax, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656a8d2)0x8b01                    mov (%ecx), %eax                
leal-based check (opsize = 4)
: (orig=0x05656a8d4)0x8d04c6                  lea (%esi, %eax*8), %eax        
: (orig=0x05656a8d7)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05656a8da)0xe831350000              call +0x00003531                
action_call
start fun: action_call(*addr=0x5656a8da, *transl_addr=0x3ecaf173, length=5)
original call_target: 0x5656de10return_address = 05656a8df
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de10)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656de10)0x8b4c240c                mov 0x0c(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656de14)0x89f8                    mov %edi, %eax                  
: (orig=0x05656de16)0x8b7c2404                mov 0x04(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x05656de1a)0x89f2                    mov %esi, %edx                  
: (orig=0x05656de1c)0x8b742408                mov 0x08(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656de20)0xfc                      cld                             
opcode table: 0x00244ba8 -> 0x00216b40 (0x00216c08)
: (orig=0x05656de21)0xd1e9                    shr $1, %ecx                    
: (orig=0x05656de23)0x7301                    jnc +0x01                       
action_jcc
start fun: action_jcc(*addr=0x5656de23, *transl_addr=0x3ecaf1c9, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de26)
end fun: -> 0x3ecab3d7
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de25)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b0c0, target: 0x5656de25, origin: 0x3ecaf1d0end fun: -> close, transl_length=11
end fun: -> 0x3ecaf027,   next_tu=0x5656de25 (len: 429)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de25)
end fun: -> 0x00000000
ff = 436
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de25)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf1dbstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656de25, *transl_address=0x3ecaf1db)
end fun:  
opcode table: 0x00244ba8 -> 0x00216b40 (0x00216c08)


 opt flags pass 

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05656de25)0xa4                      movsb %es:(%edi), 0s:(%esi)     
opcode table: 0x00244ba8 -> 0x00216b40 (0x00216c08)
: (orig=0x05656de26)0xd1e9                    shr $1, %ecx                    
: (orig=0x05656de28)0x7302                    jnc +0x02                       
action_jcc
start fun: action_jcc(*addr=0x5656de28, *transl_addr=0x3ecaf1e2, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de2c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b130, target: 0x5656de2c, origin: 0x3ecaf1e4start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656de2a)
end fun: -> 0x3ecab3eb
end fun: -> close, transl_length=11
end fun: -> 0x3ecaf1db,   next_tu=0x5656de2a (len: 18)
ff = 437
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a8df)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf1f4start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656a8df, *transl_address=0x3ecaf1f4)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISddddddddddddddEND FLAG ANALYSIS: (orig=0x05656a8df)0x8b4dbc                  mov 0xbc(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656a8e2)0xc6002f                  mov $0x2f, (%eax)               
leal-based check (opsize = 1)
: (orig=0x05656a8e5)0xc70102000000            mov $0x00000002, (%ecx)         
leal-based check (opsize = 4)
: (orig=0x05656a8eb)0x8b4604                  mov 0x04(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05656a8ee)0x8b7508                  mov 0x08(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656a8f1)0x8906                    mov %eax, (%esi)                
leal-based check (opsize = 4)
: (orig=0x05656a8f3)0xe9f9faffff              jmp +0xfffffaf9                 
original_addr=05656a8f3 / addr=05656a8f3
start fun: action_jmp(*addr=0x5656a8f3, *transl_addr=0x3ecaf26a, length=5)
action_jmp
jump_target = 0fffffaf9 + 05656a8f3 + 05original jmp_target: 0x5656a3f1start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656a3f1)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05656a3f1)0x8b45d8                  mov 0xd8(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656a3f4)0x8d65f4                  lea 0xf4(%ebp), %esp            
: (orig=0x05656a3f7)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656a3f8)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656a3f9)0x5f                      pop %edi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656a3fa)0x5d                      pop %ebp                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05656a3fb)0xc20400                  ret $0x0004                     
start fun: action_ret(*addr=0x5656a3fb, *transl_addr=0x3ecaf2ce, length=3)
we must remove additional bytes: 4
end fun: -> close, transl_length=22
end fun: -> 0x3ecaf1f4,   next_tu=0x5656a3fe (len: 240)
ff = 438
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ce47)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf2ebstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ce47, *transl_address=0x3ecaf2eb)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 

BEGIN FLAG ANALYSIS4.4.4.4.1.END FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x05655ce47)0x83ec04                  sub $0x04, %esp                 
: (orig=0x05655ce4a)0x898304ffffff            mov %eax, 0xffffff04(%ebx)      
SAV
leal-based check (opsize = 4)
: (orig=0x05655ce50)0xc7042414000000          mov $0x00000014, (%esp)         
leal-based check (opsize = 4)
: (orig=0x05655ce57)0xe87489ffff              call +0xffff8974                
action_call
start fun: action_call(*addr=0x5655ce57, *transl_addr=0x3ecaf337, length=5)
original call_target: 0x565557d0return_address = 05655ce5c
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565557d0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x0565557d0)0xffa310000000            jmp 0x00000010(%ebx)            
start fun: action_jmp_indirect(*addr=0x565557d0, *transl_addr=0x3ecaf344, length=6)
action jmp ind
end fun: -> close, transl_length=13
end fun: -> 0x3ecaf2eb,   next_tu=0x565557d6 (len: 102)
ff = 439
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ce5c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf358start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ce5c, *transl_address=0x3ecaf358)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISAddaEND FLAG ANALYSIS: (orig=0x05655ce5c)0x85c0                    test %eax, %eax                 
PATCHING TST REG REG
: (orig=0x05655ce5e)0x8945dc                  mov %eax, 0xdc(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655ce61)0x898308ffffff            mov %eax, 0xffffff08(%ebx)      
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655ce67)0x0f8426030000            jz +0x00000326                  
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655ce67, *transl_addr=0x3ecaf391, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d193)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b0c0, target: 0x5655d193, origin: 0x3ecaf393start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ce6d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b1a0, target: 0x5655ce6d, origin: 0x3ecaf398end fun: -> close, transl_length=11
end fun: -> 0x3ecaf358,   next_tu=0x5655ce6d (len: 68)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ce6d)
end fun: -> 0x00000000
ff = 440
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ce6d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf3a3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ce6d, *transl_address=0x3ecaf3a3)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x002170e0)
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)


 opt flags pass 

BEGIN FLAG ANALYSIS4.4.4.1.adaddddEND FLAG ANALYSIS: (orig=0x05655ce6d)0x8bb3fcfeffff            mov 0xfffffefc(%ebx), %esi      
leal-based check (opsize = 4)
: (orig=0x05655ce73)0xb9cdcccccc              mov $0xcccccccd, %ecx           
: (orig=0x05655ce78)0x8d3cb527000000          lea 0x00000027(, %esi*4), %edi  
: (orig=0x05655ce7f)0x89f8                    mov %edi, %eax                  
opcode table: 0x00245198 -> 0x00217040 (0x002170e0)
: (orig=0x05655ce81)0xf7e1                    mul %ecx, %eax                  
: (orig=0x05655ce83)0x89d7                    mov %edx, %edi                  
opcode table: 0x00244928 -> 0x002168c0 (0x00216988)
: (orig=0x05655ce85)0xc1ef04                  shr $0x04, %edi                 
: (orig=0x05655ce88)0x69c7d0020000            imul %edi, $0x000002d0, %eax    
: (orig=0x05655ce8e)0x890424                  mov %eax, (%esp)                
SAV
leal-based check (opsize = 4)
: (orig=0x05655ce91)0xe83a89ffff              call +0xffff893a                
action_call
start fun: action_call(*addr=0x5655ce91, *transl_addr=0x3ecaf404, length=5)
original call_target: 0x565557d0return_address = 05655ce96
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565557d0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x002452d8 -> 0x002172c0 (0x00217360)
: (orig=0x0565557d0)0xffa310000000            jmp 0x00000010(%ebx)            
start fun: action_jmp_indirect(*addr=0x565557d0, *transl_addr=0x3ecaf411, length=6)
action jmp ind
end fun: -> close, transl_length=13
end fun: -> 0x3ecaf3a3,   next_tu=0x565557d6 (len: 123)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac63)
end fun: -> 0x00000000
ff = 441
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac63)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf425start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ac63, *transl_address=0x3ecaf425)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAadddEND FLAG ANALYSIS: (orig=0x05656ac63)0x8b83bcfcffff            mov 0xfffffcbc(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x05656ac69)0x89c2                    mov %eax, %edx                  
: (orig=0x05656ac6b)0x8d7c30ff                lea 0xff(%eax, %esi), %edi      
opcode table: 0x00245198 -> 0x00217040 (0x002170b8)
: (orig=0x05656ac6f)0xf7da                    neg %edx                        
: (orig=0x05656ac71)0x21d7                    and %edx, %edi                  
opcode escape found: 0f: (orig=0x05656ac73)0x0f8493000000            jz +0x00000093                  
action_jcc
start fun: action_jcc(*addr=0x5656ac73, *transl_addr=0x3ecaf44a, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad0c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b1a0, target: 0x5656ad0c, origin: 0x3ecaf44cstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac79)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b1d8, target: 0x5656ac79, origin: 0x3ecaf451end fun: -> close, transl_length=11
end fun: -> 0x3ecaf425,   next_tu=0x5656ac79 (len: 48)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac79)
end fun: -> 0x00000000
ff = 442
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ac79)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf45cstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656ac79, *transl_address=0x3ecaf45c)
end fun:  
opcode table: 0x00245198 -> 0x00217040 (0x00217040)


 opt flags pass 
... test imm 0fff with reg!=eax 5

BEGIN FLAG ANALYSISCDAdddddddddddddddddEND FLAG ANALYSIS: (orig=0x05656ac79)0xc744241400000000        mov $0x00000000, 0x14(%esp)     
leal-based check (opsize = 4)
: (orig=0x05656ac81)0xc7442410ffffffff        mov $0xffffffff, 0x10(%esp)     
leal-based check (opsize = 4)
: (orig=0x05656ac89)0xc744240c22000000        mov $0x00000022, 0x0c(%esp)     
leal-based check (opsize = 4)
: (orig=0x05656ac91)0xc744240803000000        mov $0x00000003, 0x08(%esp)     
leal-based check (opsize = 4)
: (orig=0x05656ac99)0x897c2404                mov %edi, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656ac9d)0xc7042400000000          mov $0x00000000, (%esp)         
leal-based check (opsize = 4)
: (orig=0x05656aca4)0xe837250000              call +0x00002537                
action_call
start fun: action_call(*addr=0x5656aca4, *transl_addr=0x3ecaf4f2, length=5)
original call_target: 0x5656d1e0return_address = 05656aca9
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d1e0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d1e0)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05656d1e1)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656d1e2)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05656d1e3)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05656d1e4)0x8b5c2414                mov 0x14(%esp), %ebx            
leal-based check (opsize = 4)
: (orig=0x05656d1e8)0x8b4c2418                mov 0x18(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656d1ec)0x8b54241c                mov 0x1c(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656d1f0)0x8b742420                mov 0x20(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656d1f4)0x8b7c2424                mov 0x24(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x05656d1f8)0x8b6c2428                mov 0x28(%esp), %ebp            
leal-based check (opsize = 4)
opcode table: 0x00245198 -> 0x00217040 (0x00217040)
: (orig=0x05656d1fc)0xf7c5ff0f0000            test $0x00000fff, %ebp          
: (orig=0x05656d202)0xb8eaffffff              mov $0xffffffea, %eax           
: (orig=0x05656d207)0x750a                    jnz +0x0a                       
action_jcc
start fun: action_jcc(*addr=0x5656d207, *transl_addr=0x3ecaf5da, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d213)
end fun: -> 0x3ecac3b9
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d209)
end fun: -> 0x3ecac37c
end fun: -> close, transl_length=11
end fun: -> 0x3ecaf45c,   next_tu=0x5656d209 (len: 393)
guest mmap
Searching for 01000 free bytes
do_guest_mmap(0x0, 4096, 3, 0x032, -1, 0)
Marking 064000 as allocated
THE 10 ENTRIES:
 (064000,065000) (08048000,08049000) (08049000,0804b000) (0a000000,0a020cc8) (040000000,070000000) (056555000,056574628) (056575000,056576918) (078000000,078010000)
 (080000000,081000000) (090000000,0b0000000)address space overlaps at 5
TOTAL USED 1359 MB

ff = 443
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656aca9)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf5ecstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656aca9, *transl_address=0x3ecaf5ec)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 0ffffffff with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05656aca9)0x83f8ff                  cmp $0xff, %eax                 
: (orig=0x05656acac)0x745a                    jz +0x5a                        
action_jcc
start fun: action_jcc(*addr=0x5656acac, *transl_addr=0x3ecaf5ef, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656ad08)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b1d8, target: 0x5656ad08, origin: 0x3ecaf5f1start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656acae)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99178, target: 0x5656acae, origin: 0x3ecaf5f6end fun: -> close, transl_length=11
end fun: -> 0x3ecaf5ec,   next_tu=0x5656acae (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656acae)
end fun: -> 0x00000000
ff = 444
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656acae)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf601start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656acae, *transl_address=0x3ecaf601)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
cmp reg mem

BEGIN FLAG ANALYSISdaddddddddaadaEND FLAG ANALYSIS: (orig=0x05656acae)0x3b83e8080000            cmp 0x000008e8(%ebx), %eax      
leal-based check (opsize = 4)
PATCHING CMP MEM REG
: (orig=0x05656acb4)0x89c2                    mov %eax, %edx                  
opcode escape found: 0f: (orig=0x05656acb6)0x0f4493ec080000          cmovz 0x000008ec(%ebx), %edx    
leal-based check (opsize = 4)
RESTORING VIA CMP
: (orig=0x05656acbd)0x01c7                    add %eax, %edi                  
: (orig=0x05656acbf)0x89bbe8080000            mov %edi, 0x000008e8(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05656acc5)0x8d0432                  lea (%edx, %esi), %eax          
: (orig=0x05656acc8)0x8993f0080000            mov %edx, 0x000008f0(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05656acce)0x8983ec080000            mov %eax, 0x000008ec(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05656acd4)0x89d0                    mov %edx, %eax                  
: (orig=0x05656acd6)0x8b5c2420                mov 0x20(%esp), %ebx            
leal-based check (opsize = 4)
: (orig=0x05656acda)0x8b742424                mov 0x24(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x05656acde)0x8b7c2428                mov 0x28(%esp), %edi            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05656ace2)0x83c42c                  add $0x2c, %esp                 
: (orig=0x05656ace5)0xc3                      ret                             
start fun: action_ret(*addr=0x5656ace5, *transl_addr=0x3ecaf6dc, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecaf601,   next_tu=0x5656ace6 (len: 233)
ff = 445
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655ce96)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf6f1start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655ce96, *transl_address=0x3ecaf6f1)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISAdadEND FLAG ANALYSIS: (orig=0x05655ce96)0x8b55dc                  mov 0xdc(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655ce99)0x85c0                    test %eax, %eax                 
PATCHING TST REG REG
: (orig=0x05655ce9b)0x8902                    mov %eax, (%edx)                
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05655ce9d)0x0f84d9020000            jz +0x000002d9                  
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655ce9d, *transl_addr=0x3ecaf722, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d17c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99178, target: 0x5655d17c, origin: 0x3ecaf724start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cea3)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b210, target: 0x5655cea3, origin: 0x3ecaf729end fun: -> close, transl_length=11
end fun: -> 0x3ecaf6f1,   next_tu=0x5655cea3 (len: 60)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cea3)
end fun: -> 0x00000000
ff = 446
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cea3)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf734start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655cea3, *transl_address=0x3ecaf734)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)


 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAaddddddaddaaddaddddddaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655cea3)0x83c204                  add $0x04, %edx                 
: (orig=0x05655cea6)0x8955e0                  mov %edx, 0xe0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655cea9)0x8d939c8fffff            lea 0xffff8f9c(%ebx), %edx      
: (orig=0x05655ceaf)0x8955cc                  mov %edx, 0xcc(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655ceb2)0x895004                  mov %edx, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x05655ceb5)0x8d93cc84ffff            lea 0xffff84cc(%ebx), %edx      
: (orig=0x05655cebb)0x89500c                  mov %edx, 0x0c(%eax)            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655cebe)0x83c208                  add $0x08, %edx                 
: (orig=0x05655cec1)0x8955e4                  mov %edx, 0xe4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655cec4)0x8d14bf                  lea (%edi, %edi*4), %edx        
: (orig=0x05655cec7)0x31ff                    xor %edi, %edi                  
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05655cec9)0xc1e202                  shl $0x02, %edx                 
: (orig=0x05655cecc)0x89d1                    mov %edx, %ecx                  
: (orig=0x05655cece)0xc7830cffffff00000000    mov $0x00000000, 0xffffff0c(%ebx) 
leal-based check (opsize = 4)
: (orig=0x05655ced8)0x01c1                    add %eax, %ecx                  
: (orig=0x05655ceda)0x898340050000            mov %eax, 0x00000540(%ebx)      
leal-based check (opsize = 4)
: (orig=0x05655cee0)0xc7400800000000          mov $0x00000000, 0x08(%eax)     
leal-based check (opsize = 4)
: (orig=0x05655cee7)0xc7401007000000          mov $0x00000007, 0x10(%eax)     
leal-based check (opsize = 4)
: (orig=0x05655ceee)0x8955d8                  mov %edx, 0xd8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655cef1)0x8975c8                  mov %esi, 0xc8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655cef4)0x8b75c8                  mov 0xc8(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05655cef7)0x31d2                    xor %edx, %edx                  
: (orig=0x05655cef9)0x85f6                    test %esi, %esi                 
: (orig=0x05655cefb)0x7415                    jz +0x15                        
action_jcc
start fun: action_jcc(*addr=0x5655cefb, *transl_addr=0x3ecaf861, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf12)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b248, target: 0x5655cf12, origin: 0x3ecaf863start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cefd)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b280, target: 0x5655cefd, origin: 0x3ecaf868end fun: -> close, transl_length=11
end fun: -> 0x3ecaf734,   next_tu=0x5655cefd (len: 312)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cefd)
end fun: -> 0x00000000
ff = 447
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cefd)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf873start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655cefd, *transl_address=0x3ecaf873)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... compares reg 6 with reg 2

BEGIN FLAG ANALYSISCAaddEND FLAG ANALYSIS: (orig=0x05655cefd)0x8b75c8                  mov 0xc8(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05655cf00)0xc744901400000000        mov $0x00000000, 0x14(%eax, %edx*4) 
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655cf08)0x83c201                  add $0x01, %edx                 
: (orig=0x05655cf0b)0x39f2                    cmp %esi, %edx                  
: (orig=0x05655cf0d)0x75f1                    jnz +0xf1                       
action_jcc
start fun: action_jcc(*addr=0x5655cf0d, *transl_addr=0x3ecaf8a6, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf00)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b210, target: 0x5655cf00, origin: 0x3ecaf8a8start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf0f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b2b8, target: 0x5655cf0f, origin: 0x3ecaf8adend fun: -> close, transl_length=11
end fun: -> 0x3ecaf873,   next_tu=0x5655cf0f (len: 62)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf00)
end fun: -> 0x00000000
ff = 448
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf00)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf8b8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655cf00, *transl_address=0x3ecaf8b8)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 
... compares reg 6 with reg 2

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x05655cf00)0xc744901400000000        mov $0x00000000, 0x14(%eax, %edx*4) 
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655cf08)0x83c201                  add $0x01, %edx                 
: (orig=0x05655cf0b)0x39f2                    cmp %esi, %edx                  
: (orig=0x05655cf0d)0x75f1                    jnz +0xf1                       
action_jcc
start fun: action_jcc(*addr=0x5655cf0d, *transl_addr=0x3ecaf8d7, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf00)
end fun: -> 0x3ecaf8b8
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf0f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b280, target: 0x5655cf0f, origin: 0x3ecaf8deend fun: -> close, transl_length=11
end fun: -> 0x3ecaf8b8,   next_tu=0x5655cf0f (len: 42)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf0f)
end fun: -> 0x00000000
ff = 449
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf0f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf8e9start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655cf0f, *transl_address=0x3ecaf8e9)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)


 opt flags pass 
... cmp imm8 0c with reg 7

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655cf0f)0x8975c8                  mov %esi, 0xc8(%ebp)            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x05655cf12)0x83ff0c                  cmp $0x0c, %edi                 
: (orig=0x05655cf15)0x7459                    jz +0x59                        
action_jcc
start fun: action_jcc(*addr=0x5655cf15, *transl_addr=0x3ecaf900, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf70)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b210, target: 0x5655cf70, origin: 0x3ecaf902start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf17)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b2f0, target: 0x5655cf17, origin: 0x3ecaf907end fun: -> close, transl_length=11
end fun: -> 0x3ecaf8e9,   next_tu=0x5655cf17 (len: 34)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf17)
end fun: -> 0x00000000
ff = 450
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf17)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecaf912start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655cf17, *transl_address=0x3ecaf912)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAdadddddddaddadadddEND FLAG ANALYSIS: (orig=0x05655cf17)0x8b75e0                  mov 0xe0(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05655cf1a)0x8b55cc                  mov 0xcc(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655cf1d)0x8908                    mov %ecx, (%eax)                
leal-based check (opsize = 4)
: (orig=0x05655cf1f)0x0345d8                  add 0xd8(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x05655cf22)0x890e                    mov %ecx, (%esi)                
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655cf24)0x83c604                  add $0x04, %esi                 
: (orig=0x05655cf27)0x895104                  mov %edx, 0x04(%ecx)            
leal-based check (opsize = 4)
: (orig=0x05655cf2a)0x8b941fb084ffff          mov 0xffff84b0(%edi, %ebx), %edx 
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x05655cf31)0x83c704                  add $0x04, %edi                 
: (orig=0x05655cf34)0x8975d4                  mov %esi, 0xd4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655cf37)0x8b75e4                  mov 0xe4(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05655cf3a)0xc7410800000000          mov $0x00000000, 0x08(%ecx)     
leal-based check (opsize = 4)
: (orig=0x05655cf41)0x895110                  mov %edx, 0x10(%ecx)            
leal-based check (opsize = 4)
: (orig=0x05655cf44)0x89710c                  mov %esi, 0x0c(%ecx)            
leal-based check (opsize = 4)
: (orig=0x05655cf47)0x8d741601                lea 0x01(%esi, %edx), %esi      
: (orig=0x05655cf4b)0x8b55e4                  mov 0xe4(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655cf4e)0x034dd8                  add 0xd8(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655cf51)0x8975dc                  mov %esi, 0xdc(%ebp)            
leal-based check (opsize = 4)
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05655cf54)0x803a2f                  cmp $0x2f, (%edx)               
leal-based check (opsize = 1)
opcode escape found: 0f: (orig=0x05655cf57)0x0f85f5010000            jnz +0x000001f5                 
action_jcc
start fun: action_jcc(*addr=0x5655cf57, *transl_addr=0x3ecafa63, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d152)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b280, target: 0x5655d152, origin: 0x3ecafa65start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf5d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b328, target: 0x5655cf5d, origin: 0x3ecafa6aend fun: -> close, transl_length=11
end fun: -> 0x3ecaf912,   next_tu=0x5655cf5d (len: 348)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf5d)
end fun: -> 0x00000000
ff = 451
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf5d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecafa75start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655cf5d, *transl_address=0x3ecafa75)
end fun:  


 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAadddddddEND FLAG ANALYSIS: (orig=0x05655cf5d)0x8975e4                  mov %esi, 0xe4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655cf60)0x8b55d4                  mov 0xd4(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x05655cf63)0x8b75e0                  mov 0xe0(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05655cf66)0x8955e0                  mov %edx, 0xe0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655cf69)0x8975dc                  mov %esi, 0xdc(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05655cf6c)0xeb86                    jmp +0x86                       
original_addr=05655cf6c / addr=05655cf6c
start fun: action_jmp(*addr=0x5655cf6c, *transl_addr=0x3ecafad9, length=2)
action_jmp
original jmp_target: 0x5655cef4start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cef4)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655cef4)0x8b75c8                  mov 0xc8(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x05655cef7)0x31d2                    xor %edx, %edx                  
: (orig=0x05655cef9)0x85f6                    test %esi, %esi                 
: (orig=0x05655cefb)0x7415                    jz +0x15                        
action_jcc
start fun: action_jcc(*addr=0x5655cefb, *transl_addr=0x3ecafaf1, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf12)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b2f0, target: 0x5655cf12, origin: 0x3ecafaf3start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cefd)
end fun: -> 0x3ecaf873
end fun: -> close, transl_length=11
end fun: -> 0x3ecafa75,   next_tu=0x5655cefd (len: 135)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf70)
end fun: -> 0x00000000
ff = 452
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf70)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecafb03start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655cf70, *transl_address=0x3ecafb03)
end fun:  


 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISAdaddddEND FLAG ANALYSIS: (orig=0x05655cf70)0x8bb32c000000            mov 0x0000002c(%ebx), %esi      
leal-based check (opsize = 4)
: (orig=0x05655cf76)0xc70000000000            mov $0x00000000, (%eax)         
leal-based check (opsize = 4)
: (orig=0x05655cf7c)0x8b45dc                  mov 0xdc(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x05655cf7f)0xc783a00800000b000000    mov $0x0000000b, 0x000008a0(%ebx) 
leal-based check (opsize = 4)
: (orig=0x05655cf89)0x85f6                    test %esi, %esi                 
PATCHING TST REG REG
: (orig=0x05655cf8b)0xc7400400000000          mov $0x00000000, 0x04(%eax)     
leal-based check (opsize = 4)
: (orig=0x05655cf92)0x744c                    jz +0x4c                        
RESTORING VIA TST
action_jcc
start fun: action_jcc(*addr=0x5655cf92, *transl_addr=0x3ecafb88, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cfe0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b328, target: 0x5655cfe0, origin: 0x3ecafb8astart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf94)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b360, target: 0x5655cf94, origin: 0x3ecafb8fend fun: -> close, transl_length=11
end fun: -> 0x3ecafb03,   next_tu=0x5655cf94 (len: 144)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf94)
end fun: -> 0x00000000
ff = 453
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cf94)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecafb9astart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655cf94, *transl_address=0x3ecafb9a)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSISopcode escape found: 0f: (orig=0x05655cf94)0x0fb68694010000          movzx 0x00000194(%esi), %eax    
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05655cf9b)0x83e003                  and $0x03, %eax                 
: (orig=0x05655cf9e)0x3c02                    cmp $0x02, %al                  
opcode escape found: 0f: (orig=0x05655cfa0)0x0f84b7020000            jz +0x000002b7                  
action_jcc
start fun: action_jcc(*addr=0x5655cfa0, *transl_addr=0x3ecafbba, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d25d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b210, target: 0x5655d25d, origin: 0x3ecafbbcstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cfa6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b398, target: 0x5655cfa6, origin: 0x3ecafbc1end fun: -> close, transl_length=11
end fun: -> 0x3ecafb9a,   next_tu=0x5655cfa6 (len: 43)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cfa6)
end fun: -> 0x00000000
ff = 454
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cfa6)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecafbccstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655cfa6, *transl_address=0x3ecafbcc)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x05655cfa6)0x8b8694000000            mov 0x00000094(%esi), %eax      
leal-based check (opsize = 4)
: (orig=0x05655cfac)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05655cfae)0x0f8436010000            jz +0x00000136                  
action_jcc
start fun: action_jcc(*addr=0x5655cfae, *transl_addr=0x3ecafbe8, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d0ea)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b360, target: 0x5655d0ea, origin: 0x3ecafbeastart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cfb4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b3d0, target: 0x5655cfb4, origin: 0x3ecafbefend fun: -> close, transl_length=11
end fun: -> 0x3ecafbcc,   next_tu=0x5655cfb4 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d0ea)
end fun: -> 0x00000000
ff = 455
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d0ea)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecafbfastart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d0ea, *transl_address=0x3ecafbfa)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x05655d0ea)0x8b465c                  mov 0x5c(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05655d0ed)0xc786e8010000ffffffff    mov $0xffffffff, 0x000001e8(%esi) 
leal-based check (opsize = 4)
: (orig=0x05655d0f7)0x85c0                    test %eax, %eax                 
: (orig=0x05655d0f9)0x7431                    jz +0x31                        
action_jcc
start fun: action_jcc(*addr=0x5655d0f9, *transl_addr=0x3ecafc2e, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d12c)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b398, target: 0x5655d12c, origin: 0x3ecafc30start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d0fb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b408, target: 0x5655d0fb, origin: 0x3ecafc35end fun: -> close, transl_length=11
end fun: -> 0x3ecafbfa,   next_tu=0x5655d0fb (len: 63)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d12c)
end fun: -> 0x00000000
ff = 456
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d12c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecafc40start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d12c, *transl_address=0x3ecafc40)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 1 with reg 1

BEGIN FLAG ANALYSISCAdddEND FLAG ANALYSIS: (orig=0x05655d12c)0xc78698010000ffffffff    mov $0xffffffff, 0x00000198(%esi) 
leal-based check (opsize = 4)
: (orig=0x05655d136)0xe9a5feffff              jmp +0xfffffea5                 
original_addr=05655d136 / addr=05655d136
start fun: action_jmp(*addr=0x5655d136, *transl_addr=0x3ecafc5e, length=5)
action_jmp
jump_target = 0fffffea5 + 05655d136 + 05original jmp_target: 0x5655cfe0start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cfe0)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05655cfe0)0x8b4dd0                  mov 0xd0(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05655cfe3)0x85c9                    test %ecx, %ecx                 
opcode escape found: 0f: (orig=0x05655cfe5)0x0f84ed000000            jz +0x000000ed                  
action_jcc
start fun: action_jcc(*addr=0x5655cfe5, *transl_addr=0x3ecafc74, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d0d8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b360, target: 0x5655d0d8, origin: 0x3ecafc76start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655cfeb)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b440, target: 0x5655cfeb, origin: 0x3ecafc7bend fun: -> close, transl_length=11
end fun: -> 0x3ecafc40,   next_tu=0x5655cfeb (len: 63)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d0d8)
end fun: -> 0x00000000
ff = 457
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d0d8)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecafc86start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d0d8, *transl_address=0x3ecafc86)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddddddEND FLAG ANALYSIS: (orig=0x05655d0d8)0xc78310ffffffffffffff    mov $0xffffffff, 0xffffff10(%ebx) 
leal-based check (opsize = 4)
: (orig=0x05655d0e2)0x8d65f4                  lea 0xf4(%ebp), %esp            
: (orig=0x05655d0e5)0x5b                      pop %ebx                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655d0e6)0x5e                      pop %esi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655d0e7)0x5f                      pop %edi                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655d0e8)0x5d                      pop %ebp                        
pop-based check
push-based check
CHECK (stack read)
: (orig=0x05655d0e9)0xc3                      ret                             
start fun: action_ret(*addr=0x5655d0e9, *transl_addr=0x3ecafcf4, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecafc86,   next_tu=0x5655d0ea (len: 124)
ff = 458
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557bd1)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecafd09start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557bd1, *transl_address=0x3ecafd09)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISdddddadadEND FLAG ANALYSIS: (orig=0x056557bd1)0x8b8348050000            mov 0x00000548(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056557bd7)0x31d2                    xor %edx, %edx                  
: (orig=0x056557bd9)0xe872ce0000              call +0x0000ce72                
action_call
start fun: action_call(*addr=0x56557bd9, *transl_addr=0x3ecafd25, length=5)
original call_target: 0x56564a50return_address = 056557bde
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a50)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056564a50)0x83ec0c                  sub $0x0c, %esp                 
: (orig=0x056564a53)0x89c1                    mov %eax, %ecx                  
: (orig=0x056564a55)0x891c24                  mov %ebx, (%esp)                
leal-based check (opsize = 4)
: (orig=0x056564a58)0xe8ee950000              call +0x000095ee                
action_call
start fun: action_call(*addr=0x56564a58, *transl_addr=0x3ecafd4b, length=5)
original call_target: 0x5656e04breturn_address = 056564a5d
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecafd6c, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecafd09,   next_tu=0x5656e04f (len: 113)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a8a)
end fun: -> 0x3eca9c7e
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a96)
end fun: -> 0x00000000
ff = 459
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a96)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecafd81start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56564a96, *transl_address=0x3ecafd81)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)


 opt flags pass 

BEGIN FLAG ANALYSISdaddddddddaEND FLAG ANALYSIS: (orig=0x056564a96)0x6bd74c                  imul %edi, $0x4c, %edx          
: (orig=0x056564a99)0x8b742404                mov 0x04(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x056564a9d)0x894810                  mov %ecx, 0x10(%eax)            
leal-based check (opsize = 4)
: (orig=0x056564aa0)0x8b7c2408                mov 0x08(%esp), %edi            
leal-based check (opsize = 4)
: (orig=0x056564aa4)0x8b94132c000000          mov 0x0000002c(%ebx, %edx), %edx 
leal-based check (opsize = 4)
: (orig=0x056564aab)0x895004                  mov %edx, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x056564aae)0x8d934ceafeff            lea 0xfffeea4c(%ebx), %edx      
: (orig=0x056564ab4)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x056564ab7)0x895008                  mov %edx, 0x08(%eax)            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056564aba)0x83c40c                  add $0x0c, %esp                 
: (orig=0x056564abd)0xc3                      ret                             
start fun: action_ret(*addr=0x56564abd, *transl_addr=0x3ecafe26, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecafd81,   next_tu=0x56564abe (len: 179)
ff = 460
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557bde)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecafe3bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557bde, *transl_address=0x3ecafe3b)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdddEND FLAG ANALYSIS: (orig=0x056557bde)0x898550ffffff            mov %eax, 0xffffff50(%ebp)      
leal-based check (opsize = 4)
: (orig=0x056557be4)0xc7400c00000000          mov $0x00000000, 0x0c(%eax)     
leal-based check (opsize = 4)
: (orig=0x056557beb)0x8b834c050000            mov 0x0000054c(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056557bf1)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056557bf3)0x0f84fb090000            jz +0x000009fb                  
action_jcc
start fun: action_jcc(*addr=0x56557bf3, *transl_addr=0x3ecafe89, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565585f4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98fb8, target: 0x565585f4, origin: 0x3ecafe8bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557bf9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98f48, target: 0x56557bf9, origin: 0x3ecafe90end fun: -> close, transl_length=11
end fun: -> 0x3ecafe3b,   next_tu=0x56557bf9 (len: 89)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557bf9)
end fun: -> 0x00000000
ff = 461
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557bf9)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecafe9bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557bf9, *transl_address=0x3ecafe9b)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216668)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
opcode table: 0x00243f78 -> 0x00216640 (0x00216690)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCD1.fa1.dddaadaddEND FLAG ANALYSISopcode escape found: 0f: (orig=0x056557bf9)0x0fb683dc060000          movzx 0x000006dc(%ebx), %eax    
leal-based check (opsize = 4)
: (orig=0x056557c00)0x8db348050000            lea 0x00000548(%ebx), %esi      
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056557c06)0x83833000000001          add $0x01, 0x00000030(%ebx)     
leal-based check (opsize = 4)
: (orig=0x056557c0d)0x89b564ffffff            mov %esi, 0xffffff64(%ebp)      
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x056557c13)0x83e0fc                  and $0xfc, %eax                 
opcode table: 0x00243f78 -> 0x00216640 (0x00216668)
: (orig=0x056557c16)0x83c801                  or $0x01, %eax                  
: (orig=0x056557c19)0x8883dc060000            mov %eax, 0x000006dc(%ebx)      
leal-based check (opsize = 1)
: (orig=0x056557c1f)0x8b4584                  mov 0x84(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x056557c22)0x89700c                  mov %esi, 0x0c(%eax)            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216640)
: (orig=0x056557c25)0x83832005000001          add $0x01, 0x00000520(%ebx)     
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216690)
: (orig=0x056557c2c)0x83932405000000          adc $0x00, 0x00000524(%ebx)     
SAV
leal-based check (opsize = 4)
RST
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056557c33)0x83bb14fefffffe          cmp $0xfe, 0xfffffe14(%ebx)     
leal-based check (opsize = 4)
: (orig=0x056557c3a)0x898358050000            mov %eax, 0x00000558(%ebx)      
SAV
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x056557c40)0x0f849e090000            jz +0x0000099e                  
action_jcc
start fun: action_jcc(*addr=0x56557c40, *transl_addr=0x3ecafffe, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565585e4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b360, target: 0x565585e4, origin: 0x3ecb0000start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557c46)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b398, target: 0x56557c46, origin: 0x3ecb0005end fun: -> close, transl_length=11
end fun: -> 0x3ecafe9b,   next_tu=0x56557c46 (len: 366)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565585e4)
end fun: -> 0x00000000
ff = 462
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565585e4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0010start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565585e4, *transl_address=0x3ecb0010)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0fopcode table: 0x00244928 -> 0x002168c0 (0x00216960)
prefix found: 066

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAadadddaddddfaAEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x0565585e4)0x833801                  cmp $0x01, (%eax)               
leal-based check (opsize = 4)
: (orig=0x0565585e7)0x19c0                    sbb %eax, %eax                  
: (orig=0x0565585e9)0x898314feffff            mov %eax, 0xfffffe14(%ebx)      
leal-based check (opsize = 4)
: (orig=0x0565585ef)0xe952f6ffff              jmp +0xfffff652                 
original_addr=0565585ef / addr=0565585ef
start fun: action_jmp(*addr=0x565585ef, *transl_addr=0x3ecb003f, length=5)
action_jmp
jump_target = 0fffff652 + 0565585ef + 05original jmp_target: 0x56557c46start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557c46)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x056557c46)0x8b83f4060000            mov 0x000006f4(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056557c4c)0x8b481c                  mov 0x1c(%eax), %ecx            
leal-based check (opsize = 4)
: (orig=0x056557c4f)0x01c1                    add %eax, %ecx                  
opcode escape found: 0f: (orig=0x056557c51)0x0fb7402c                movzx 0x2c(%eax), %eax          
leal-based check (opsize = 4)
: (orig=0x056557c55)0x898b98060000            mov %ecx, 0x00000698(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056557c5b)0x8d90ffffff07            lea 0x07ffffff(%eax), %edx      
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x056557c61)0xc1e205                  shl $0x05, %edx                 
prefix found: 066: (orig=0x056557c64)0x668983a0060000          mov %eax, 0x000006a0(%bx)       
leal-based check (opsize = 4)
: (orig=0x056557c6b)0x01ca                    add %ecx, %edx                  
: (orig=0x056557c6d)0x85c0                    test %eax, %eax                 
: (orig=0x056557c6f)0x7423                    jz +0x23                        
action_jcc
start fun: action_jcc(*addr=0x56557c6f, *transl_addr=0x3ecb00c7, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557c94)
end fun: -> 0x00000000
allocated trampoline: 0x3ec98f48, target: 0x56557c94, origin: 0x3ecb00c9start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557c71)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b478, target: 0x56557c71, origin: 0x3ecb00ceend fun: -> close, transl_length=11
end fun: -> 0x3ecb0010,   next_tu=0x56557c71 (len: 194)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557c71)
end fun: -> 0x00000000
ff = 463
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557c71)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb00d9start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557c71, *transl_address=0x3ecb00d9)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode table: 0x00243f28 -> 0x002163c0 (0x002164d8)


 opt flags pass 

BEGIN FLAG ANALYSISCAaadEND FLAG ANALYSIS: (orig=0x056557c71)0x89d1                    mov %edx, %ecx                  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056557c73)0x83ea20                  sub $0x20, %edx                 
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056557c76)0x83e801                  sub $0x01, %eax                 
opcode table: 0x00243f28 -> 0x002163c0 (0x002164d8)
: (orig=0x056557c79)0x817a2052e57464          cmp $0x6474e552, 0x20(%edx)     
leal-based check (opsize = 4)
: (orig=0x056557c80)0x75eb                    jnz +0xeb                       
action_jcc
start fun: action_jcc(*addr=0x56557c80, *transl_addr=0x3ecb00f9, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557c6d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b360, target: 0x56557c6d, origin: 0x3ecb00fbstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557c82)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b4b0, target: 0x56557c82, origin: 0x3ecb0100end fun: -> close, transl_length=11
end fun: -> 0x3ecb00d9,   next_tu=0x56557c82 (len: 43)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557c82)
end fun: -> 0x00000000
ff = 464
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557c82)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb010bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557c82, *transl_address=0x3ecb010b)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdddddEND FLAG ANALYSIS: (orig=0x056557c82)0x8b4108                  mov 0x08(%ecx), %eax            
leal-based check (opsize = 4)
: (orig=0x056557c85)0x898390070000            mov %eax, 0x00000790(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056557c8b)0x8b4114                  mov 0x14(%ecx), %eax            
leal-based check (opsize = 4)
: (orig=0x056557c8e)0x898394070000            mov %eax, 0x00000794(%ebx)      
leal-based check (opsize = 4)
: (orig=0x056557c94)0x8b837c070000            mov 0x0000077c(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056557c9a)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056557c9c)0x0f8596090000            jnz +0x00000996                 
action_jcc
start fun: action_jcc(*addr=0x56557c9c, *transl_addr=0x3ecb0183, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56558638)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b478, target: 0x56558638, origin: 0x3ecb0185start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557ca2)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b4e8, target: 0x56557ca2, origin: 0x3ecb018aend fun: -> close, transl_length=11
end fun: -> 0x3ecb010b,   next_tu=0x56557ca2 (len: 131)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557ca2)
end fun: -> 0x00000000
ff = 465
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557ca2)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0195start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557ca2, *transl_address=0x3ecb0195)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056557ca2)0x8b8388080000            mov 0x00000888(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056557ca8)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056557caa)0x0f85a1090000            jnz +0x000009a1                 
action_jcc
start fun: action_jcc(*addr=0x56557caa, *transl_addr=0x3ecb01b1, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56558651)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b4b0, target: 0x56558651, origin: 0x3ecb01b3start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557cb0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b520, target: 0x56557cb0, origin: 0x3ecb01b8end fun: -> close, transl_length=11
end fun: -> 0x3ecb0195,   next_tu=0x56557cb0 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557cb0)
end fun: -> 0x00000000
ff = 466
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557cb0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb01c3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557cb0, *transl_address=0x3ecb01c3)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdddEND FLAG ANALYSIS: (orig=0x056557cb0)0xc78570ffffff00000000    mov $0x00000000, 0xffffff70(%ebp) 
leal-based check (opsize = 4)
: (orig=0x056557cba)0x8b4d84                  mov 0x84(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x056557cbd)0x8b4174                  mov 0x74(%ecx), %eax            
leal-based check (opsize = 4)
: (orig=0x056557cc0)0x85c0                    test %eax, %eax                 
: (orig=0x056557cc2)0x7409                    jz +0x09                        
action_jcc
start fun: action_jcc(*addr=0x56557cc2, *transl_addr=0x3ecb020b, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557ccd)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b4e8, target: 0x56557ccd, origin: 0x3ecb020dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557cc4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b558, target: 0x56557cc4, origin: 0x3ecb0212end fun: -> close, transl_length=11
end fun: -> 0x3ecb01c3,   next_tu=0x56557cc4 (len: 83)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557cc4)
end fun: -> 0x00000000
ff = 467
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557cc4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb021dstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557cc4, *transl_address=0x3ecb021d)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdddEND FLAG ANALYSIS: (orig=0x056557cc4)0x8bb550ffffff            mov 0xffffff50(%ebp), %esi      
leal-based check (opsize = 4)
: (orig=0x056557cca)0x897004                  mov %esi, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x056557ccd)0x8b83bc050000            mov 0x000005bc(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056557cd3)0x85c0                    test %eax, %eax                 
: (orig=0x056557cd5)0x7409                    jz +0x09                        
action_jcc
start fun: action_jcc(*addr=0x56557cd5, *transl_addr=0x3ecb0267, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557ce0)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b520, target: 0x56557ce0, origin: 0x3ecb0269start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557cd7)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b590, target: 0x56557cd7, origin: 0x3ecb026eend fun: -> close, transl_length=11
end fun: -> 0x3ecb021d,   next_tu=0x56557cd7 (len: 85)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557ce0)
end fun: -> 0x00000000
ff = 468
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557ce0)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0279start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557ce0, *transl_address=0x3ecb0279)
end fun:  
prefix found: 0f3

 opt flags pass 

BEGIN FLAG ANALYSISddddEND FLAG ANALYSIS: (orig=0x056557ce0)0x8b8550ffffff            mov 0xffffff50(%ebp), %eax      
leal-based check (opsize = 4)
: (orig=0x056557ce6)0xc7400c01000000          mov $0x00000001, 0x0c(%eax)     
leal-based check (opsize = 4)
: (orig=0x056557ced)0xe84ecd0000              call +0x0000cd4e                
action_call
start fun: action_call(*addr=0x56557ced, *transl_addr=0x3ecb02ab, length=5)
original call_target: 0x56564a40return_address = 056557cf2
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564a40)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
prefix found: 0f3: (orig=0x056564a40)0xf3c3                    ret                             
start fun: action_ret(*addr=0x56564a40, *transl_addr=0x3ecb02b8, length=2)
Useless REPZ Prefix found (and removed) in RET (ugly gcc hack for Athlon and K8)end fun: -> close, transl_length=14
end fun: -> 0x3ecb0279,   next_tu=0x56564a42 (len: 77)
ff = 469
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557cf2)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb02cdstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557cf2, *transl_address=0x3ecb02cd)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056557cf2)0x8b8368feffff            mov 0xfffffe68(%ebx), %eax      
leal-based check (opsize = 4)
: (orig=0x056557cf8)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056557cfa)0x0f85d9170000            jnz +0x000017d9                 
action_jcc
start fun: action_jcc(*addr=0x56557cfa, *transl_addr=0x3ecb02e9, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565594d9)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b520, target: 0x565594d9, origin: 0x3ecb02ebstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d00)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b558, target: 0x56557d00, origin: 0x3ecb02f0end fun: -> close, transl_length=11
end fun: -> 0x3ecb02cd,   next_tu=0x56557d00 (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d00)
end fun: -> 0x00000000
ff = 470
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d00)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb02fbstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557d00, *transl_address=0x3ecb02fb)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x056557d00)0x8bb560ffffff            mov 0xffffff60(%ebp), %esi      
leal-based check (opsize = 4)
: (orig=0x056557d06)0x8b06                    mov (%esi), %eax                
leal-based check (opsize = 4)
: (orig=0x056557d08)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056557d0a)0x0f8527180000            jnz +0x00001827                 
action_jcc
start fun: action_jcc(*addr=0x56557d0a, *transl_addr=0x3ecb0329, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56559537)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b5c8, target: 0x56559537, origin: 0x3ecb032bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d10)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b600, target: 0x56557d10, origin: 0x3ecb0330end fun: -> close, transl_length=11
end fun: -> 0x3ecb02fb,   next_tu=0x56557d10 (len: 57)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d10)
end fun: -> 0x00000000
ff = 471
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d10)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb033bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557d10, *transl_address=0x3ecb033b)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x056557d10)0x8bb3ecfeffff            mov 0xfffffeec(%ebx), %esi      
leal-based check (opsize = 4)
: (orig=0x056557d16)0x85f6                    test %esi, %esi                 
opcode escape found: 0f: (orig=0x056557d18)0x0f854c160000            jnz +0x0000164c                 
action_jcc
start fun: action_jcc(*addr=0x56557d18, *transl_addr=0x3ecb0357, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655936a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b558, target: 0x5655936a, origin: 0x3ecb0359start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d1e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b638, target: 0x56557d1e, origin: 0x3ecb035eend fun: -> close, transl_length=11
end fun: -> 0x3ecb033b,   next_tu=0x56557d1e (len: 39)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d1e)
end fun: -> 0x00000000
ff = 472
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d1e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0369start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557d1e, *transl_address=0x3ecb0369)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISBDD4.4.4.4.4.4.4.4.END FLAG ANALYSIS: (orig=0x056557d1e)0xc7458000000000          mov $0x00000000, 0x80(%ebp)     
SAV
leal-based check (opsize = 4)
: (orig=0x056557d25)0x8db3c68dffff            lea 0xffff8dc6(%ebx), %esi      
: (orig=0x056557d2b)0xc744240404000000        mov $0x00000004, 0x04(%esp)     
leal-based check (opsize = 4)
: (orig=0x056557d33)0x89b568ffffff            mov %esi, 0xffffff68(%ebp)      
leal-based check (opsize = 4)
: (orig=0x056557d39)0x893424                  mov %esi, (%esp)                
leal-based check (opsize = 4)
: (orig=0x056557d3c)0xe80f540100              call +0x0001540f                
action_call
start fun: action_call(*addr=0x56557d3c, *transl_addr=0x3ecb03e7, length=5)
original call_target: 0x5656d150return_address = 056557d41
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d150)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d150)0x89da                    mov %ebx, %edx                  
: (orig=0x05656d152)0x8b4c2408                mov 0x08(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656d156)0x8b5c2404                mov 0x04(%esp), %ebx            
leal-based check (opsize = 4)
RST
: (orig=0x05656d15a)0xb821000000              mov $0x00000021, %eax           
: (orig=0x05656d15f)0xcd80                    int $0x80                       
closing TU upon request, invoking translation function on 0x5656d161allocated trampoline: 0x3ec9b600, target: 0x5656d161, origin: 0x3ecb046eend fun: -> 0x3ecb0369,   next_tu=0x5656d161 (len: 253)
SYSCALL 33
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d161)
end fun: -> 0x3ecaec85
ff = 473
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d41)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0472start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557d41, *transl_address=0x3ecb0472)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x056557d41)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056557d43)0x0f84c5160000            jz +0x000016c5                  
action_jcc
start fun: action_jcc(*addr=0x56557d43, *transl_addr=0x3ecb0474, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655940e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b600, target: 0x5655940e, origin: 0x3ecb0476start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d49)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b638, target: 0x56557d49, origin: 0x3ecb047bend fun: -> close, transl_length=11
end fun: -> 0x3ecb0472,   next_tu=0x56557d49 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d49)
end fun: -> 0x00000000
ff = 474
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d49)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0486start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557d49, *transl_address=0x3ecb0486)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAddEND FLAG ANALYSIS: (orig=0x056557d49)0x8bbd60ffffff            mov 0xffffff60(%ebp), %edi      
leal-based check (opsize = 4)
: (orig=0x056557d4f)0x8b07                    mov (%edi), %eax                
leal-based check (opsize = 4)
: (orig=0x056557d51)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056557d53)0x0f85b61b0000            jnz +0x00001bb6                 
action_jcc
start fun: action_jcc(*addr=0x56557d53, *transl_addr=0x3ecb04b4, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655990f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b670, target: 0x5655990f, origin: 0x3ecb04b6start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d59)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b6a8, target: 0x56557d59, origin: 0x3ecb04bbend fun: -> close, transl_length=11
end fun: -> 0x3ecb0486,   next_tu=0x56557d59 (len: 57)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d59)
end fun: -> 0x00000000
ff = 475
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56557d59)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb04c6start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56557d59, *transl_address=0x3ecb04c6)
end fun:  
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0fopcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISdddddddddadddaaddddaddddddddcD4.4.1.daddaEND FLAG ANALYSIS: (orig=0x056557d59)0x31f6                    xor %esi, %esi                  
opcode escape found: 0f: (orig=0x056557d5b)0x0f31                    rdtsc                           
: (orig=0x056557d5d)0x898578ffffff            mov %eax, 0xffffff78(%ebp)      
leal-based check (opsize = 4)
: (orig=0x056557d63)0x31c0                    xor %eax, %eax                  
: (orig=0x056557d65)0x8b4d80                  mov 0x80(%ebp), %ecx            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x056557d68)0x837dd403                cmp $0x03, 0xd4(%ebp)           
leal-based check (opsize = 4)
: (orig=0x056557d6c)0x89957cffffff            mov %edx, 0xffffff7c(%ebp)      
SAV
leal-based check (opsize = 4)
: (orig=0x056557d72)0x89f2                    mov %esi, %edx                  
: (orig=0x056557d74)0xc744240400000000        mov $0x00000000, 0x04(%esp)     
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x056557d7c)0x0f94c0                  setz %eax                       
: (orig=0x056557d7f)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x056557d82)0x8b4584                  mov 0x84(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x056557d85)0xe8d6a70000              call +0x0000a7d6                
action_call
start fun: action_call(*addr=0x56557d85, *transl_addr=0x3ecb059d, length=5)
original call_target: 0x56562560return_address = 056557d8a
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562560)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x056562560)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x056562561)0x89e5                    mov %esp, %ebp                  
: (orig=0x056562563)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x056562564)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x056562565)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
: (orig=0x056562566)0x81ec9c000000            sub $0x0000009c, %esp           
: (orig=0x05656256c)0x894588                  mov %eax, 0x88(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656256f)0x8d0449                  lea (%ecx, %ecx*2), %eax        
: (orig=0x056562572)0x8b7588                  mov 0x88(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x056562575)0x8d048536000000          lea 0x00000036(, %eax*4), %eax  
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656257c)0x83e0f0                  and $0xf0, %eax                 
: (orig=0x05656257f)0x29c4                    sub %eax, %esp                  
: (orig=0x056562581)0x8b4588                  mov 0x88(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x056562584)0x894db4                  mov %ecx, 0xb4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056562587)0x8d4c241f                lea 0x1f(%esp), %ecx            
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656258b)0x83e1f0                  and $0xf0, %ecx                 
: (orig=0x05656258e)0x898d74ffffff            mov %ecx, 0xffffff74(%ebp)      
leal-based check (opsize = 4)
: (orig=0x056562594)0x894104                  mov %eax, 0x04(%ecx)            
leal-based check (opsize = 4)
: (orig=0x056562597)0x8d410c                  lea 0x0c(%ecx), %eax            
: (orig=0x05656259a)0xc70100000000            mov $0x00000000, (%ecx)         
leal-based check (opsize = 4)
: (orig=0x0565625a0)0x894108                  mov %eax, 0x08(%ecx)            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x0565625a3)0x0fb68694010000          movzx 0x00000194(%esi), %eax    
leal-based check (opsize = 4)
: (orig=0x0565625aa)0xe89cba0000              call +0x0000ba9c                
action_call
start fun: action_call(*addr=0x565625aa, *transl_addr=0x3ecb06de, length=5)
original call_target: 0x5656e04breturn_address = 0565625af
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecb06ff, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecb04c6,   next_tu=0x5656e04f (len: 583)
ff = 476
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565625af)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0714start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565625af, *transl_address=0x3ecb0714)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216668)


 opt flags pass 
... tests reg 6 with reg 6

BEGIN FLAG ANALYSISCAdaddaaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x0565625af)0x81c3453a0100            add $0x00013a45, %ebx           
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x0565625b5)0x83e09f                  and $0x9f, %eax                 
opcode table: 0x00243f78 -> 0x00216640 (0x00216668)
: (orig=0x0565625b8)0x83c820                  or $0x20, %eax                  
: (orig=0x0565625bb)0x888694010000            mov %eax, 0x00000194(%esi)      
leal-based check (opsize = 1)
: (orig=0x0565625c1)0x8b75b4                  mov 0xb4(%ebp), %esi            
leal-based check (opsize = 4)
: (orig=0x0565625c4)0x31c0                    xor %eax, %eax                  
: (orig=0x0565625c6)0xc7459801000000          mov $0x00000001, 0x98(%ebp)     
leal-based check (opsize = 4)
: (orig=0x0565625cd)0x85f6                    test %esi, %esi                 
: (orig=0x0565625cf)0x7447                    jz +0x47                        
action_jcc
start fun: action_jcc(*addr=0x565625cf, *transl_addr=0x3ecb0769, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562618)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b6a8, target: 0x56562618, origin: 0x3ecb076bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565625d1)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b638, target: 0x565625d1, origin: 0x3ecb0770end fun: -> close, transl_length=11
end fun: -> 0x3ecb0714,   next_tu=0x565625d1 (len: 96)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562618)
end fun: -> 0x00000000
ff = 477
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562618)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb077bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56562618, *transl_address=0x3ecb077b)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdddddddddddddddadEND FLAG ANALYSIS: (orig=0x056562618)0x8bb30c090000            mov 0x0000090c(%ebx), %esi      
leal-based check (opsize = 4)
: (orig=0x05656261e)0x01c8                    add %ecx, %eax                  
: (orig=0x056562620)0x89459c                  mov %eax, 0x9c(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056562623)0xc7400800000000          mov $0x00000000, 0x08(%eax)     
leal-based check (opsize = 4)
: (orig=0x05656262a)0xc745dc00000000          mov $0x00000000, 0xdc(%ebp)     
leal-based check (opsize = 4)
: (orig=0x056562631)0x89b578ffffff            mov %esi, 0xffffff78(%ebp)      
leal-based check (opsize = 4)
: (orig=0x056562637)0x8db30cc5feff            lea 0xfffec50c(%ebx), %esi      
: (orig=0x05656263d)0xc7830c09000000000000    mov $0x00000000, 0x0000090c(%ebx) 
leal-based check (opsize = 4)
: (orig=0x056562647)0x894d90                  mov %ecx, 0x90(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656264a)0xc7857cffffff00000000    mov $0x00000000, 0xffffff7c(%ebp) 
leal-based check (opsize = 4)
: (orig=0x056562654)0xc7458000000000          mov $0x00000000, 0x80(%ebp)     
leal-based check (opsize = 4)
: (orig=0x05656265b)0x8975a4                  mov %esi, 0xa4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656265e)0x8b4590                  mov 0x90(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x056562661)0xc745ac00000000          mov $0x00000000, 0xac(%ebp)     
leal-based check (opsize = 4)
: (orig=0x056562668)0x8b7004                  mov 0x04(%eax), %esi            
leal-based check (opsize = 4)
: (orig=0x05656266b)0xc70001000000            mov $0x00000001, (%eax)         
leal-based check (opsize = 4)
: (orig=0x056562671)0x8b865c010000            mov 0x0000015c(%esi), %eax      
leal-based check (opsize = 4)
: (orig=0x056562677)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056562679)0x0f84ea010000            jz +0x000001ea                  
action_jcc
start fun: action_jcc(*addr=0x56562679, *transl_addr=0x3ecb08ea, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562869)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b6e0, target: 0x56562869, origin: 0x3ecb08ecstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656267f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b718, target: 0x5656267f, origin: 0x3ecb08f1end fun: -> close, transl_length=11
end fun: -> 0x3ecb077b,   next_tu=0x5656267f (len: 378)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562869)
end fun: -> 0x00000000
ff = 478
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562869)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb08fcstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56562869, *transl_address=0x3ecb08fc)
end fun:  
opcode escape found: 0f

 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x056562869)0x3b7588                  cmp 0x88(%ebp), %esi            
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05656286c)0x0f849b030000            jz +0x0000039b                  
action_jcc
start fun: action_jcc(*addr=0x5656286c, *transl_addr=0x3ecb0910, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562c0d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b6a8, target: 0x56562c0d, origin: 0x3ecb0912start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562872)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b750, target: 0x56562872, origin: 0x3ecb0917end fun: -> close, transl_length=11
end fun: -> 0x3ecb08fc,   next_tu=0x56562872 (len: 31)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562c0d)
end fun: -> 0x00000000
ff = 479
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562c0d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0922start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56562c0d, *transl_address=0x3ecb0922)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdddEND FLAG ANALYSIS: (orig=0x056562c0d)0xc745ac00000000          mov $0x00000000, 0xac(%ebp)     
leal-based check (opsize = 4)
: (orig=0x056562c14)0xe966faffff              jmp +0xfffffa66                 
original_addr=056562c14 / addr=056562c14
start fun: action_jmp(*addr=0x56562c14, *transl_addr=0x3ecb093a, length=5)
action_jmp
jump_target = 0fffffa66 + 056562c14 + 05original jmp_target: 0x5656267fstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656267f)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
: (orig=0x05656267f)0x8b4624                  mov 0x24(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x056562682)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x056562684)0x0f8409010000            jz +0x00000109                  
action_jcc
start fun: action_jcc(*addr=0x56562684, *transl_addr=0x3ecb0950, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562793)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b6e0, target: 0x56562793, origin: 0x3ecb0952start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656268a)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b788, target: 0x5656268a, origin: 0x3ecb0957end fun: -> close, transl_length=11
end fun: -> 0x3ecb0922,   next_tu=0x5656268a (len: 57)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656268a)
end fun: -> 0x00000000
ff = 480
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656268a)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0962start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656268a, *transl_address=0x3ecb0962)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdddddddddddEND FLAG ANALYSIS: (orig=0x05656268a)0x8b4634                  mov 0x34(%esi), %eax            
leal-based check (opsize = 4)
: (orig=0x05656268d)0x8b7e08                  mov 0x08(%esi), %edi            
leal-based check (opsize = 4)
: (orig=0x056562690)0x8b4d08                  mov 0x08(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x056562693)0x8975c4                  mov %esi, 0xc4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x056562696)0x8b4004                  mov 0x04(%eax), %eax            
leal-based check (opsize = 4)
: (orig=0x056562699)0x894dc8                  mov %ecx, 0xc8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656269c)0x8945a8                  mov %eax, 0xa8(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656269f)0x8945d0                  mov %eax, 0xd0(%ebp)            
leal-based check (opsize = 4)
: (orig=0x0565626a2)0x8b450c                  mov 0x0c(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x0565626a5)0x8945cc                  mov %eax, 0xcc(%ebp)            
leal-based check (opsize = 4)
: (orig=0x0565626a8)0x8b07                    mov (%edi), %eax                
leal-based check (opsize = 4)
: (orig=0x0565626aa)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x0565626ac)0x0f84fd000000            jz +0x000000fd                  
action_jcc
start fun: action_jcc(*addr=0x565626ac, *transl_addr=0x3ecb0a3e, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565627af)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b6a8, target: 0x565627af, origin: 0x3ecb0a40start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565626b2)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b7c0, target: 0x565626b2, origin: 0x3ecb0a45end fun: -> close, transl_length=11
end fun: -> 0x3ecb0962,   next_tu=0x565626b2 (len: 231)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565626b2)
end fun: -> 0x00000000
ff = 481
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565626b2)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0a50start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565626b2, *transl_address=0x3ecb0a50)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
opcode escape found: 0f

 opt flags pass 
... cmp imm8 01 with reg 0

BEGIN FLAG ANALYSISCAddddEND FLAG ANALYSIS: (orig=0x0565626b2)0x8b5590                  mov 0x90(%ebp), %edx            
leal-based check (opsize = 4)
: (orig=0x0565626b5)0xc745b000000000          mov $0x00000000, 0xb0(%ebp)     
leal-based check (opsize = 4)
: (orig=0x0565626bc)0x89558c                  mov %edx, 0x8c(%ebp)            
leal-based check (opsize = 4)
: (orig=0x0565626bf)0xeb2a                    jmp +0x2a                       
original_addr=0565626bf / addr=0565626bf
start fun: action_jmp(*addr=0x565626bf, *transl_addr=0x3ecb0a90, length=2)
action_jmp
original jmp_target: 0x565626ebstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565626eb)
end fun: -> 0x00000000
end fun: -> open, transl_length=0
opcode table: 0x00243f78 -> 0x00216640 (0x00216758)
: (orig=0x0565626eb)0x83f801                  cmp $0x01, %eax                 
opcode escape found: 0f: (orig=0x0565626ee)0x0f8585080000            jnz +0x00000885                 
action_jcc
start fun: action_jcc(*addr=0x565626ee, *transl_addr=0x3ecb0a93, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562f79)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b788, target: 0x56562f79, origin: 0x3ecb0a95start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565626f4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b7f8, target: 0x565626f4, origin: 0x3ecb0a9aend fun: -> close, transl_length=11
end fun: -> 0x3ecb0a50,   next_tu=0x565626f4 (len: 78)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565626f4)
end fun: -> 0x00000000
ff = 482
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565626f4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0aa5start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565626f4, *transl_address=0x3ecb0aa5)
end fun:  
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)


 opt flags pass 

BEGIN FLAG ANALYSISCAadaddadddddddddddadEND FLAG ANALYSIS: (orig=0x0565626f4)0x8b4da8                  mov 0xa8(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x0565626f7)0x034f04                  add 0x04(%edi), %ecx            
leal-based check (opsize = 4)
: (orig=0x0565626fa)0x894db4                  mov %ecx, 0xb4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x0565626fd)0xc744240424000000        mov $0x00000024, 0x04(%esp)     
leal-based check (opsize = 4)
: (orig=0x056562705)0x890c24                  mov %ecx, (%esp)                
leal-based check (opsize = 4)
: (orig=0x056562708)0xe8f3ad0000              call +0x0000adf3                
action_call
start fun: action_call(*addr=0x56562708, *transl_addr=0x3ecb0b0f, length=5)
original call_target: 0x5656d500return_address = 05656270d
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d500)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d500)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05656d501)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05656d502)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x05656d503)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05656d504)0x8b442414                mov 0x14(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656d508)0x8b542418                mov 0x18(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656d50c)0x89c7                    mov %eax, %edi                  
: (orig=0x05656d50e)0x31c9                    xor %ecx, %ecx                  
: (orig=0x05656d510)0x88d6                    mov %edx, %esi                  
: (orig=0x05656d512)0x88d1                    mov %edx, %ecx                  
opcode table: 0x00244928 -> 0x002168c0 (0x00216960)
: (orig=0x05656d514)0xc1e210                  shl $0x10, %edx                 
: (orig=0x05656d517)0x88cd                    mov %ecx, %ebp                  
: (orig=0x05656d519)0x09ca                    or %ecx, %edx                   
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x05656d51b)0x83e703                  and $0x03, %edi                 
: (orig=0x05656d51e)0x7441                    jz +0x41                        
action_jcc
start fun: action_jcc(*addr=0x5656d51e, *transl_addr=0x3ecb0ba6, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d561)
end fun: -> 0x3eca8103
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d520)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b7c0, target: 0x5656d520, origin: 0x3ecb0badend fun: -> close, transl_length=11
end fun: -> 0x3ecb0aa5,   next_tu=0x5656d520 (len: 268)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d692)
end fun: -> 0x3ecab2b1
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d699)
end fun: -> 0x00000000
ff = 483
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d699)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0bb8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d699, *transl_address=0x3ecb0bb8)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656d699)0x80f900                  cmp $0x00, %ecx                 
: (orig=0x05656d69c)0x741c                    jz +0x1c                        
action_jcc
start fun: action_jcc(*addr=0x5656d69c, *transl_addr=0x3ecb0bbb, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6ba)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99648, target: 0x5656d6ba, origin: 0x3ecb0bbdstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d69e)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b7f8, target: 0x5656d69e, origin: 0x3ecb0bc2end fun: -> close, transl_length=11
end fun: -> 0x3ecb0bb8,   next_tu=0x5656d69e (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d69e)
end fun: -> 0x00000000
ff = 484
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d69e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0bcdstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d69e, *transl_address=0x3ecb0bcd)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCAbEND FLAG ANALYSIS: (orig=0x05656d69e)0x40                      inc %eax                        
: (orig=0x05656d69f)0x38d5                    cmp %edx, %ebp                  
: (orig=0x05656d6a1)0x74ea                    jz +0xea                        
action_jcc
start fun: action_jcc(*addr=0x5656d6a1, *transl_addr=0x3ecb0bd1, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d68d)
end fun: -> 0x3eca81d8
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6a3)
end fun: -> 0x00000000
allocated trampoline: 0x3ec99728, target: 0x5656d6a3, origin: 0x3ecb0bd8end fun: -> close, transl_length=11
end fun: -> 0x3ecb0bcd,   next_tu=0x5656d6a3 (len: 15)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6a3)
end fun: -> 0x00000000
ff = 485
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6a3)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0be3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d6a3, *transl_address=0x3ecb0be3)
end fun:  
opcode table: 0x00243f00 -> 0x00216280 (0x00216398)


 opt flags pass 

BEGIN FLAG ANALYSISCAEND FLAG ANALYSISopcode table: 0x00243f00 -> 0x00216280 (0x00216398)
: (orig=0x05656d6a3)0x80fd00                  cmp $0x00, %ebp                 
: (orig=0x05656d6a6)0x7412                    jz +0x12                        
action_jcc
start fun: action_jcc(*addr=0x5656d6a6, *transl_addr=0x3ecb0be6, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6ba)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b7f8, target: 0x5656d6ba, origin: 0x3ecb0be8start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6a8)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b830, target: 0x5656d6a8, origin: 0x3ecb0bedend fun: -> close, transl_length=11
end fun: -> 0x3ecb0be3,   next_tu=0x5656d6a8 (len: 14)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6ba)
end fun: -> 0x00000000
ff = 486
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6ba)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0bf8start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656d6ba, *transl_address=0x3ecb0bf8)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISddddddaEND FLAG ANALYSIS: (orig=0x05656d6ba)0x31c0                    xor %eax, %eax                  
: (orig=0x05656d6bc)0xebcf                    jmp +0xcf                       
original_addr=05656d6bc / addr=05656d6bc
start fun: action_jmp(*addr=0x5656d6bc, *transl_addr=0x3ecb0bfa, length=2)
action_jmp
original jmp_target: 0x5656d68dstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d68d)
end fun: -> 0x3eca81d8
translated jmp_target: 0x3eca81d8end fun: -> close, transl_length=5
: (orig=0x05656d6be)0x90                      nop                             
: (orig=0x05656d6bf)0x90                      nop                             
: (orig=0x05656d6c0)0x8b4c2404                mov 0x04(%esp), %ecx            
leal-based check (opsize = 0)
warning: size zero
: (orig=0x05656d6c4)0x8b542408                mov 0x08(%esp), %edx            
leal-based check (opsize = 0)
warning: size zero
: (orig=0x05656d6c8)0x8a01                    mov (%ecx), %eax                
finishing TU because instruction limit was hit, invokingtranslation function on 0x5656d6caallocated trampoline: 0x3ec99728, target: 0x5656d6ca, origin: 0x3ecb0c2eend fun: -> 0x3ecb0bf8,   next_tu=0x5656d6ca (len: 46)
ff = 487
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656270d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0c32start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656270d, *transl_address=0x3ecb0c32)
end fun:  
opcode escape found: 0f

 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05656270d)0x85c0                    test %eax, %eax                 
opcode escape found: 0f: (orig=0x05656270f)0x0f8595060000            jnz +0x00000695                 
action_jcc
start fun: action_jcc(*addr=0x5656270f, *transl_addr=0x3ecb0c34, length=6)
processing two-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562daa)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b7f8, target: 0x56562daa, origin: 0x3ecb0c36start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562715)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b868, target: 0x56562715, origin: 0x3ecb0c3bend fun: -> close, transl_length=11
end fun: -> 0x3ecb0c32,   next_tu=0x56562715 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562715)
end fun: -> 0x00000000
ff = 488
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562715)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0c46start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56562715, *transl_address=0x3ecb0c46)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddddddddddddddEND FLAG ANALYSIS: (orig=0x056562715)0x8b45b4                  mov 0xb4(%ebp), %eax            
leal-based check (opsize = 4)
: (orig=0x056562718)0x8945d4                  mov %eax, 0xd4(%ebp)            
leal-based check (opsize = 4)
: (orig=0x05656271b)0x8d45c4                  lea 0xc4(%ebp), %eax            
: (orig=0x05656271e)0x89442404                mov %eax, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x056562722)0x8b4da4                  mov 0xa4(%ebp), %ecx            
leal-based check (opsize = 4)
: (orig=0x056562725)0x8d55dc                  lea 0xdc(%ebp), %edx            
: (orig=0x056562728)0x8d45e0                  lea 0xe0(%ebp), %eax            
: (orig=0x05656272b)0x890c24                  mov %ecx, (%esp)                
leal-based check (opsize = 4)
: (orig=0x05656272e)0x8d4de7                  lea 0xe7(%ebp), %ecx            
: (orig=0x056562731)0xe8fa180000              call +0x000018fa                
action_call
start fun: action_call(*addr=0x56562731, *transl_addr=0x3ecb0cbc, length=5)
original call_target: 0x56564030return_address = 056562736
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564030)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x056564030)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x056564031)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x056564032)0xe814a00000              call +0x0000a014                
action_call
start fun: action_call(*addr=0x56564032, *transl_addr=0x3ecb0cef, length=5)
original call_target: 0x5656e04breturn_address = 056564037
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecb0d10, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecb0c46,   next_tu=0x5656e04f (len: 216)
ff = 489
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564037)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0d25start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56564037, *transl_address=0x3ecb0d25)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217310)


 opt flags pass 

BEGIN FLAG ANALYSISdddddaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x056564037)0x81c3bd1f0100            add $0x00011fbd, %ebx           
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
: (orig=0x05656403d)0x81ecd4000000            sub $0x000000d4, %esp           
: (orig=0x056564043)0x89442414                mov %eax, 0x14(%esp)            
leal-based check (opsize = 4)
: (orig=0x056564047)0x89542418                mov %edx, 0x18(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656404b)0x894c241c                mov %ecx, 0x1c(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656404f)0xc744242800000000        mov $0x00000000, 0x28(%esp)     
leal-based check (opsize = 4)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217310)
: (orig=0x056564057)0xff9344050000            call 0x00000544(%ebx)           
start fun: action_jmp_indirect(*addr=0x56564057, *transl_addr=0x3ecb0d8d, length=6)
end fun: -> close, transl_length=25
end fun: -> 0x3ecb0d25,   next_tu=0x5656405d (len: 129)
ff = 490
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556220)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0dadstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56556220, *transl_address=0x3ecb0dad)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddEND FLAG ANALYSIS: (orig=0x056556220)0xe8227e0100              call +0x00017e22                
action_call
start fun: action_call(*addr=0x56556220, *transl_addr=0x3ecb0dad, length=5)
original call_target: 0x5656e047return_address = 056556225
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e047)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e047)0x8b0c24                  mov (%esp), %ecx                
leal-based check (opsize = 4)
: (orig=0x05656e04a)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04a, *transl_addr=0x3ecb0dce, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecb0dad,   next_tu=0x5656e04b (len: 47)
ff = 491
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56556225)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0de3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56556225, *transl_address=0x3ecb0de3)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)


 opt flags pass 

BEGIN FLAG ANALYSISddaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x056556225)0x81c1cffd0100            add $0x0001fdcf, %ecx           
: (orig=0x05655622b)0x8d819c080000            lea 0x0000089c(%ecx), %eax      
: (orig=0x056556231)0xc3                      ret                             
start fun: action_ret(*addr=0x56556231, *transl_addr=0x3ecb0df0, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecb0de3,   next_tu=0x56556232 (len: 27)
ff = 492
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656405d)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0e05start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656405d, *transl_address=0x3ecb0e05)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdaddddddddddddddddEND FLAG ANALYSIS: (orig=0x05656405d)0x89442410                mov %eax, 0x10(%esp)            
leal-based check (opsize = 4)
: (orig=0x056564061)0x8b00                    mov (%eax), %eax                
leal-based check (opsize = 4)
: (orig=0x056564063)0xc744240400000000        mov $0x00000000, 0x04(%esp)     
leal-based check (opsize = 4)
: (orig=0x05656406b)0x898424cc000000          mov %eax, 0x000000cc(%esp)      
leal-based check (opsize = 4)
: (orig=0x056564072)0x8d442430                lea 0x30(%esp), %eax            
: (orig=0x056564076)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
: (orig=0x056564079)0xe8a2920000              call +0x000092a2                
action_call
start fun: action_call(*addr=0x56564079, *transl_addr=0x3ecb0e7c, length=5)
original call_target: 0x5656d320return_address = 05656407e
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d320)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d320)0x8b442404                mov 0x04(%esp), %eax            
leal-based check (opsize = 4)
: (orig=0x05656d324)0x8918                    mov %ebx, (%eax)                
leal-based check (opsize = 4)
: (orig=0x05656d326)0x897004                  mov %esi, 0x04(%eax)            
leal-based check (opsize = 4)
: (orig=0x05656d329)0x897808                  mov %edi, 0x08(%eax)            
leal-based check (opsize = 4)
: (orig=0x05656d32c)0x8d4c2404                lea 0x04(%esp), %ecx            
: (orig=0x05656d330)0x894810                  mov %ecx, 0x10(%eax)            
leal-based check (opsize = 4)
: (orig=0x05656d333)0x8b0c24                  mov (%esp), %ecx                
leal-based check (opsize = 4)
: (orig=0x05656d336)0x894814                  mov %ecx, 0x14(%eax)            
leal-based check (opsize = 4)
: (orig=0x05656d339)0x89680c                  mov %ebp, 0x0c(%eax)            
leal-based check (opsize = 4)
: (orig=0x05656d33c)0x31c0                    xor %eax, %eax                  
: (orig=0x05656d33e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656d33e, *transl_addr=0x3ecb0f30, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecb0e05,   next_tu=0x5656d33f (len: 313)
ff = 493
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656407e)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0f45start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656407e, *transl_address=0x3ecb0f45)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCDAEND FLAG ANALYSIS: (orig=0x05656407e)0x85c0                    test %eax, %eax                 
: (orig=0x056564080)0x89c6                    mov %eax, %esi                  
: (orig=0x056564082)0x7550                    jnz +0x50                       
action_jcc
start fun: action_jcc(*addr=0x56564082, *transl_addr=0x3ecb0f49, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565640d4)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b868, target: 0x565640d4, origin: 0x3ecb0f4bstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564084)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b8a0, target: 0x56564084, origin: 0x3ecb0f50end fun: -> close, transl_length=11
end fun: -> 0x3ecb0f45,   next_tu=0x56564084 (len: 15)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564084)
end fun: -> 0x00000000
ff = 494
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56564084)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0f5bstart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56564084, *transl_address=0x3ecb0f5b)
end fun:  
opcode table: 0x002452d8 -> 0x002172c0 (0x00217310)


 opt flags pass 

BEGIN FLAG ANALYSISddddddEND FLAG ANALYSIS: (orig=0x056564084)0x8b542410                mov 0x10(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x056564088)0x8d442424                lea 0x24(%esp), %eax            
: (orig=0x05656408c)0x8902                    mov %eax, (%edx)                
leal-based check (opsize = 4)
: (orig=0x05656408e)0x8b8424e4000000          mov 0x000000e4(%esp), %eax      
leal-based check (opsize = 4)
: (orig=0x056564095)0x890424                  mov %eax, (%esp)                
leal-based check (opsize = 4)
opcode table: 0x002452d8 -> 0x002172c0 (0x00217310)
: (orig=0x056564098)0xff9424e0000000          call 0x000000e0(%esp)           
start fun: action_jmp_indirect(*addr=0x56564098, *transl_addr=0x3ecb0fb8, length=7)
end fun: -> close, transl_length=26
end fun: -> 0x3ecb0f5b,   next_tu=0x5656409f (len: 119)
ff = 495
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56562500)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb0fd9start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x56562500, *transl_address=0x3ecb0fd9)
end fun:  
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
opcode escape found: 0fopcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
opcode escape found: 0fopcode escape found: 0fopcode table: 0x00243f28 -> 0x002163c0 (0x00216488)


 opt flags pass 

BEGIN FLAG ANALYSISddddaddddddddddcD4.4.4.1.addddddddaEND FLAG ANALYSISopcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x056562500)0x83ec1c                  sub $0x1c, %esp                 
: (orig=0x056562503)0xb901000000              mov $0x00000001, %ecx           
: (orig=0x056562508)0x89742410                mov %esi, 0x10(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656250c)0x8b742420                mov 0x20(%esp), %esi            
leal-based check (opsize = 4)
: (orig=0x056562510)0x897c2414                mov %edi, 0x14(%esp)            
leal-based check (opsize = 4)
: (orig=0x056562514)0x896c2418                mov %ebp, 0x18(%esp)            
leal-based check (opsize = 4)
: (orig=0x056562518)0x8b06                    mov (%esi), %eax                
leal-based check (opsize = 4)
opcode escape found: 0f: (orig=0x05656251a)0x0fb69094010000          movzx 0x00000194(%eax), %edx    
leal-based check (opsize = 4)
: (orig=0x056562521)0x8b7818                  mov 0x18(%eax), %edi            
leal-based check (opsize = 4)
opcode table: 0x00243f78 -> 0x00216640 (0x002166e0)
: (orig=0x056562524)0x83e203                  and $0x03, %edx                 
: (orig=0x056562527)0x84d2                    test %edx, %edx                 
opcode escape found: 0f: (orig=0x056562529)0x0fb6ea                  movzx %edx, %ebp                
SAV
: (orig=0x05656252c)0x8b5610                  mov 0x10(%esi), %edx            
leal-based check (opsize = 4)
: (orig=0x05656252f)0x897c2408                mov %edi, 0x08(%esp)            
leal-based check (opsize = 4)
: (orig=0x056562533)0x8b7e08                  mov 0x08(%esi), %edi            
leal-based check (opsize = 4)
RST
opcode escape found: 0f: (orig=0x056562536)0x0f45cd                  cmovnz %ebp, %ecx               
: (orig=0x056562539)0x897c2404                mov %edi, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x05656253d)0x8b7e04                  mov 0x04(%esi), %edi            
leal-based check (opsize = 4)
: (orig=0x056562540)0x893c24                  mov %edi, (%esp)                
leal-based check (opsize = 4)
: (orig=0x056562543)0xe878adffff              call +0xffffad78                
action_call
start fun: action_call(*addr=0x56562543, *transl_addr=0x3ecb112e, length=5)
original call_target: 0x5655d2c0return_address = 056562548
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d2c0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05655d2c0)0x55                      push %ebp                       
pop-based check
CHECK (stack write)
: (orig=0x05655d2c1)0x89c5                    mov %eax, %ebp                  
: (orig=0x05655d2c3)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x05655d2c4)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x05655d2c5)0x89d6                    mov %edx, %esi                  
: (orig=0x05655d2c7)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
opcode table: 0x00243f28 -> 0x002163c0 (0x00216488)
: (orig=0x05655d2c8)0x81ec6c020000            sub $0x0000026c, %esp           
: (orig=0x05655d2ce)0x8b842488020000          mov 0x00000288(%esp), %eax      
leal-based check (opsize = 4)
: (orig=0x05655d2d5)0xe8710d0100              call +0x00010d71                
action_call
start fun: action_call(*addr=0x5655d2d5, *transl_addr=0x3ecb11ad, length=5)
original call_target: 0x5656e04breturn_address = 05655d2da
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecb11ce, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecb0fd9,   next_tu=0x5656e04f (len: 515)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d334)
end fun: -> 0x00000000
ff = 496
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d334)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb11e3start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d334, *transl_address=0x3ecb11e3)
end fun:  
opcode escape found: 0f

 opt flags pass 
... test imm8 02 with eax

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSISopcode escape found: 0f: (orig=0x05655d334)0x0fb68795010000          movzx 0x00000195(%edi), %eax    
leal-based check (opsize = 4)
: (orig=0x05655d33b)0xa802                    test $0x02, %al                 
: (orig=0x05655d33d)0x75ee                    jnz +0xee                       
action_jcc
start fun: action_jcc(*addr=0x5655d33d, *transl_addr=0x3ecb1200, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d32d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b8a0, target: 0x5655d32d, origin: 0x3ecb1202start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d33f)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b8d8, target: 0x5655d33f, origin: 0x3ecb1207end fun: -> close, transl_length=11
end fun: -> 0x3ecb11e3,   next_tu=0x5655d33f (len: 40)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d33f)
end fun: -> 0x00000000
ff = 497
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d33f)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb1212start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d33f, *transl_address=0x3ecb1212)
end fun:  


 opt flags pass 
... test imm8 020 with eax

BEGIN FLAG ANALYSISCAEND FLAG ANALYSIS: (orig=0x05655d33f)0xa820                    test $0x20, %al                 
: (orig=0x05655d341)0x75ea                    jnz +0xea                       
action_jcc
start fun: action_jcc(*addr=0x5655d341, *transl_addr=0x3ecb1214, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d32d)
end fun: -> 0x00000000
allocated trampoline: 0x3ec97ee0, target: 0x5655d32d, origin: 0x3ecb1216start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d343)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b910, target: 0x5655d343, origin: 0x3ecb121bend fun: -> close, transl_length=11
end fun: -> 0x3ecb1212,   next_tu=0x5655d343 (len: 13)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d343)
end fun: -> 0x00000000
ff = 498
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5655d343)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb1226start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5655d343, *transl_address=0x3ecb1226)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISdddddddddddEND FLAG ANALYSIS: (orig=0x05655d343)0x89fa                    mov %edi, %edx                  
: (orig=0x05655d345)0x89f0                    mov %esi, %eax                  
: (orig=0x05655d347)0xe8447e0000              call +0x00007e44                
action_call
start fun: action_call(*addr=0x5655d347, *transl_addr=0x3ecb122a, length=5)
original call_target: 0x56565190return_address = 05655d34c
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x56565190)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x056565190)0x57                      push %edi                       
pop-based check
CHECK (stack write)
: (orig=0x056565191)0x89d7                    mov %edx, %edi                  
: (orig=0x056565193)0x56                      push %esi                       
pop-based check
CHECK (stack write)
: (orig=0x056565194)0x89c6                    mov %eax, %esi                  
: (orig=0x056565196)0x53                      push %ebx                       
pop-based check
CHECK (stack write)
: (orig=0x056565197)0xe8af8e0000              call +0x00008eaf                
action_call
start fun: action_call(*addr=0x56565197, *transl_addr=0x3ecb1274, length=5)
original call_target: 0x5656e04breturn_address = 05656519c
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656e04b)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656e04b)0x8b1c24                  mov (%esp), %ebx                
leal-based check (opsize = 4)
: (orig=0x05656e04e)0xc3                      ret                             
start fun: action_ret(*addr=0x5656e04e, *transl_addr=0x3ecb1295, length=1)
end fun: -> close, transl_length=14
end fun: -> 0x3ecb1226,   next_tu=0x5656e04f (len: 125)
ff = 499
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656519c)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb12aastart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x5656519c, *transl_address=0x3ecb12aa)
end fun:  
opcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)


 opt flags pass 

BEGIN FLAG ANALYSISCAdddddddaaEND FLAG ANALYSISopcode table: 0x00243f28 -> 0x002163c0 (0x002163c0)
: (orig=0x05656519c)0x81c3580e0100            add $0x00010e58, %ebx           
opcode table: 0x00243f78 -> 0x00216640 (0x00216708)
: (orig=0x0565651a2)0x83ec10                  sub $0x10, %esp                 
: (orig=0x0565651a5)0x8b4204                  mov 0x04(%edx), %eax            
leal-based check (opsize = 4)
: (orig=0x0565651a8)0x893424                  mov %esi, (%esp)                
leal-based check (opsize = 4)
: (orig=0x0565651ab)0x89442404                mov %eax, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x0565651af)0xe80c850000              call +0x0000850c                
action_call
start fun: action_call(*addr=0x565651af, *transl_addr=0x3ecb12f1, length=5)
original call_target: 0x5656d6c0return_address = 0565651b4
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6c0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d6c0)0x8b4c2404                mov 0x04(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656d6c4)0x8b542408                mov 0x08(%esp), %edx            
leal-based check (opsize = 4)
: (orig=0x05656d6c8)0x8a01                    mov (%ecx), %eax                
leal-based check (opsize = 1)
: (orig=0x05656d6ca)0x3a02                    cmp (%edx), %eax                
leal-based check (opsize = 1)
: (orig=0x05656d6cc)0x7509                    jnz +0x09                       
action_jcc
start fun: action_jcc(*addr=0x5656d6cc, *transl_addr=0x3ecb134c, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6d7)
end fun: -> 0x3ecae2f5
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6ce)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b910, target: 0x5656d6ce, origin: 0x3ecb1353end fun: -> close, transl_length=11
end fun: -> 0x3ecb12aa,   next_tu=0x5656d6ce (len: 173)
ff = 500
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565651b4)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb135estart fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565651b4, *transl_address=0x3ecb135e)
end fun:  


 opt flags pass 
... tests reg 0 with reg 0

BEGIN FLAG ANALYSISCAdEND FLAG ANALYSIS: (orig=0x0565651b4)0xba01000000              mov $0x00000001, %edx           
: (orig=0x0565651b9)0x85c0                    test %eax, %eax                 
: (orig=0x0565651bb)0x7429                    jz +0x29                        
action_jcc
start fun: action_jcc(*addr=0x565651bb, *transl_addr=0x3ecb1365, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565651e6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b8d8, target: 0x565651e6, origin: 0x3ecb1367start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565651bd)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b948, target: 0x565651bd, origin: 0x3ecb136cend fun: -> close, transl_length=11
end fun: -> 0x3ecb135e,   next_tu=0x565651bd (len: 18)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565651bd)
end fun: -> 0x00000000
ff = 501
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565651bd)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb1377start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565651bd, *transl_address=0x3ecb1377)
end fun:  


 opt flags pass 
... tests reg 7 with reg 7

BEGIN FLAG ANALYSISCAadEND FLAG ANALYSIS: (orig=0x0565651bd)0x8b7f1c                  mov 0x1c(%edi), %edi            
leal-based check (opsize = 4)
: (orig=0x0565651c0)0x30d2                    xor %edx, %edx                  
: (orig=0x0565651c2)0x85ff                    test %edi, %edi                 
: (orig=0x0565651c4)0x7509                    jnz +0x09                       
action_jcc
start fun: action_jcc(*addr=0x565651c4, *transl_addr=0x3ecb138f, length=2)
processing one-byte jccstart fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565651cf)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b980, target: 0x565651cf, origin: 0x3ecb1391start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565651c6)
end fun: -> 0x00000000
allocated trampoline: 0x3ec9b9b8, target: 0x565651c6, origin: 0x3ecb1396end fun: -> close, transl_length=11
end fun: -> 0x3ecb1377,   next_tu=0x565651c6 (len: 35)
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565651cf)
end fun: -> 0x00000000
ff = 502
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x565651cf)
end fun: -> 0x00000000
tld->ts.transl_instr: 0x3ecb13a1start fun: fbt_ccache_add_entry(*tld=0x40cb4000, *orig_address=0x565651cf, *transl_address=0x3ecb13a1)
end fun:  


 opt flags pass 

BEGIN FLAG ANALYSISCAdddddddEND FLAG ANALYSIS: (orig=0x0565651cf)0x8b07                    mov (%edi), %eax                
leal-based check (opsize = 4)
: (orig=0x0565651d1)0x893424                  mov %esi, (%esp)                
leal-based check (opsize = 4)
: (orig=0x0565651d4)0x89442404                mov %eax, 0x04(%esp)            
leal-based check (opsize = 4)
: (orig=0x0565651d8)0xe8e3840000              call +0x000084e3                
action_call
start fun: action_call(*addr=0x565651d8, *transl_addr=0x3ecb13dd, length=5)
original call_target: 0x5656d6c0return_address = 0565651dd
start fun: fbt_ccache_find(*tld=0x40cb4000, *orig_address=0x5656d6c0)
end fun: -> 0x00000000
end fun: -> open, transl_length=13
: (orig=0x05656d6c0)0x8b4c2404                mov 0x04(%esp), %ecx            
leal-based check (opsize = 4)
: (orig=0x05656d6c4)0x8b5424